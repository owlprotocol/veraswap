import { Hex } from "viem";

export const ecdsaValidatorStorage = {
    type: "function",
    name: "ecdsaValidatorStorage",
    inputs: [{ name: "", type: "address", internalType: "address" }],
    outputs: [{ name: "owner", type: "address", internalType: "address" }],
    stateMutability: "view",
} as const;
export const isInitialized = {
    type: "function",
    name: "isInitialized",
    inputs: [{ name: "smartAccount", type: "address", internalType: "address" }],
    outputs: [{ name: "", type: "bool", internalType: "bool" }],
    stateMutability: "view",
} as const;
export const isModuleType = {
    type: "function",
    name: "isModuleType",
    inputs: [{ name: "typeID", type: "uint256", internalType: "uint256" }],
    outputs: [{ name: "", type: "bool", internalType: "bool" }],
    stateMutability: "pure",
} as const;
export const isValidSignatureWithSender = {
    type: "function",
    name: "isValidSignatureWithSender",
    inputs: [
        { name: "", type: "address", internalType: "address" },
        { name: "hash", type: "bytes32", internalType: "bytes32" },
        { name: "sig", type: "bytes", internalType: "bytes" },
    ],
    outputs: [{ name: "", type: "bytes4", internalType: "bytes4" }],
    stateMutability: "view",
} as const;
export const onInstall = {
    type: "function",
    name: "onInstall",
    inputs: [{ name: "_data", type: "bytes", internalType: "bytes" }],
    outputs: [],
    stateMutability: "payable",
} as const;
export const onUninstall = {
    type: "function",
    name: "onUninstall",
    inputs: [{ name: "", type: "bytes", internalType: "bytes" }],
    outputs: [],
    stateMutability: "payable",
} as const;
export const postCheck = {
    type: "function",
    name: "postCheck",
    inputs: [{ name: "hookData", type: "bytes", internalType: "bytes" }],
    outputs: [],
    stateMutability: "payable",
} as const;
export const preCheck = {
    type: "function",
    name: "preCheck",
    inputs: [
        { name: "msgSender", type: "address", internalType: "address" },
        { name: "value", type: "uint256", internalType: "uint256" },
        { name: "", type: "bytes", internalType: "bytes" },
    ],
    outputs: [{ name: "", type: "bytes", internalType: "bytes" }],
    stateMutability: "payable",
} as const;
export const validateUserOp = {
    type: "function",
    name: "validateUserOp",
    inputs: [
        {
            name: "userOp",
            type: "tuple",
            internalType: "struct PackedUserOperation",
            components: [
                { name: "sender", type: "address", internalType: "address" },
                { name: "nonce", type: "uint256", internalType: "uint256" },
                { name: "initCode", type: "bytes", internalType: "bytes" },
                { name: "callData", type: "bytes", internalType: "bytes" },
                { name: "accountGasLimits", type: "bytes32", internalType: "bytes32" },
                { name: "preVerificationGas", type: "uint256", internalType: "uint256" },
                { name: "gasFees", type: "bytes32", internalType: "bytes32" },
                { name: "paymasterAndData", type: "bytes", internalType: "bytes" },
                { name: "signature", type: "bytes", internalType: "bytes" },
            ],
        },
        { name: "userOpHash", type: "bytes32", internalType: "bytes32" },
    ],
    outputs: [{ name: "", type: "uint256", internalType: "uint256" }],
    stateMutability: "payable",
} as const;
export const OwnerRegistered = {
    type: "event",
    name: "OwnerRegistered",
    inputs: [
        { name: "kernel", type: "address", indexed: true, internalType: "address" },
        { name: "owner", type: "address", indexed: true, internalType: "address" },
    ],
    anonymous: false,
} as const;
export const AlreadyInitialized = {
    type: "error",
    name: "AlreadyInitialized",
    inputs: [{ name: "smartAccount", type: "address", internalType: "address" }],
} as const;
export const InvalidTargetAddress = {
    type: "error",
    name: "InvalidTargetAddress",
    inputs: [{ name: "target", type: "address", internalType: "address" }],
} as const;
export const NotInitialized = {
    type: "error",
    name: "NotInitialized",
    inputs: [{ name: "smartAccount", type: "address", internalType: "address" }],
} as const;
export const functions = [
    ecdsaValidatorStorage,
    isInitialized,
    isModuleType,
    isValidSignatureWithSender,
    onInstall,
    onUninstall,
    postCheck,
    preCheck,
    validateUserOp,
] as const;
export const events = [OwnerRegistered] as const;
export const errors = [AlreadyInitialized, InvalidTargetAddress, NotInitialized] as const;
export const abi = [...functions, ...events, ...errors] as const;

export const bytecode =
    "0x608080604052346015576106d4908161001a8239f35b5f80fdfe6080806040526004361015610012575f80fd5b5f3560e01c908163173bf7da146103b557816320709efc14610377575080636d61fe70146102f75780638a91b0e3146102885780639700320314610241578063d60b347f146101fa578063d68f602514610116578063ecd05961146100de5763f551e2ee1461007f575f80fd5b346100da5760603660031901126100da57610098610411565b5060443567ffffffffffffffff81116100da576100c76100be60209236906004016103e3565b90602435610574565b6040516001600160e01b03199091168152f35b5f80fd5b346100da5760203660031901126100da5760206004356001811490811561010b575b506040519015158152f35b600491501482610100565b60603660031901126100da5761012a610411565b60443567ffffffffffffffff81116100da5761014a9036906004016103e3565b5050335f908152602081905260409020546001600160a01b039081169116036101a9576020604061017a82610427565b5f8152815192839181835280519182918282860152018484015e5f828201840152601f01601f19168101030190f35b60405162461bcd60e51b815260206004820152602360248201527f454344534156616c696461746f723a2073656e646572206973206e6f74206f776044820152623732b960e91b6064820152608490fd5b346100da5760203660031901126100da576020610237610218610411565b6001600160a01b039081165f9081526020819052604090205416151590565b6040519015158152f35b60403660031901126100da5760043567ffffffffffffffff81116100da5761012060031982360301126100da57610280602091602435906004016104a2565b604051908152f35b60203660031901126100da5760043567ffffffffffffffff81116100da576102b49036906004016103e3565b5050335f908152602081905260409020546001600160a01b0316156102e457335f525f6020525f60408120555f80f35b63f91bd6f160e01b5f523360045260245ffd5b60203660031901126100da5760043567ffffffffffffffff81116100da576103239036906004016103e3565b6014116100da573560601c335f525f60205260405f20816bffffffffffffffffffffffff60a01b825416179055337fa5e1f8b4009110f5525798d04ae2125421a12d0590aa52c13682ff1bd3c492ca5f80a3005b346100da5760203660031901126100da576020906001600160a01b0361039b610411565b165f90815280835260409020546001600160a01b03168152f35b60203660031901126100da5760043567ffffffffffffffff81116100da576103e19036906004016103e3565b005b9181601f840112156100da5782359167ffffffffffffffff83116100da57602083818601950101116100da57565b600435906001600160a01b03821682036100da57565b6040519190601f01601f1916820167ffffffffffffffff81118382101761044d57604052565b634e487b7160e01b5f52604160045260245ffd5b92919267ffffffffffffffff821161044d57610486601f8301601f1916602001610427565b93828552828201116100da57815f926020928387013784010152565b335f908152602081905260409020546001600160a01b031691906101008101359036819003601e19018212156100da57019081359167ffffffffffffffff83116100da5760200182360381136100da576001600160a01b0361050e610508368685610461565b84610615565b16841461056c576020919091527b19457468657265756d205369676e6564204d6573736167653a0a33325f52603c6004206001600160a01b039261055d92610557913691610461565b90610615565b1603610567575f90565b600190565b505050505f90565b335f908152602081905260409020546001600160a01b0390811693929061059f610508368685610461565b168414610605576020919091527b19457468657265756d205369676e6564204d6573736167653a0a33325f52603c6004206001600160a01b03926105e892610557913691610461565b16036105f957630b135d3f60e11b90565b6001600160e01b031990565b50630b135d3f60e11b9392505050565b9190916040519280518060401461067c5760411461063f57505050505b638baa579f5f526004601cfd5b60209160608201515f1a835260408201516060525b5f5201516040526020600160805f825afa51915f6060526040523d61067a575050610632565b565b506020916040820151601b8160ff1c01845260018060ff1b031660605261065456fea264697066735822122015b5ce5bdc3456b32ea52abd2713c4ad7f32aa70da740331dee89e0cadcab0bf64736f6c634300081a0033" as Hex;
export const deployedBytecode =
    "0x6080806040526004361015610012575f80fd5b5f3560e01c908163173bf7da146103b557816320709efc14610377575080636d61fe70146102f75780638a91b0e3146102885780639700320314610241578063d60b347f146101fa578063d68f602514610116578063ecd05961146100de5763f551e2ee1461007f575f80fd5b346100da5760603660031901126100da57610098610411565b5060443567ffffffffffffffff81116100da576100c76100be60209236906004016103e3565b90602435610574565b6040516001600160e01b03199091168152f35b5f80fd5b346100da5760203660031901126100da5760206004356001811490811561010b575b506040519015158152f35b600491501482610100565b60603660031901126100da5761012a610411565b60443567ffffffffffffffff81116100da5761014a9036906004016103e3565b5050335f908152602081905260409020546001600160a01b039081169116036101a9576020604061017a82610427565b5f8152815192839181835280519182918282860152018484015e5f828201840152601f01601f19168101030190f35b60405162461bcd60e51b815260206004820152602360248201527f454344534156616c696461746f723a2073656e646572206973206e6f74206f776044820152623732b960e91b6064820152608490fd5b346100da5760203660031901126100da576020610237610218610411565b6001600160a01b039081165f9081526020819052604090205416151590565b6040519015158152f35b60403660031901126100da5760043567ffffffffffffffff81116100da5761012060031982360301126100da57610280602091602435906004016104a2565b604051908152f35b60203660031901126100da5760043567ffffffffffffffff81116100da576102b49036906004016103e3565b5050335f908152602081905260409020546001600160a01b0316156102e457335f525f6020525f60408120555f80f35b63f91bd6f160e01b5f523360045260245ffd5b60203660031901126100da5760043567ffffffffffffffff81116100da576103239036906004016103e3565b6014116100da573560601c335f525f60205260405f20816bffffffffffffffffffffffff60a01b825416179055337fa5e1f8b4009110f5525798d04ae2125421a12d0590aa52c13682ff1bd3c492ca5f80a3005b346100da5760203660031901126100da576020906001600160a01b0361039b610411565b165f90815280835260409020546001600160a01b03168152f35b60203660031901126100da5760043567ffffffffffffffff81116100da576103e19036906004016103e3565b005b9181601f840112156100da5782359167ffffffffffffffff83116100da57602083818601950101116100da57565b600435906001600160a01b03821682036100da57565b6040519190601f01601f1916820167ffffffffffffffff81118382101761044d57604052565b634e487b7160e01b5f52604160045260245ffd5b92919267ffffffffffffffff821161044d57610486601f8301601f1916602001610427565b93828552828201116100da57815f926020928387013784010152565b335f908152602081905260409020546001600160a01b031691906101008101359036819003601e19018212156100da57019081359167ffffffffffffffff83116100da5760200182360381136100da576001600160a01b0361050e610508368685610461565b84610615565b16841461056c576020919091527b19457468657265756d205369676e6564204d6573736167653a0a33325f52603c6004206001600160a01b039261055d92610557913691610461565b90610615565b1603610567575f90565b600190565b505050505f90565b335f908152602081905260409020546001600160a01b0390811693929061059f610508368685610461565b168414610605576020919091527b19457468657265756d205369676e6564204d6573736167653a0a33325f52603c6004206001600160a01b03926105e892610557913691610461565b16036105f957630b135d3f60e11b90565b6001600160e01b031990565b50630b135d3f60e11b9392505050565b9190916040519280518060401461067c5760411461063f57505050505b638baa579f5f526004601cfd5b60209160608201515f1a835260408201516060525b5f5201516040526020600160805f825afa51915f6060526040523d61067a575050610632565b565b506020916040820151601b8160ff1c01845260018060ff1b031660605261065456fea264697066735822122015b5ce5bdc3456b32ea52abd2713c4ad7f32aa70da740331dee89e0cadcab0bf64736f6c634300081a0033" as Hex;
export const ECDSAValidator = {
    abi,
    bytecode,
    deployedBytecode,
};
