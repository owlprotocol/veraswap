import { Hex } from "viem";

export const _constructor = {
    type: "constructor",
    inputs: [{ name: "_entryPoint", type: "address", internalType: "contract IEntryPoint" }],
    stateMutability: "nonpayable",
} as const;
export const addStake = {
    type: "function",
    name: "addStake",
    inputs: [{ name: "unstakeDelaySec", type: "uint32", internalType: "uint32" }],
    outputs: [],
    stateMutability: "payable",
} as const;
export const deposit = {
    type: "function",
    name: "deposit",
    inputs: [],
    outputs: [],
    stateMutability: "payable",
} as const;
export const entryPoint = {
    type: "function",
    name: "entryPoint",
    inputs: [],
    outputs: [{ name: "", type: "address", internalType: "contract IEntryPoint" }],
    stateMutability: "view",
} as const;
export const getDeposit = {
    type: "function",
    name: "getDeposit",
    inputs: [],
    outputs: [{ name: "", type: "uint256", internalType: "uint256" }],
    stateMutability: "view",
} as const;
export const owner = {
    type: "function",
    name: "owner",
    inputs: [],
    outputs: [{ name: "", type: "address", internalType: "address" }],
    stateMutability: "view",
} as const;
export const postOp = {
    type: "function",
    name: "postOp",
    inputs: [
        { name: "mode", type: "uint8", internalType: "enum IPaymaster.PostOpMode" },
        { name: "context", type: "bytes", internalType: "bytes" },
        { name: "actualGasCost", type: "uint256", internalType: "uint256" },
        { name: "actualUserOpFeePerGas", type: "uint256", internalType: "uint256" },
    ],
    outputs: [],
    stateMutability: "nonpayable",
} as const;
export const renounceOwnership = {
    type: "function",
    name: "renounceOwnership",
    inputs: [],
    outputs: [],
    stateMutability: "nonpayable",
} as const;
export const transferOwnership = {
    type: "function",
    name: "transferOwnership",
    inputs: [{ name: "newOwner", type: "address", internalType: "address" }],
    outputs: [],
    stateMutability: "nonpayable",
} as const;
export const unlockStake = {
    type: "function",
    name: "unlockStake",
    inputs: [],
    outputs: [],
    stateMutability: "nonpayable",
} as const;
export const validatePaymasterUserOp = {
    type: "function",
    name: "validatePaymasterUserOp",
    inputs: [
        {
            name: "userOp",
            type: "tuple",
            internalType: "struct PackedUserOperation",
            components: [
                { name: "sender", type: "address", internalType: "address" },
                { name: "nonce", type: "uint256", internalType: "uint256" },
                { name: "initCode", type: "bytes", internalType: "bytes" },
                { name: "callData", type: "bytes", internalType: "bytes" },
                { name: "accountGasLimits", type: "bytes32", internalType: "bytes32" },
                { name: "preVerificationGas", type: "uint256", internalType: "uint256" },
                { name: "gasFees", type: "bytes32", internalType: "bytes32" },
                { name: "paymasterAndData", type: "bytes", internalType: "bytes" },
                { name: "signature", type: "bytes", internalType: "bytes" },
            ],
        },
        { name: "userOpHash", type: "bytes32", internalType: "bytes32" },
        { name: "maxCost", type: "uint256", internalType: "uint256" },
    ],
    outputs: [
        { name: "context", type: "bytes", internalType: "bytes" },
        { name: "validationData", type: "uint256", internalType: "uint256" },
    ],
    stateMutability: "nonpayable",
} as const;
export const withdrawStake = {
    type: "function",
    name: "withdrawStake",
    inputs: [{ name: "withdrawAddress", type: "address", internalType: "address payable" }],
    outputs: [],
    stateMutability: "nonpayable",
} as const;
export const withdrawTo = {
    type: "function",
    name: "withdrawTo",
    inputs: [
        { name: "withdrawAddress", type: "address", internalType: "address payable" },
        { name: "amount", type: "uint256", internalType: "uint256" },
    ],
    outputs: [],
    stateMutability: "nonpayable",
} as const;
export const OwnershipTransferred = {
    type: "event",
    name: "OwnershipTransferred",
    inputs: [
        { name: "previousOwner", type: "address", indexed: true, internalType: "address" },
        { name: "newOwner", type: "address", indexed: true, internalType: "address" },
    ],
    anonymous: false,
} as const;
export const OwnableInvalidOwner = {
    type: "error",
    name: "OwnableInvalidOwner",
    inputs: [{ name: "owner", type: "address", internalType: "address" }],
} as const;
export const OwnableUnauthorizedAccount = {
    type: "error",
    name: "OwnableUnauthorizedAccount",
    inputs: [{ name: "account", type: "address", internalType: "address" }],
} as const;
export const functions = [
    _constructor,
    addStake,
    deposit,
    entryPoint,
    getDeposit,
    owner,
    postOp,
    renounceOwnership,
    transferOwnership,
    unlockStake,
    validatePaymasterUserOp,
    withdrawStake,
    withdrawTo,
] as const;
export const events = [OwnershipTransferred] as const;
export const errors = [OwnableInvalidOwner, OwnableUnauthorizedAccount] as const;
export const abi = [...functions, ...events, ...errors] as const;

export const bytecode =
    "0x60a080604052346101845760208161093b803803809161001f82856101ae565b83398101031261018457516001600160a01b03811680820361018457331561019b575f8054336001600160a01b031982168117835560405193602093859360249385939290916001600160a01b0316907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09080a36301ffc9a760e01b825263122a0e9b60e31b60048301525afa908115610190575f91610151575b501561010c5760805260405161075590816101e6823960805181818161013d015281816101e301528181610281015281816103090152818161037301528181610557015281816105ef01526106db0152f35b60405162461bcd60e51b815260206004820152601e60248201527f49456e747279506f696e7420696e74657266616365206d69736d6174636800006044820152606490fd5b90506020813d602011610188575b8161016c602093836101ae565b8101031261018457518015158103610184575f6100ba565b5f80fd5b3d915061015f565b6040513d5f823e3d90fd5b631e4fbdf760e01b5f525f60045260245ffd5b601f909101601f19168101906001600160401b038211908210176101d157604052565b634e487b7160e01b5f52604160045260245ffdfe60806040526004361015610011575f80fd5b5f803560e01c80630396cb60146105c7578063205c28781461053257806352b7512c1461048b578063715018a6146104315780637c627b21146103c95780638da5cb5b146103a2578063b0d691fe1461035d578063bb9fe6bf146102ed578063c23a5cea1461025c578063c399ec88146101b7578063d0e30db01461012e5763f2fde38b1461009e575f80fd5b3461012b57602036600319011261012b576004356001600160a01b03811690819003610127576100cc6106b3565b80156101135781546001600160a01b03198116821783556001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08380a380f35b631e4fbdf760e01b82526004829052602482fd5b5080fd5b80fd5b508060031936011261012b57807f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316803b156101b457816024916040519283809263b760faf960e01b825230600483015234905af180156101a9576101985750f35b816101a29161067d565b61012b5780f35b6040513d84823e3d90fd5b50fd5b503461012b578060031936011261012b576040516370a0823160e01b81523060048201526020816024817f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03165afa9081156101a9578291610226575b602082604051908152f35b90506020813d602011610254575b816102416020938361067d565b810103126101275760209150515f61021b565b3d9150610234565b503461012b57602036600319011261012b5780610277610667565b61027f6106b3565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690813b156102e95760405163611d2e7560e11b81526001600160a01b0390911660048201529082908290602490829084905af180156101a9576101985750f35b5050fd5b503461012b578060031936011261012b576103066106b3565b807f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316803b156101b45781809160046040518094819363bb9fe6bf60e01b83525af180156101a9576101985750f35b503461012b578060031936011261012b576040517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b503461012b578060031936011261012b57546040516001600160a01b039091168152602090f35b503461012b57608036600319011261012b576003600435101561012b5760243567ffffffffffffffff8111610127573660238201121561012757806004013567ffffffffffffffff811161042d573691016024011161012b5761042a6106d9565b80f35b8280fd5b503461012b578060031936011261012b5761044a6106b3565b80546001600160a01b03198116825581906001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a380f35b503461012b57606036600319011261012b5760043567ffffffffffffffff81116101275761012090600319903603011261012b576104c76106d9565b6040516020810181811067ffffffffffffffff82111761051e579081606092604052838252604051938492604084525180928160408601528585015e82820184018190526020830152601f01601f19168101030190f35b634e487b7160e01b83526041600452602483fd5b503461012b57604036600319011261012b578061054d610667565b6105556106b3565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690813b156102e95760405163040b850f60e31b81526001600160a01b03909116600482015260248035908201529082908290604490829084905af180156101a9576101985750f35b5060203660031901126106635760043563ffffffff8116809103610663576105ed6106b3565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690813b15610663575f90602460405180948193621cb65b60e51b8352600483015234905af180156106585761064a575080f35b61065691505f9061067d565b005b6040513d5f823e3d90fd5b5f80fd5b600435906001600160a01b038216820361066357565b90601f8019910116810190811067ffffffffffffffff82111761069f57604052565b634e487b7160e01b5f52604160045260245ffd5b5f546001600160a01b031633036106c657565b63118cdaa760e01b5f523360045260245ffd5b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316330361070b57565b60405162461bcd60e51b815260206004820152601560248201527414d95b99195c881b9bdd08115b9d1c9e541bda5b9d605a1b6044820152606490fdfea164736f6c634300081a000a" as Hex;
export const deployedBytecode =
    "0x60806040526004361015610011575f80fd5b5f803560e01c80630396cb60146105c7578063205c28781461053257806352b7512c1461048b578063715018a6146104315780637c627b21146103c95780638da5cb5b146103a2578063b0d691fe1461035d578063bb9fe6bf146102ed578063c23a5cea1461025c578063c399ec88146101b7578063d0e30db01461012e5763f2fde38b1461009e575f80fd5b3461012b57602036600319011261012b576004356001600160a01b03811690819003610127576100cc6106b3565b80156101135781546001600160a01b03198116821783556001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08380a380f35b631e4fbdf760e01b82526004829052602482fd5b5080fd5b80fd5b508060031936011261012b57807f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316803b156101b457816024916040519283809263b760faf960e01b825230600483015234905af180156101a9576101985750f35b816101a29161067d565b61012b5780f35b6040513d84823e3d90fd5b50fd5b503461012b578060031936011261012b576040516370a0823160e01b81523060048201526020816024817f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03165afa9081156101a9578291610226575b602082604051908152f35b90506020813d602011610254575b816102416020938361067d565b810103126101275760209150515f61021b565b3d9150610234565b503461012b57602036600319011261012b5780610277610667565b61027f6106b3565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690813b156102e95760405163611d2e7560e11b81526001600160a01b0390911660048201529082908290602490829084905af180156101a9576101985750f35b5050fd5b503461012b578060031936011261012b576103066106b3565b807f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316803b156101b45781809160046040518094819363bb9fe6bf60e01b83525af180156101a9576101985750f35b503461012b578060031936011261012b576040517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b503461012b578060031936011261012b57546040516001600160a01b039091168152602090f35b503461012b57608036600319011261012b576003600435101561012b5760243567ffffffffffffffff8111610127573660238201121561012757806004013567ffffffffffffffff811161042d573691016024011161012b5761042a6106d9565b80f35b8280fd5b503461012b578060031936011261012b5761044a6106b3565b80546001600160a01b03198116825581906001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a380f35b503461012b57606036600319011261012b5760043567ffffffffffffffff81116101275761012090600319903603011261012b576104c76106d9565b6040516020810181811067ffffffffffffffff82111761051e579081606092604052838252604051938492604084525180928160408601528585015e82820184018190526020830152601f01601f19168101030190f35b634e487b7160e01b83526041600452602483fd5b503461012b57604036600319011261012b578061054d610667565b6105556106b3565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690813b156102e95760405163040b850f60e31b81526001600160a01b03909116600482015260248035908201529082908290604490829084905af180156101a9576101985750f35b5060203660031901126106635760043563ffffffff8116809103610663576105ed6106b3565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690813b15610663575f90602460405180948193621cb65b60e51b8352600483015234905af180156106585761064a575080f35b61065691505f9061067d565b005b6040513d5f823e3d90fd5b5f80fd5b600435906001600160a01b038216820361066357565b90601f8019910116810190811067ffffffffffffffff82111761069f57604052565b634e487b7160e01b5f52604160045260245ffd5b5f546001600160a01b031633036106c657565b63118cdaa760e01b5f523360045260245ffd5b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316330361070b57565b60405162461bcd60e51b815260206004820152601560248201527414d95b99195c881b9bdd08115b9d1c9e541bda5b9d605a1b6044820152606490fdfea164736f6c634300081a000a" as Hex;
export const OpenPaymaster = {
    abi,
    bytecode,
    deployedBytecode,
};
