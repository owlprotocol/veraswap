import { Hex } from "viem";

export const _constructor = {
    type: "constructor",
    inputs: [{ name: "_entryPoint", type: "address", internalType: "contract IEntryPoint" }],
    stateMutability: "nonpayable",
} as const;
export const addStake = {
    type: "function",
    name: "addStake",
    inputs: [{ name: "unstakeDelaySec", type: "uint32", internalType: "uint32" }],
    outputs: [],
    stateMutability: "payable",
} as const;
export const deposit = {
    type: "function",
    name: "deposit",
    inputs: [],
    outputs: [],
    stateMutability: "payable",
} as const;
export const entryPoint = {
    type: "function",
    name: "entryPoint",
    inputs: [],
    outputs: [{ name: "", type: "address", internalType: "contract IEntryPoint" }],
    stateMutability: "view",
} as const;
export const owner = {
    type: "function",
    name: "owner",
    inputs: [],
    outputs: [{ name: "", type: "address", internalType: "address" }],
    stateMutability: "view",
} as const;
export const postOp = {
    type: "function",
    name: "postOp",
    inputs: [
        { name: "mode", type: "uint8", internalType: "enum IPaymaster.PostOpMode" },
        { name: "context", type: "bytes", internalType: "bytes" },
        { name: "actualGasCost", type: "uint256", internalType: "uint256" },
        { name: "actualUserOpFeePerGas", type: "uint256", internalType: "uint256" },
    ],
    outputs: [],
    stateMutability: "nonpayable",
} as const;
export const renounceOwnership = {
    type: "function",
    name: "renounceOwnership",
    inputs: [],
    outputs: [],
    stateMutability: "nonpayable",
} as const;
export const transferOwnership = {
    type: "function",
    name: "transferOwnership",
    inputs: [{ name: "newOwner", type: "address", internalType: "address" }],
    outputs: [],
    stateMutability: "nonpayable",
} as const;
export const unlockStake = {
    type: "function",
    name: "unlockStake",
    inputs: [],
    outputs: [],
    stateMutability: "nonpayable",
} as const;
export const validatePaymasterUserOp = {
    type: "function",
    name: "validatePaymasterUserOp",
    inputs: [
        {
            name: "userOp",
            type: "tuple",
            internalType: "struct PackedUserOperation",
            components: [
                { name: "sender", type: "address", internalType: "address" },
                { name: "nonce", type: "uint256", internalType: "uint256" },
                { name: "initCode", type: "bytes", internalType: "bytes" },
                { name: "callData", type: "bytes", internalType: "bytes" },
                { name: "accountGasLimits", type: "bytes32", internalType: "bytes32" },
                { name: "preVerificationGas", type: "uint256", internalType: "uint256" },
                { name: "gasFees", type: "bytes32", internalType: "bytes32" },
                { name: "paymasterAndData", type: "bytes", internalType: "bytes" },
                { name: "signature", type: "bytes", internalType: "bytes" },
            ],
        },
        { name: "userOpHash", type: "bytes32", internalType: "bytes32" },
        { name: "maxCost", type: "uint256", internalType: "uint256" },
    ],
    outputs: [
        { name: "context", type: "bytes", internalType: "bytes" },
        { name: "validationData", type: "uint256", internalType: "uint256" },
    ],
    stateMutability: "nonpayable",
} as const;
export const withdrawStake = {
    type: "function",
    name: "withdrawStake",
    inputs: [{ name: "withdrawAddress", type: "address", internalType: "address payable" }],
    outputs: [],
    stateMutability: "nonpayable",
} as const;
export const withdrawTo = {
    type: "function",
    name: "withdrawTo",
    inputs: [
        { name: "withdrawAddress", type: "address", internalType: "address payable" },
        { name: "amount", type: "uint256", internalType: "uint256" },
    ],
    outputs: [],
    stateMutability: "nonpayable",
} as const;
export const OwnershipTransferred = {
    type: "event",
    name: "OwnershipTransferred",
    inputs: [
        { name: "previousOwner", type: "address", indexed: true, internalType: "address" },
        { name: "newOwner", type: "address", indexed: true, internalType: "address" },
    ],
    anonymous: false,
} as const;
export const OwnableInvalidOwner = {
    type: "error",
    name: "OwnableInvalidOwner",
    inputs: [{ name: "owner", type: "address", internalType: "address" }],
} as const;
export const OwnableUnauthorizedAccount = {
    type: "error",
    name: "OwnableUnauthorizedAccount",
    inputs: [{ name: "account", type: "address", internalType: "address" }],
} as const;
export const functions = [
    _constructor,
    addStake,
    deposit,
    entryPoint,
    owner,
    postOp,
    renounceOwnership,
    transferOwnership,
    unlockStake,
    validatePaymasterUserOp,
    withdrawStake,
    withdrawTo,
] as const;
export const events = [OwnershipTransferred] as const;
export const errors = [OwnableInvalidOwner, OwnableUnauthorizedAccount] as const;
export const abi = [...functions, ...events, ...errors] as const;

export const bytecode =
    "0x60a0806040523461017d57602081610884803803809161001f82856101a7565b83398101031261017d57516001600160a01b03811680820361017d573315610194575f8054336001600160a01b031982168117835560405193602093859360249385939290916001600160a01b0316907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09080a36301ffc9a760e01b825263122a0e9b60e31b60048301525afa908115610189575f9161014a575b5015610105576080526040516106a590816101df8239608051818181610132015281816101d101528181610259015281816102c3015281816104a70152818161053f015261062b0152f35b60405162461bcd60e51b815260206004820152601e60248201527f49456e747279506f696e7420696e74657266616365206d69736d6174636800006044820152606490fd5b90506020813d602011610181575b81610165602093836101a7565b8101031261017d5751801515810361017d575f6100ba565b5f80fd5b3d9150610158565b6040513d5f823e3d90fd5b631e4fbdf760e01b5f525f60045260245ffd5b601f909101601f19168101906001600160401b038211908210176101ca57604052565b634e487b7160e01b5f52604160045260245ffdfe60806040526004361015610011575f80fd5b5f803560e01c80630396cb6014610517578063205c28781461048257806352b7512c146103db578063715018a6146103815780637c627b21146103195780638da5cb5b146102f2578063b0d691fe146102ad578063bb9fe6bf1461023d578063c23a5cea146101ac578063d0e30db0146101235763f2fde38b14610093575f80fd5b34610120576020366003190112610120576004356001600160a01b0381169081900361011c576100c1610603565b80156101085781546001600160a01b03198116821783556001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08380a380f35b631e4fbdf760e01b82526004829052602482fd5b5080fd5b80fd5b508060031936011261012057807f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316803b156101a957816024916040519283809263b760faf960e01b825230600483015234905af1801561019e5761018d5750f35b81610197916105cd565b6101205780f35b6040513d84823e3d90fd5b50fd5b503461012057602036600319011261012057806101c76105b7565b6101cf610603565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690813b156102395760405163611d2e7560e11b81526001600160a01b0390911660048201529082908290602490829084905af1801561019e5761018d5750f35b5050fd5b5034610120578060031936011261012057610256610603565b807f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316803b156101a95781809160046040518094819363bb9fe6bf60e01b83525af1801561019e5761018d5750f35b50346101205780600319360112610120576040517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b5034610120578060031936011261012057546040516001600160a01b039091168152602090f35b503461012057608036600319011261012057600360043510156101205760243567ffffffffffffffff811161011c573660238201121561011c57806004013567ffffffffffffffff811161037d57369101602401116101205761037a610629565b80f35b8280fd5b503461012057806003193601126101205761039a610603565b80546001600160a01b03198116825581906001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a380f35b50346101205760603660031901126101205760043567ffffffffffffffff811161011c5761012090600319903603011261012057610417610629565b6040516020810181811067ffffffffffffffff82111761046e579081606092604052838252604051938492604084525180928160408601528585015e82820184018190526020830152601f01601f19168101030190f35b634e487b7160e01b83526041600452602483fd5b5034610120576040366003190112610120578061049d6105b7565b6104a5610603565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690813b156102395760405163040b850f60e31b81526001600160a01b03909116600482015260248035908201529082908290604490829084905af1801561019e5761018d5750f35b5060203660031901126105b35760043563ffffffff81168091036105b35761053d610603565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690813b156105b3575f90602460405180948193621cb65b60e51b8352600483015234905af180156105a85761059a575080f35b6105a691505f906105cd565b005b6040513d5f823e3d90fd5b5f80fd5b600435906001600160a01b03821682036105b357565b90601f8019910116810190811067ffffffffffffffff8211176105ef57604052565b634e487b7160e01b5f52604160045260245ffd5b5f546001600160a01b0316330361061657565b63118cdaa760e01b5f523360045260245ffd5b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316330361065b57565b60405162461bcd60e51b815260206004820152601560248201527414d95b99195c881b9bdd08115b9d1c9e541bda5b9d605a1b6044820152606490fdfea164736f6c634300081a000a" as Hex;
export const deployedBytecode =
    "0x60806040526004361015610011575f80fd5b5f803560e01c80630396cb6014610517578063205c28781461048257806352b7512c146103db578063715018a6146103815780637c627b21146103195780638da5cb5b146102f2578063b0d691fe146102ad578063bb9fe6bf1461023d578063c23a5cea146101ac578063d0e30db0146101235763f2fde38b14610093575f80fd5b34610120576020366003190112610120576004356001600160a01b0381169081900361011c576100c1610603565b80156101085781546001600160a01b03198116821783556001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08380a380f35b631e4fbdf760e01b82526004829052602482fd5b5080fd5b80fd5b508060031936011261012057807f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316803b156101a957816024916040519283809263b760faf960e01b825230600483015234905af1801561019e5761018d5750f35b81610197916105cd565b6101205780f35b6040513d84823e3d90fd5b50fd5b503461012057602036600319011261012057806101c76105b7565b6101cf610603565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690813b156102395760405163611d2e7560e11b81526001600160a01b0390911660048201529082908290602490829084905af1801561019e5761018d5750f35b5050fd5b5034610120578060031936011261012057610256610603565b807f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316803b156101a95781809160046040518094819363bb9fe6bf60e01b83525af1801561019e5761018d5750f35b50346101205780600319360112610120576040517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b5034610120578060031936011261012057546040516001600160a01b039091168152602090f35b503461012057608036600319011261012057600360043510156101205760243567ffffffffffffffff811161011c573660238201121561011c57806004013567ffffffffffffffff811161037d57369101602401116101205761037a610629565b80f35b8280fd5b503461012057806003193601126101205761039a610603565b80546001600160a01b03198116825581906001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a380f35b50346101205760603660031901126101205760043567ffffffffffffffff811161011c5761012090600319903603011261012057610417610629565b6040516020810181811067ffffffffffffffff82111761046e579081606092604052838252604051938492604084525180928160408601528585015e82820184018190526020830152601f01601f19168101030190f35b634e487b7160e01b83526041600452602483fd5b5034610120576040366003190112610120578061049d6105b7565b6104a5610603565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690813b156102395760405163040b850f60e31b81526001600160a01b03909116600482015260248035908201529082908290604490829084905af1801561019e5761018d5750f35b5060203660031901126105b35760043563ffffffff81168091036105b35761053d610603565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690813b156105b3575f90602460405180948193621cb65b60e51b8352600483015234905af180156105a85761059a575080f35b6105a691505f906105cd565b005b6040513d5f823e3d90fd5b5f80fd5b600435906001600160a01b03821682036105b357565b90601f8019910116810190811067ffffffffffffffff8211176105ef57604052565b634e487b7160e01b5f52604160045260245ffd5b5f546001600160a01b0316330361061657565b63118cdaa760e01b5f523360045260245ffd5b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316330361065b57565b60405162461bcd60e51b815260206004820152601560248201527414d95b99195c881b9bdd08115b9d1c9e541bda5b9d605a1b6044820152606490fdfea164736f6c634300081a000a" as Hex;
export const OpenPaymaster = {
    abi,
    bytecode,
    deployedBytecode,
};
