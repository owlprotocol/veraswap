import { Hex } from "viem";

export const _constructor = {
    type: "constructor",
    inputs: [
        { name: "_mailbox", type: "address", internalType: "address" },
        { name: "_ism", type: "address", internalType: "address" },
        { name: "_executor", type: "address", internalType: "address" },
        { name: "_factory", type: "address", internalType: "address" },
    ],
    stateMutability: "nonpayable",
} as const;
export const callRemote = {
    type: "function",
    name: "callRemote",
    inputs: [
        { name: "destination", type: "uint32", internalType: "uint32" },
        { name: "router", type: "address", internalType: "address" },
        { name: "account", type: "address", internalType: "address" },
        { name: "initData", type: "bytes", internalType: "bytes" },
        { name: "initSalt", type: "bytes32", internalType: "bytes32" },
        { name: "executionMode", type: "uint8", internalType: "enum ERC7579ExecutorMessage.ExecutionMode" },
        { name: "callData", type: "bytes", internalType: "bytes" },
        { name: "nonce", type: "uint256", internalType: "uint256" },
        { name: "validAfter", type: "uint48", internalType: "uint48" },
        { name: "validUntil", type: "uint48", internalType: "uint48" },
        { name: "signature", type: "bytes", internalType: "bytes" },
        { name: "hookMetadata", type: "bytes", internalType: "bytes" },
        { name: "hook", type: "address", internalType: "address" },
    ],
    outputs: [{ name: "", type: "bytes32", internalType: "bytes32" }],
    stateMutability: "payable",
} as const;
export const handle = {
    type: "function",
    name: "handle",
    inputs: [
        { name: "origin", type: "uint32", internalType: "uint32" },
        { name: "sender", type: "bytes32", internalType: "bytes32" },
        { name: "message", type: "bytes", internalType: "bytes" },
    ],
    outputs: [],
    stateMutability: "payable",
} as const;
export const interchainSecurityModule = {
    type: "function",
    name: "interchainSecurityModule",
    inputs: [],
    outputs: [{ name: "", type: "address", internalType: "contract IInterchainSecurityModule" }],
    stateMutability: "view",
} as const;
export const localDomain = {
    type: "function",
    name: "localDomain",
    inputs: [],
    outputs: [{ name: "", type: "uint32", internalType: "uint32" }],
    stateMutability: "view",
} as const;
export const mailbox = {
    type: "function",
    name: "mailbox",
    inputs: [],
    outputs: [{ name: "", type: "address", internalType: "contract IMailbox" }],
    stateMutability: "view",
} as const;
export const owners = {
    type: "function",
    name: "owners",
    inputs: [
        { name: "account", type: "address", internalType: "address" },
        { name: "domain", type: "uint32", internalType: "uint32" },
        { name: "router", type: "address", internalType: "address" },
        { name: "owner", type: "address", internalType: "address" },
    ],
    outputs: [{ name: "", type: "bool", internalType: "bool" }],
    stateMutability: "view",
} as const;
export const setAccountOwners = {
    type: "function",
    name: "setAccountOwners",
    inputs: [
        {
            name: "_owners",
            type: "tuple[]",
            internalType: "struct ERC7579ExecutorRouter.RemoteRouterOwner[]",
            components: [
                { name: "domain", type: "uint32", internalType: "uint32" },
                { name: "router", type: "address", internalType: "address" },
                { name: "owner", type: "address", internalType: "address" },
                { name: "enabled", type: "bool", internalType: "bool" },
            ],
        },
    ],
    outputs: [],
    stateMutability: "nonpayable",
} as const;
export const AccountCreated = {
    type: "event",
    name: "AccountCreated",
    inputs: [{ name: "account", type: "address", indexed: true, internalType: "address" }],
    anonymous: false,
} as const;
export const AccountRemoteRouterOwnerSet = {
    type: "event",
    name: "AccountRemoteRouterOwnerSet",
    inputs: [
        { name: "account", type: "address", indexed: true, internalType: "address" },
        { name: "domain", type: "uint32", indexed: true, internalType: "uint32" },
        { name: "router", type: "address", indexed: false, internalType: "address" },
        { name: "owner", type: "address", indexed: false, internalType: "address" },
        { name: "enabled", type: "bool", indexed: false, internalType: "bool" },
    ],
    anonymous: false,
} as const;
export const RemoteCallDispatched = {
    type: "event",
    name: "RemoteCallDispatched",
    inputs: [
        { name: "destination", type: "uint32", indexed: true, internalType: "uint32" },
        { name: "router", type: "address", indexed: true, internalType: "address" },
        { name: "account", type: "address", indexed: true, internalType: "address" },
        {
            name: "executionMode",
            type: "uint8",
            indexed: false,
            internalType: "enum ERC7579ExecutorMessage.ExecutionMode",
        },
        { name: "messageId", type: "bytes32", indexed: false, internalType: "bytes32" },
    ],
    anonymous: false,
} as const;
export const RemoteCallProcessed = {
    type: "event",
    name: "RemoteCallProcessed",
    inputs: [
        { name: "origin", type: "uint32", indexed: true, internalType: "uint32" },
        { name: "router", type: "address", indexed: true, internalType: "address" },
        { name: "account", type: "address", indexed: true, internalType: "address" },
        {
            name: "executionMode",
            type: "uint8",
            indexed: false,
            internalType: "enum ERC7579ExecutorMessage.ExecutionMode",
        },
    ],
    anonymous: false,
} as const;
export const AccountDeploymentFailed = {
    type: "error",
    name: "AccountDeploymentFailed",
    inputs: [{ name: "account", type: "address", internalType: "address" }],
} as const;
export const InvalidExecutorMode = { type: "error", name: "InvalidExecutorMode", inputs: [] } as const;
export const InvalidRemoteRouterOwner = {
    type: "error",
    name: "InvalidRemoteRouterOwner",
    inputs: [
        { name: "account", type: "address", internalType: "address" },
        { name: "domain", type: "uint32", internalType: "uint32" },
        { name: "router", type: "address", internalType: "address" },
        { name: "owner", type: "address", internalType: "address" },
    ],
} as const;
export const InvalidTimestamp = {
    type: "error",
    name: "InvalidTimestamp",
    inputs: [
        { name: "validUntil", type: "uint48", internalType: "uint48" },
        { name: "validAfter", type: "uint48", internalType: "uint48" },
    ],
} as const;
export const functions = [
    _constructor,
    callRemote,
    handle,
    interchainSecurityModule,
    localDomain,
    mailbox,
    owners,
    setAccountOwners,
] as const;
export const events = [AccountCreated, AccountRemoteRouterOwnerSet, RemoteCallDispatched, RemoteCallProcessed] as const;
export const errors = [
    AccountDeploymentFailed,
    InvalidExecutorMode,
    InvalidRemoteRouterOwner,
    InvalidTimestamp,
] as const;
export const abi = [...functions, ...events, ...errors] as const;

export const bytecode =
    "" as Hex;
export const deployedBytecode =
    "" as Hex;
export const ERC7579ExecutorRouter = {
    abi,
    bytecode,
    deployedBytecode,
};
