import { Hex } from "viem";

export const receive = { type: "receive", stateMutability: "payable" } as const;
export const approveAll = {
    type: "function",
    name: "approveAll",
    inputs: [
        { name: "token", type: "address", internalType: "address" },
        { name: "spender", type: "address", internalType: "address" },
    ],
    outputs: [{ name: "", type: "bool", internalType: "bool" }],
    stateMutability: "nonpayable",
} as const;
export const bridgeAllETH = {
    type: "function",
    name: "bridgeAllETH",
    inputs: [
        { name: "to", type: "address", internalType: "address payable" },
        { name: "refundAddress", type: "address", internalType: "address payable" },
        {
            name: "bridgeParams",
            type: "tuple",
            internalType: "struct StargateBridgeSweep.BridgeParams",
            components: [
                { name: "recipient", type: "address", internalType: "address" },
                { name: "recipientPadded", type: "bytes32", internalType: "bytes32" },
                { name: "dstEid", type: "uint32", internalType: "uint32" },
                { name: "extraOptions", type: "bytes", internalType: "bytes" },
                { name: "composeMsg", type: "bytes", internalType: "bytes" },
                { name: "oftCmd", type: "bytes", internalType: "bytes" },
            ],
        },
    ],
    outputs: [],
    stateMutability: "nonpayable",
} as const;
export const bridgeAllToken = {
    type: "function",
    name: "bridgeAllToken",
    inputs: [
        { name: "to", type: "address", internalType: "address payable" },
        { name: "inputToken", type: "address", internalType: "address" },
        { name: "refundAddress", type: "address", internalType: "address" },
        {
            name: "bridgeParams",
            type: "tuple",
            internalType: "struct StargateBridgeSweep.BridgeParams",
            components: [
                { name: "recipient", type: "address", internalType: "address" },
                { name: "recipientPadded", type: "bytes32", internalType: "bytes32" },
                { name: "dstEid", type: "uint32", internalType: "uint32" },
                { name: "extraOptions", type: "bytes", internalType: "bytes" },
                { name: "composeMsg", type: "bytes", internalType: "bytes" },
                { name: "oftCmd", type: "bytes", internalType: "bytes" },
            ],
        },
    ],
    outputs: [],
    stateMutability: "payable",
} as const;
export const sweep = {
    type: "function",
    name: "sweep",
    inputs: [
        { name: "token", type: "address", internalType: "address" },
        { name: "recipient", type: "address", internalType: "address" },
    ],
    outputs: [{ name: "balance", type: "uint256", internalType: "uint256" }],
    stateMutability: "nonpayable",
} as const;
export const BalanceZero = { type: "error", name: "BalanceZero", inputs: [] } as const;
export const ContractLocked = { type: "error", name: "ContractLocked", inputs: [] } as const;
export const QuoteAmountTooLow = { type: "error", name: "QuoteAmountTooLow", inputs: [] } as const;
export const TransferFailed = { type: "error", name: "TransferFailed", inputs: [] } as const;
export const functions = [receive, approveAll, bridgeAllETH, bridgeAllToken, sweep] as const;
export const events = [] as const;
export const errors = [BalanceZero, ContractLocked, QuoteAmountTooLow, TransferFailed] as const;
export const abi = [...functions, ...events, ...errors] as const;

export const bytecode =
    "0x60808060405234601557610d54908161001a8239f35b5f80fdfe608080604052600436101561001c575b50361561001a575f80fd5b005b5f3560e01c9081630a443276146102285750806369dba7701461018f5780636f909ee5146100f25763b8dc491b14610054575f61000f565b346100ee5760403660031901126100ee5761006d6102d5565b6100756102eb565b903330146100dd575f80516020610d288339815191525c6001600160a01b03166100ce576020916100b591335f80516020610d288339815191525d610b56565b5f5f80516020610d288339815191525d5b604051908152f35b6337affdbf60e11b5f5260045ffd5b6020916100e991610b56565b6100c6565b5f80fd5b346100ee5760603660031901126100ee5761010b6102d5565b6101136102eb565b604435906001600160401b0382116100ee5760c0826004019260031990360301126100ee57333014610186575f80516020610d288339815191525c6001600160a01b03166100ce5761017492335f80516020610d288339815191525d6107b2565b5f5f80516020610d288339815191525d005b61001a926107b2565b60803660031901126100ee576101a36102d5565b6101ab6102eb565b6044356001600160a01b03811681036100ee57606435916001600160401b0383116100ee5760c0836004019360031990360301126100ee5733301461021f575f80516020610d288339815191525c6001600160a01b03166100ce5761017493335f80516020610d288339815191525d6105db565b61001a936105db565b346100ee5760403660031901126100ee576020816044815f6102486102d5565b6102506102eb565b63095ea7b360e01b84526001600160a01b03908116600485015282196024850152165af180156102ca575f9061028e575b6020906040519015158152f35b506020813d6020116102c2575b816102a86020938361034b565b810103126100ee575180151581036100ee57602090610281565b3d915061029b565b6040513d5f823e3d90fd5b600435906001600160a01b03821682036100ee57565b602435906001600160a01b03821682036100ee57565b604081019081106001600160401b0382111761031c57604052565b634e487b7160e01b5f52604160045260245ffd5b60e081019081106001600160401b0382111761031c57604052565b90601f801991011681019081106001600160401b0382111761031c57604052565b3563ffffffff811681036100ee5790565b903590601e19813603018212156100ee57018035906001600160401b0382116100ee576020019181360383136100ee57565b6001600160401b03811161031c57601f01601f191660200190565b9291926103d6826103af565b916103e4604051938461034b565b8294818452818301116100ee578281602093845f960137010152565b91908260409103126100ee5760405161041881610301565b6020808294805184520151910152565b929192610434826103af565b91610442604051938461034b565b8294818452818301116100ee578281602093845f96015e010152565b909181830360e081126100ee576080136100ee57604051606081018181106001600160401b0382111761031c576040528251815260208301516001600160401b03811681036100ee5760208201526104b98460408501610400565b6040820152926104cc8160808501610400565b9260c0810151906001600160401b0382116100ee5701906040828203126100ee57604051916104fa83610301565b805168ffffffffffffffffff811681036100ee5783526020810151906001600160401b0382116100ee57019080601f830112156100ee57815161053f92602001610428565b602082015290565b805180835260209291819084018484015e5f828201840152601f01601f1916010190565b6105d89163ffffffff825116815260208201516020820152604082015160408201526060820151606082015260c06105c76105b5608085015160e0608086015260e0850190610547565b60a085015184820360a0860152610547565b9201519060c0818403910152610547565b90565b6040516370a0823160e01b815230600482015292939291602090839060249082906001600160a01b03165afa9182156102ca575f9261077e575b50811561076f576001600160a01b03166106316040840161036c565b9261063f606082018261037d565b9061064d608084018461037d565b909161065c60a086018661037d565b9490956040519961066c8b610330565b63ffffffff168a526020013560208a01528760408a0152606089019788523690610695926103ca565b608088015236906106a5926103ca565b60a086015236906106b5926103ca565b60c08401526106c4838261092c565b909252604051926106d484610301565b82845260208401925f845260405193849263cbef2aa960e01b84526004840160809052608484016107049161056b565b955160248401525160448301526001600160a01b03861660648301819052948290039082905a945f95f180156102ca5761074d575b506107415750565b61074a90610b2e565b50565b610768903d805f833e610760818361034b565b81019061045e565b5050610739565b63836fd8a760e01b5f5260045ffd5b9091506020813d6020116107aa575b8161079a6020938361034b565b810103126100ee5751905f610615565b3d915061078d565b914792831561076f578391610823916001600160a01b0316906108439061085b9063ffffffff61084f6107e76040840161036c565b9260206107f7606083018361037d565b9790610806608085018561037d565b93909461081660a082018261037d565b9890996040519e8f610330565b168d52013560208c015260408b01988c8a5260608c019e8f5236916103ca565b60808a015236916103ca565b60a087015236916103ca565b60c084015261086a838361092c565b5084039380851161091857845f956108c893528752610889848461092c565b9097526040519661089988610301565b87526020870185815260405163cbef2aa960e01b8152608060048201529687958694859391608485019061056b565b995160248401525160448301526001600160a01b0316606482018190529703925af180156102ca576108fe575b50806107415750565b610911903d805f833e610760818361034b565b50506108f5565b634e487b7160e01b5f52601160045260245ffd5b604051630d35b41560e01b8152602060048201526001600160a01b039190911691905f818061095e602482018661056b565b0381865afa80156102ca575f90610a0e575b60209150018051156109ff576109ac91604091519384606083015282518080958194633b6f743b60e01b8352866004840152604483019061056b565b5f602483015203915afa9081156102ca575f916109c857505191565b905060403d6040116109f8575b6109df818361034b565b81016040828203126100ee576109f491610400565b5191565b503d6109d5565b631d4e715560e11b5f5260045ffd5b503d805f833e610a1e818361034b565b81019060a0818303126100ee57610a358282610400565b5060408101516001600160401b0381116100ee57810182601f820112156100ee578051906001600160401b03821161031c576020808360051b9360405190610a7f8387018361034b565b81520192820101908482116100ee5760208101925b828410610ab357505050506020916060610aae9201610400565b610970565b83516001600160401b0381116100ee578201906040828803601f1901126100ee5760405191610ae183610301565b6020810151835260408101516001600160401b0381116100ee5760209101019087601f830112156100ee57602092610b1f8984868096519101610428565b83820152815201930192610a94565b90610b385f610c4d565b9182610b415750565b5f80808086855af115610b515750565b610cbe565b6001600160a01b03169190610b6a83610c4d565b9283610b74575050565b80610b8a57505f80808086855af115610b515750565b6040805163a9059cbb60e01b81526001600160a01b039093166004840152602483018590529091905f9060208260448582885af13d15601f3d11600185511416171692828152826020820152015215610be05750565b6040516390bfb86560e01b81526001600160a01b03909116600482015263a9059cbb60e01b60248201526080604482015260a03d601f01601f191690810160648301523d60848301523d5f60a484013e808201600460a482015260c4633c9fd93960e21b91015260e40190fd5b6001600160a01b031680610c6057504790565b6020602491604051928380926370a0823160e01b82523060048301525afa9081156102ca575f91610c8f575090565b90506020813d602011610cb6575b81610caa6020938361034b565b810103126100ee575190565b3d9150610c9d565b6040516390bfb86560e01b81526001600160a01b0390911660048201525f602482018190526080604483015260a03d601f01601f191690810160648401523d6084840152903d9060a484013e808201600460a482015260c4633d2cec6f60e21b91015260e40190fdfe0e87e1788ebd9ed6a7e63c70a374cd3283e41cad601d21fbe27863899ed4a708a164736f6c634300081a000a" as Hex;
export const deployedBytecode =
    "0x608080604052600436101561001c575b50361561001a575f80fd5b005b5f3560e01c9081630a443276146102285750806369dba7701461018f5780636f909ee5146100f25763b8dc491b14610054575f61000f565b346100ee5760403660031901126100ee5761006d6102d5565b6100756102eb565b903330146100dd575f80516020610d288339815191525c6001600160a01b03166100ce576020916100b591335f80516020610d288339815191525d610b56565b5f5f80516020610d288339815191525d5b604051908152f35b6337affdbf60e11b5f5260045ffd5b6020916100e991610b56565b6100c6565b5f80fd5b346100ee5760603660031901126100ee5761010b6102d5565b6101136102eb565b604435906001600160401b0382116100ee5760c0826004019260031990360301126100ee57333014610186575f80516020610d288339815191525c6001600160a01b03166100ce5761017492335f80516020610d288339815191525d6107b2565b5f5f80516020610d288339815191525d005b61001a926107b2565b60803660031901126100ee576101a36102d5565b6101ab6102eb565b6044356001600160a01b03811681036100ee57606435916001600160401b0383116100ee5760c0836004019360031990360301126100ee5733301461021f575f80516020610d288339815191525c6001600160a01b03166100ce5761017493335f80516020610d288339815191525d6105db565b61001a936105db565b346100ee5760403660031901126100ee576020816044815f6102486102d5565b6102506102eb565b63095ea7b360e01b84526001600160a01b03908116600485015282196024850152165af180156102ca575f9061028e575b6020906040519015158152f35b506020813d6020116102c2575b816102a86020938361034b565b810103126100ee575180151581036100ee57602090610281565b3d915061029b565b6040513d5f823e3d90fd5b600435906001600160a01b03821682036100ee57565b602435906001600160a01b03821682036100ee57565b604081019081106001600160401b0382111761031c57604052565b634e487b7160e01b5f52604160045260245ffd5b60e081019081106001600160401b0382111761031c57604052565b90601f801991011681019081106001600160401b0382111761031c57604052565b3563ffffffff811681036100ee5790565b903590601e19813603018212156100ee57018035906001600160401b0382116100ee576020019181360383136100ee57565b6001600160401b03811161031c57601f01601f191660200190565b9291926103d6826103af565b916103e4604051938461034b565b8294818452818301116100ee578281602093845f960137010152565b91908260409103126100ee5760405161041881610301565b6020808294805184520151910152565b929192610434826103af565b91610442604051938461034b565b8294818452818301116100ee578281602093845f96015e010152565b909181830360e081126100ee576080136100ee57604051606081018181106001600160401b0382111761031c576040528251815260208301516001600160401b03811681036100ee5760208201526104b98460408501610400565b6040820152926104cc8160808501610400565b9260c0810151906001600160401b0382116100ee5701906040828203126100ee57604051916104fa83610301565b805168ffffffffffffffffff811681036100ee5783526020810151906001600160401b0382116100ee57019080601f830112156100ee57815161053f92602001610428565b602082015290565b805180835260209291819084018484015e5f828201840152601f01601f1916010190565b6105d89163ffffffff825116815260208201516020820152604082015160408201526060820151606082015260c06105c76105b5608085015160e0608086015260e0850190610547565b60a085015184820360a0860152610547565b9201519060c0818403910152610547565b90565b6040516370a0823160e01b815230600482015292939291602090839060249082906001600160a01b03165afa9182156102ca575f9261077e575b50811561076f576001600160a01b03166106316040840161036c565b9261063f606082018261037d565b9061064d608084018461037d565b909161065c60a086018661037d565b9490956040519961066c8b610330565b63ffffffff168a526020013560208a01528760408a0152606089019788523690610695926103ca565b608088015236906106a5926103ca565b60a086015236906106b5926103ca565b60c08401526106c4838261092c565b909252604051926106d484610301565b82845260208401925f845260405193849263cbef2aa960e01b84526004840160809052608484016107049161056b565b955160248401525160448301526001600160a01b03861660648301819052948290039082905a945f95f180156102ca5761074d575b506107415750565b61074a90610b2e565b50565b610768903d805f833e610760818361034b565b81019061045e565b5050610739565b63836fd8a760e01b5f5260045ffd5b9091506020813d6020116107aa575b8161079a6020938361034b565b810103126100ee5751905f610615565b3d915061078d565b914792831561076f578391610823916001600160a01b0316906108439061085b9063ffffffff61084f6107e76040840161036c565b9260206107f7606083018361037d565b9790610806608085018561037d565b93909461081660a082018261037d565b9890996040519e8f610330565b168d52013560208c015260408b01988c8a5260608c019e8f5236916103ca565b60808a015236916103ca565b60a087015236916103ca565b60c084015261086a838361092c565b5084039380851161091857845f956108c893528752610889848461092c565b9097526040519661089988610301565b87526020870185815260405163cbef2aa960e01b8152608060048201529687958694859391608485019061056b565b995160248401525160448301526001600160a01b0316606482018190529703925af180156102ca576108fe575b50806107415750565b610911903d805f833e610760818361034b565b50506108f5565b634e487b7160e01b5f52601160045260245ffd5b604051630d35b41560e01b8152602060048201526001600160a01b039190911691905f818061095e602482018661056b565b0381865afa80156102ca575f90610a0e575b60209150018051156109ff576109ac91604091519384606083015282518080958194633b6f743b60e01b8352866004840152604483019061056b565b5f602483015203915afa9081156102ca575f916109c857505191565b905060403d6040116109f8575b6109df818361034b565b81016040828203126100ee576109f491610400565b5191565b503d6109d5565b631d4e715560e11b5f5260045ffd5b503d805f833e610a1e818361034b565b81019060a0818303126100ee57610a358282610400565b5060408101516001600160401b0381116100ee57810182601f820112156100ee578051906001600160401b03821161031c576020808360051b9360405190610a7f8387018361034b565b81520192820101908482116100ee5760208101925b828410610ab357505050506020916060610aae9201610400565b610970565b83516001600160401b0381116100ee578201906040828803601f1901126100ee5760405191610ae183610301565b6020810151835260408101516001600160401b0381116100ee5760209101019087601f830112156100ee57602092610b1f8984868096519101610428565b83820152815201930192610a94565b90610b385f610c4d565b9182610b415750565b5f80808086855af115610b515750565b610cbe565b6001600160a01b03169190610b6a83610c4d565b9283610b74575050565b80610b8a57505f80808086855af115610b515750565b6040805163a9059cbb60e01b81526001600160a01b039093166004840152602483018590529091905f9060208260448582885af13d15601f3d11600185511416171692828152826020820152015215610be05750565b6040516390bfb86560e01b81526001600160a01b03909116600482015263a9059cbb60e01b60248201526080604482015260a03d601f01601f191690810160648301523d60848301523d5f60a484013e808201600460a482015260c4633c9fd93960e21b91015260e40190fd5b6001600160a01b031680610c6057504790565b6020602491604051928380926370a0823160e01b82523060048301525afa9081156102ca575f91610c8f575090565b90506020813d602011610cb6575b81610caa6020938361034b565b810103126100ee575190565b3d9150610c9d565b6040516390bfb86560e01b81526001600160a01b0390911660048201525f602482018190526080604483015260a03d601f01601f191690810160648401523d6084840152903d9060a484013e808201600460a482015260c4633d2cec6f60e21b91015260e40190fdfe0e87e1788ebd9ed6a7e63c70a374cd3283e41cad601d21fbe27863899ed4a708a164736f6c634300081a000a" as Hex;
export const StargateBridgeSweep = {
    abi,
    bytecode,
    deployedBytecode,
};
