import { Hex } from "viem";

export const _constructor = {
    type: "constructor",
    inputs: [{ name: "_domain", type: "uint32", internalType: "uint32" }],
    stateMutability: "nonpayable",
} as const;
export const PACKAGE_VERSION = {
    type: "function",
    name: "PACKAGE_VERSION",
    inputs: [],
    outputs: [{ name: "", type: "string", internalType: "string" }],
    stateMutability: "view",
} as const;
export const VERSION = {
    type: "function",
    name: "VERSION",
    inputs: [],
    outputs: [{ name: "", type: "uint8", internalType: "uint8" }],
    stateMutability: "view",
} as const;
export const addInboundMessage = {
    type: "function",
    name: "addInboundMessage",
    inputs: [{ name: "message", type: "bytes", internalType: "bytes" }],
    outputs: [],
    stateMutability: "nonpayable",
} as const;
export const addRemoteMailbox = {
    type: "function",
    name: "addRemoteMailbox",
    inputs: [
        { name: "_domain", type: "uint32", internalType: "uint32" },
        { name: "_mailbox", type: "address", internalType: "contract MockMailbox" },
    ],
    outputs: [],
    stateMutability: "nonpayable",
} as const;
export const defaultHook = {
    type: "function",
    name: "defaultHook",
    inputs: [],
    outputs: [{ name: "", type: "address", internalType: "contract IPostDispatchHook" }],
    stateMutability: "view",
} as const;
export const defaultIsm = {
    type: "function",
    name: "defaultIsm",
    inputs: [],
    outputs: [{ name: "", type: "address", internalType: "contract IInterchainSecurityModule" }],
    stateMutability: "view",
} as const;
export const delivered = {
    type: "function",
    name: "delivered",
    inputs: [{ name: "_id", type: "bytes32", internalType: "bytes32" }],
    outputs: [{ name: "", type: "bool", internalType: "bool" }],
    stateMutability: "view",
} as const;
export const deployedBlock = {
    type: "function",
    name: "deployedBlock",
    inputs: [],
    outputs: [{ name: "", type: "uint256", internalType: "uint256" }],
    stateMutability: "view",
} as const;
export const dispatch = {
    type: "function",
    name: "dispatch",
    inputs: [
        { name: "destinationDomain", type: "uint32", internalType: "uint32" },
        { name: "recipientAddress", type: "bytes32", internalType: "bytes32" },
        { name: "messageBody", type: "bytes", internalType: "bytes" },
        { name: "metadata", type: "bytes", internalType: "bytes" },
        { name: "hook", type: "address", internalType: "contract IPostDispatchHook" },
    ],
    outputs: [{ name: "", type: "bytes32", internalType: "bytes32" }],
    stateMutability: "payable",
} as const;
export const dispatch_uint32_bytes32_bytes_bytes = {
    type: "function",
    name: "dispatch",
    inputs: [
        { name: "destinationDomain", type: "uint32", internalType: "uint32" },
        { name: "recipientAddress", type: "bytes32", internalType: "bytes32" },
        { name: "messageBody", type: "bytes", internalType: "bytes" },
        { name: "hookMetadata", type: "bytes", internalType: "bytes" },
    ],
    outputs: [{ name: "", type: "bytes32", internalType: "bytes32" }],
    stateMutability: "payable",
} as const;
export const dispatch_uint32_bytes32_bytes = {
    type: "function",
    name: "dispatch",
    inputs: [
        { name: "_destinationDomain", type: "uint32", internalType: "uint32" },
        { name: "_recipientAddress", type: "bytes32", internalType: "bytes32" },
        { name: "_messageBody", type: "bytes", internalType: "bytes" },
    ],
    outputs: [{ name: "", type: "bytes32", internalType: "bytes32" }],
    stateMutability: "payable",
} as const;
export const inboundMessages = {
    type: "function",
    name: "inboundMessages",
    inputs: [{ name: "", type: "uint256", internalType: "uint256" }],
    outputs: [{ name: "", type: "bytes", internalType: "bytes" }],
    stateMutability: "view",
} as const;
export const inboundProcessedNonce = {
    type: "function",
    name: "inboundProcessedNonce",
    inputs: [],
    outputs: [{ name: "", type: "uint32", internalType: "uint32" }],
    stateMutability: "view",
} as const;
export const inboundUnprocessedNonce = {
    type: "function",
    name: "inboundUnprocessedNonce",
    inputs: [],
    outputs: [{ name: "", type: "uint32", internalType: "uint32" }],
    stateMutability: "view",
} as const;
export const initialize = {
    type: "function",
    name: "initialize",
    inputs: [
        { name: "_owner", type: "address", internalType: "address" },
        { name: "_defaultIsm", type: "address", internalType: "address" },
        { name: "_defaultHook", type: "address", internalType: "address" },
        { name: "_requiredHook", type: "address", internalType: "address" },
    ],
    outputs: [],
    stateMutability: "nonpayable",
} as const;
export const latestDispatchedId = {
    type: "function",
    name: "latestDispatchedId",
    inputs: [],
    outputs: [{ name: "", type: "bytes32", internalType: "bytes32" }],
    stateMutability: "view",
} as const;
export const localDomain = {
    type: "function",
    name: "localDomain",
    inputs: [],
    outputs: [{ name: "", type: "uint32", internalType: "uint32" }],
    stateMutability: "view",
} as const;
export const nonce = {
    type: "function",
    name: "nonce",
    inputs: [],
    outputs: [{ name: "", type: "uint32", internalType: "uint32" }],
    stateMutability: "view",
} as const;
export const owner = {
    type: "function",
    name: "owner",
    inputs: [],
    outputs: [{ name: "", type: "address", internalType: "address" }],
    stateMutability: "view",
} as const;
export const process = {
    type: "function",
    name: "process",
    inputs: [
        { name: "_metadata", type: "bytes", internalType: "bytes" },
        { name: "_message", type: "bytes", internalType: "bytes" },
    ],
    outputs: [],
    stateMutability: "payable",
} as const;
export const processInboundMessage = {
    type: "function",
    name: "processInboundMessage",
    inputs: [{ name: "_nonce", type: "uint32", internalType: "uint32" }],
    outputs: [],
    stateMutability: "payable",
} as const;
export const processNextInboundMessage = {
    type: "function",
    name: "processNextInboundMessage",
    inputs: [],
    outputs: [],
    stateMutability: "payable",
} as const;
export const processedAt = {
    type: "function",
    name: "processedAt",
    inputs: [{ name: "_id", type: "bytes32", internalType: "bytes32" }],
    outputs: [{ name: "", type: "uint48", internalType: "uint48" }],
    stateMutability: "view",
} as const;
export const processor = {
    type: "function",
    name: "processor",
    inputs: [{ name: "_id", type: "bytes32", internalType: "bytes32" }],
    outputs: [{ name: "", type: "address", internalType: "address" }],
    stateMutability: "view",
} as const;
export const quoteDispatch = {
    type: "function",
    name: "quoteDispatch",
    inputs: [
        { name: "destinationDomain", type: "uint32", internalType: "uint32" },
        { name: "recipientAddress", type: "bytes32", internalType: "bytes32" },
        { name: "messageBody", type: "bytes", internalType: "bytes" },
        { name: "metadata", type: "bytes", internalType: "bytes" },
        { name: "hook", type: "address", internalType: "contract IPostDispatchHook" },
    ],
    outputs: [{ name: "fee", type: "uint256", internalType: "uint256" }],
    stateMutability: "view",
} as const;
export const quoteDispatch_uint32_bytes32_bytes = {
    type: "function",
    name: "quoteDispatch",
    inputs: [
        { name: "destinationDomain", type: "uint32", internalType: "uint32" },
        { name: "recipientAddress", type: "bytes32", internalType: "bytes32" },
        { name: "messageBody", type: "bytes", internalType: "bytes" },
    ],
    outputs: [{ name: "fee", type: "uint256", internalType: "uint256" }],
    stateMutability: "view",
} as const;
export const quoteDispatch_uint32_bytes32_bytes_bytes = {
    type: "function",
    name: "quoteDispatch",
    inputs: [
        { name: "destinationDomain", type: "uint32", internalType: "uint32" },
        { name: "recipientAddress", type: "bytes32", internalType: "bytes32" },
        { name: "messageBody", type: "bytes", internalType: "bytes" },
        { name: "defaultHookMetadata", type: "bytes", internalType: "bytes" },
    ],
    outputs: [{ name: "fee", type: "uint256", internalType: "uint256" }],
    stateMutability: "view",
} as const;
export const recipientIsm = {
    type: "function",
    name: "recipientIsm",
    inputs: [{ name: "_recipient", type: "address", internalType: "address" }],
    outputs: [{ name: "", type: "address", internalType: "contract IInterchainSecurityModule" }],
    stateMutability: "view",
} as const;
export const remoteMailboxes = {
    type: "function",
    name: "remoteMailboxes",
    inputs: [{ name: "", type: "uint32", internalType: "uint32" }],
    outputs: [{ name: "", type: "address", internalType: "contract MockMailbox" }],
    stateMutability: "view",
} as const;
export const renounceOwnership = {
    type: "function",
    name: "renounceOwnership",
    inputs: [],
    outputs: [],
    stateMutability: "nonpayable",
} as const;
export const requiredHook = {
    type: "function",
    name: "requiredHook",
    inputs: [],
    outputs: [{ name: "", type: "address", internalType: "contract IPostDispatchHook" }],
    stateMutability: "view",
} as const;
export const setDefaultHook = {
    type: "function",
    name: "setDefaultHook",
    inputs: [{ name: "_hook", type: "address", internalType: "address" }],
    outputs: [],
    stateMutability: "nonpayable",
} as const;
export const setDefaultIsm = {
    type: "function",
    name: "setDefaultIsm",
    inputs: [{ name: "_module", type: "address", internalType: "address" }],
    outputs: [],
    stateMutability: "nonpayable",
} as const;
export const setRequiredHook = {
    type: "function",
    name: "setRequiredHook",
    inputs: [{ name: "_hook", type: "address", internalType: "address" }],
    outputs: [],
    stateMutability: "nonpayable",
} as const;
export const transferOwnership = {
    type: "function",
    name: "transferOwnership",
    inputs: [{ name: "newOwner", type: "address", internalType: "address" }],
    outputs: [],
    stateMutability: "nonpayable",
} as const;
export const DefaultHookSet = {
    type: "event",
    name: "DefaultHookSet",
    inputs: [{ name: "hook", type: "address", indexed: true, internalType: "address" }],
    anonymous: false,
} as const;
export const DefaultIsmSet = {
    type: "event",
    name: "DefaultIsmSet",
    inputs: [{ name: "module", type: "address", indexed: true, internalType: "address" }],
    anonymous: false,
} as const;
export const Dispatch = {
    type: "event",
    name: "Dispatch",
    inputs: [
        { name: "sender", type: "address", indexed: true, internalType: "address" },
        { name: "destination", type: "uint32", indexed: true, internalType: "uint32" },
        { name: "recipient", type: "bytes32", indexed: true, internalType: "bytes32" },
        { name: "message", type: "bytes", indexed: false, internalType: "bytes" },
    ],
    anonymous: false,
} as const;
export const DispatchId = {
    type: "event",
    name: "DispatchId",
    inputs: [{ name: "messageId", type: "bytes32", indexed: true, internalType: "bytes32" }],
    anonymous: false,
} as const;
export const Initialized = {
    type: "event",
    name: "Initialized",
    inputs: [{ name: "version", type: "uint8", indexed: false, internalType: "uint8" }],
    anonymous: false,
} as const;
export const OwnershipTransferred = {
    type: "event",
    name: "OwnershipTransferred",
    inputs: [
        { name: "previousOwner", type: "address", indexed: true, internalType: "address" },
        { name: "newOwner", type: "address", indexed: true, internalType: "address" },
    ],
    anonymous: false,
} as const;
export const Process = {
    type: "event",
    name: "Process",
    inputs: [
        { name: "origin", type: "uint32", indexed: true, internalType: "uint32" },
        { name: "sender", type: "bytes32", indexed: true, internalType: "bytes32" },
        { name: "recipient", type: "address", indexed: true, internalType: "address" },
    ],
    anonymous: false,
} as const;
export const ProcessId = {
    type: "event",
    name: "ProcessId",
    inputs: [{ name: "messageId", type: "bytes32", indexed: true, internalType: "bytes32" }],
    anonymous: false,
} as const;
export const RequiredHookSet = {
    type: "event",
    name: "RequiredHookSet",
    inputs: [{ name: "hook", type: "address", indexed: true, internalType: "address" }],
    anonymous: false,
} as const;
export const functions = [
    _constructor,
    PACKAGE_VERSION,
    VERSION,
    addInboundMessage,
    addRemoteMailbox,
    defaultHook,
    defaultIsm,
    delivered,
    deployedBlock,
    dispatch,
    dispatch_uint32_bytes32_bytes_bytes,
    dispatch_uint32_bytes32_bytes,
    inboundMessages,
    inboundProcessedNonce,
    inboundUnprocessedNonce,
    initialize,
    latestDispatchedId,
    localDomain,
    nonce,
    owner,
    process,
    processInboundMessage,
    processNextInboundMessage,
    processedAt,
    processor,
    quoteDispatch,
    quoteDispatch_uint32_bytes32_bytes,
    quoteDispatch_uint32_bytes32_bytes_bytes,
    recipientIsm,
    remoteMailboxes,
    renounceOwnership,
    requiredHook,
    setDefaultHook,
    setDefaultIsm,
    setRequiredHook,
    transferOwnership,
] as const;
export const events = [
    DefaultHookSet,
    DefaultIsmSet,
    Dispatch,
    DispatchId,
    Initialized,
    OwnershipTransferred,
    Process,
    ProcessId,
    RequiredHookSet,
] as const;
export const errors = [] as const;
export const abi = [...functions, ...events, ...errors] as const;

export const bytecode =
    "0x60c03461023157601f61289b38819003918201601f19168301916001600160401b0383118484101761021d57808492602094604052833981010312610231575163ffffffff81168103610231574360805260a052606b80546001600160401b03191690556040516101868082016001600160401b0381118382101761021d5782916123f4833903905ff0801561021257606780546001600160a01b0319166001600160a01b03929092169190911790556040516103218082016001600160401b0381118382101761021d57829161257a833903905ff0801561021257606880546001600160a01b039283166001600160a01b031991821681179092556069805482169092179091556033805433928116831790915560405192167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e05f80a35f549060ff8260081c166101c0575060ff80821603610186575b6040516121be9081610236823960805181610e10015260a051818181610dd401528181610ee30152611fff0152f35b60ff90811916175f557f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb3847402498602060405160ff8152a15f610157565b62461bcd60e51b815260206004820152602760248201527f496e697469616c697a61626c653a20636f6e747261637420697320696e697469604482015266616c697a696e6760c81b6064820152608490fd5b6040513d5f823e3d90fd5b634e487b7160e01b5f52604160045260245ffd5b5f80fdfe6080806040526004361015610012575f80fd5b5f905f3560e01c90816307a2fda1146117df575080630a2ee4021461175e57806310b83dc014611744578063134fbb4f146117265780631426b7f4146116b75780631605c306146116065780633288990c146114875780633d1250b71461145e57806348aee8d41461143857806359b3f6e0146113d95780635d1fe5a9146113a65780636e5f516e1461137d578063715018a6146113205780637c39d13014610e7757806381d2ea9514610e575780638209d31214610e3357806382ea7bfe14610df85780638d3638f414610db75780638da5cb5b14610d8e57806392d28b3d14610d4f57806393c4484714610d0157806399b0480914610c925780639c42bd1814610b00578063a3b4919f14610ac2578063affed0e014610a9e578063d12164e414610a78578063d6d08a0914610a4f578063e495f1d414610a0f578063e70f48ac146109d9578063f2fde38b1461099c578063f794687a1461092d578063f7ccd321146108f9578063f8c8765e14610548578063fa31de01146101bd5763ffa1ad741461019f575f80fd5b346101ba57806003193601126101ba57602060405160038152f35b80fd5b506101c736611a90565b606854909291906001600160a01b03166101e384838588611fd8565b938115610535575b6101f790838588611fd8565b805160208201209586606655606554600163ffffffff82160163ffffffff8111610521579063ffffffff809392169083191617606555169384604051602081527f769f711d20c679153d382254f59892613b58a97cc876b249134ac25c80f9c8143391806102686020820188611a51565b0390a460405191867f788dbc1b7152732178210e7f4d9d010ef016f9eafbe66786bd7169f56e0c353a8980a2606954630aaccd2360e41b84526040600485015288906001600160a01b0316602085806102da6102c860448301878c611daf565b82810360031901602484015288611a51565b0381845afa9485156104a25782956104e6575b508434106104de575b803b156104385781604051809263086011b960e01b82526040600483015281888161033b6103298d886044850191611daf565b8281036003190160248401528b611a51565b03925af180156104a2576104c5575b505060018060a01b0316913403913483116104b1579081889493923b156104ad5761039a85936103ac956040519687958694859363086011b960e01b855260406004860152896044860191611daf565b83810360031901602485015290611a51565b03925af180156104a257610489575b5052606c60205260408320546001600160a01b0316801561044b578391813b1561044757829161040991604051948580948193630ca2264360e21b8352602060048401526024830190611a51565b03925af1801561043c57610423575b602082604051908152f35b61042e83809261197c565b6104385781610418565b5080fd5b6040513d85823e3d90fd5b8280fd5b60405162461bcd60e51b815260206004820152601660248201527509ad2e6e6d2dcce40e4cadadee8ca40dac2d2d8c4def60531b6044820152606490fd5b816104939161197c565b61049e57835f6103bb565b8380fd5b6040513d84823e3d90fd5b8480fd5b634e487b7160e01b88526011600452602488fd5b816104cf9161197c565b6104da57875f61034a565b8780fd5b3494506102f6565b915093506020813d602011610519575b816105036020938361197c565b8101031261051557889051935f6102ed565b5f80fd5b3d91506104f6565b634e487b7160e01b8a52601160045260248afd5b6068546001600160a01b031691506101eb565b50346101ba5760803660031901126101ba576105626118c9565b602435906001600160a01b03821680830361049e576044356001600160a01b0381168082036108f5576064356001600160a01b038116939092908484036104da5787549660ff8860081c1615978880996108e8575b80156108d1575b156108755760ff1981166001178a5588610864575b506105ed60ff8a5460081c166105e881612128565b612128565b6105f6336120bf565b6105fe612067565b3b1561081557606780546001600160a01b031916821790557fa76ad0adbf45318f8633aa0210f711273d50fbb6fef76ed95bbae97082c75daa8880a2610642612067565b3b156107c557606880546001600160a01b031916821790557f65a63e5066ee2fcdf9d32a7f1bf7ce71c76066f19d0609dddccd334ab87237d78680a2610686612067565b3b1561077457606980546001600160a01b031916821790557f329ec8e2438a73828ecf31a6568d7a91d7b1d79e342b0692914fd053d1a002b18480a26106ca612067565b6001600160a01b03811615610720576106e2906120bf565b6106e95780f35b61ff001981541681557f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb3847402498602060405160018152a180f35b60405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608490fd5b60405162461bcd60e51b815260206004820152602360248201527f4d61696c626f783a20726571756972656420686f6f6b206e6f7420636f6e74726044820152621858dd60ea1b6064820152608490fd5b60405162461bcd60e51b815260206004820152602260248201527f4d61696c626f783a2064656661756c7420686f6f6b206e6f7420636f6e74726160448201526118dd60f21b6064820152608490fd5b60405162461bcd60e51b815260206004820152602160248201527f4d61696c626f783a2064656661756c742049534d206e6f7420636f6e747261636044820152601d60fa1b6064820152608490fd5b61ffff19166101011789555f6105d3565b60405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b6064820152608490fd5b50303b1580156105be5750600160ff8216146105be565b50600160ff8216106105b7565b8580fd5b50346101ba57602061092561090d366118df565b6068546001600160a01b031695909491939190611df5565b604051908152f35b50346101ba5760203660031901126101ba576109476118c9565b61094f612067565b803b1561081557606780546001600160a01b0319166001600160a01b039290921691821790557fa76ad0adbf45318f8633aa0210f711273d50fbb6fef76ed95bbae97082c75daa8280a280f35b50346101ba5760203660031901126101ba576109b66118c9565b6109be612067565b6001600160a01b03811615610720576109d6906120bf565b80f35b50346101ba5760203660031901126101ba5760206109fd6109f86118c9565b611f2e565b6040516001600160a01b039091168152f35b50346101ba5760203660031901126101ba576020610a456004355f52606a60205265ffffffffffff60405f205460a01c16151590565b6040519015158152f35b50346101ba57806003193601126101ba576069546040516001600160a01b039091168152602090f35b50346101ba57806003193601126101ba57602063ffffffff606b54821c16604051908152f35b50346101ba57806003193601126101ba57602063ffffffff60655416604051908152f35b50346101ba5760203660031901126101ba5760209063ffffffff610ae4611810565b168152606c8252604060018060a01b0391205416604051908152f35b50346101ba57610b0f36611a90565b606854919493926001600160a01b039092169185908315610c7f575b610b359394611fd8565b9060018060a01b03606954169360206040518096630aaccd2360e41b8252604060048301528180610b7f610b6d604483018b89611daf565b82810360031901602484015289611a51565b03915afa948515610c74578495610c39575b509160209161039a610bc39460405195869485938493630aaccd2360e41b8552604060048601528a6044860191611daf565b03916001600160a01b03165afa9081156104a2578291610c07575b508201809211610bf357602082604051908152f35b634e487b7160e01b81526011600452602490fd5b90506020813d602011610c31575b81610c226020938361197c565b8101031261051557515f610bde565b3d9150610c15565b91929094506020823d602011610c6c575b81610c576020938361197c565b81010312610515579051939091906020610b91565b3d9150610c4a565b6040513d86823e3d90fd5b6068546001600160a01b03169350610b2b565b50346101ba5760203660031901126101ba57610cac6118c9565b610cb4612067565b803b156107c557606880546001600160a01b0319166001600160a01b039290921691821790557f65a63e5066ee2fcdf9d32a7f1bf7ce71c76066f19d0609dddccd334ab87237d78280a280f35b50346101ba57806003193601126101ba5750610d4b604051610d2460408261197c565b60068152650d4b8c4c4b8d60d21b6020820152604051918291602083526020830190611a51565b0390f35b50346101ba5760203660031901126101ba57610d7a6040610d4b926004358152606d602052206119b1565b604051918291602083526020830190611a51565b50346101ba57806003193601126101ba576033546040516001600160a01b039091168152602090f35b50346101ba57806003193601126101ba57602060405163ffffffff7f0000000000000000000000000000000000000000000000000000000000000000168152f35b50346101ba57806003193601126101ba5760206040517f00000000000000000000000000000000000000000000000000000000000000008152f35b50346101ba57806003193601126101ba57602063ffffffff606b5416604051908152f35b50346101ba576020610925610e6b36611850565b95949094939193611df5565b5060403660031901126101ba576004356001600160401b03811161043857610ea3903690600401611823565b6024356001600160401b03811161049e57610ec2903690600401611823565b929091836001116104ad576003833560f81c036112e45783602d116104ad577f000000000000000000000000000000000000000000000000000000000000000063ffffffff16602984013560e01c0361129f57610f1e84611a75565b610f2b604051918261197c565b8481526020810190368686011161129b5785858337866020878301015251902090610f6c825f52606a60205265ffffffffffff60405f205460a01c16151590565b6112565784604d116108f557602d8401356001600160a01b038111611205576001600160a01b031692610f9e84611f2e565b91604051604081018181106001600160401b038211176111f15760409081523382524365ffffffffffff166020838101918252878c52606a8152918b209251835491516001600160d01b03199092166001600160a01b03919091161760a09190911b65ffffffffffff60a01b1617909155859490939092909163ffffffff918a9189916110c0916110ad919061103e8e6110388188612107565b96612119565b986040519b8c9a8b998a98167f0d381c2a574ae8f04e213db7cfb4df8df712cdbd427d9868ffef380660ca65748a80a47f1cae38cdd3d3919489272725a5ae62a4f48b2989b0dae843d3c279fee18073a98780a2637bf41d7760e11b8552604060048601526044850191611daf565b8281036003190160248401528b8b611daf565b03926001600160a01b03165af19081156111e65785916111ab575b501561116757826110ed859484612107565b916110f88285612119565b91813b156108f557859361114363ffffffff92604051978896879586956356d5d47560e01b8752166004860152602485015260606044850152604d6064850192604c19019101611daf565b039134905af180156104a2576111565750f35b816111609161197c565b6101ba5780f35b606460405162461bcd60e51b815260206004820152602060248201527f4d61696c626f783a2049534d20766572696669636174696f6e206661696c65646044820152fd5b90506020813d6020116111de575b816111c66020938361197c565b810103126104ad575180151581036104ad575f6110db565b3d91506111b9565b6040513d87823e3d90fd5b634e487b7160e01b8a52604160045260248afd5b60405162461bcd60e51b8152602060048201526024808201527f5479706543617374733a2062797465733332546f41646472657373206f766572604482015263666c6f7760e01b6064820152608490fd5b60405162461bcd60e51b815260206004820152601a60248201527f4d61696c626f783a20616c72656164792064656c6976657265640000000000006044820152606490fd5b8680fd5b60405162461bcd60e51b815260206004820152601f60248201527f4d61696c626f783a20756e65787065637465642064657374696e6174696f6e006044820152606490fd5b60405162461bcd60e51b815260206004820152601460248201527326b0b4b63137bc1d103130b2103b32b939b4b7b760611b6044820152606490fd5b50346101ba57806003193601126101ba57611339612067565b603380546001600160a01b0319811690915581906001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a380f35b50346101ba57806003193601126101ba576067546040516001600160a01b039091168152602090f35b50346101ba5760203660031901126101ba576020906004358152606a8252604060018060a01b0391205416604051908152f35b50346101ba5760403660031901126101ba576113f3611810565b602435906001600160a01b03821682036104475763ffffffff168252606c6020526040822080546001600160a01b0319166001600160a01b0390921691909117905580f35b6020610925611446366118df565b6068546001600160a01b031695909491939190611af0565b50346101ba57806003193601126101ba576068546040516001600160a01b039091168152602090f35b50346101ba5760203660031901126101ba576004356001600160401b038111610438576114b8903690600401611823565b63ffffffff606b93929354168252606d60205260408220906001600160401b0381116115f2576114e88254611944565b601f81116115ad575b5082601f821160011461154b57839482939492611540575b50508160011b915f199060031b1c19161790555b606b5463ffffffff611530818316611d98565b169063ffffffff191617606b5580f35b013590505f80611509565b601f198216948385526020852091855b87811061159557508360019596971061157c575b505050811b01905561151d565b01355f19600384901b60f8161c191690555f808061156f565b9092602060018192868601358155019401910161155b565b82845260208420601f830160051c810191602084106115e8575b601f0160051c01905b8181106115dd57506114f1565b8481556001016115d0565b90915081906115c7565b634e487b7160e01b83526041600452602483fd5b50806003193601126101ba5763ffffffff606b5460201c168152606d60205280611632604082206119b1565b303b156116b4578161165891604051809381926307c39d1360e41b835260048301611acf565b038134305af180156104a25761169f575b50606b5467ffffffff0000000061168863ffffffff8360201c16611d98565b60201b169067ffffffff00000000191617606b5580f35b816116a99161197c565b6101ba57805f611669565b50fd5b50346101ba5760203660031901126101ba576116d16118c9565b6116d9612067565b803b1561077457606980546001600160a01b0319166001600160a01b039290921691821790557f329ec8e2438a73828ecf31a6568d7a91d7b1d79e342b0692914fd053d1a002b18280a280f35b50346101ba57806003193601126101ba576020606654604051908152f35b602061092561175236611850565b95949094939193611af0565b5060203660031901126105155763ffffffff611778611810565b165f52606d60205261178c60405f206119b1565b303b15610515575f6117b291604051809381926307c39d1360e41b835260048301611acf565b038134305af180156117d4576117c6575080f35b6117d291505f9061197c565b005b6040513d5f823e3d90fd5b34610515576020366003190112610515576020906004355f52606a825265ffffffffffff60405f205460a01c168152f35b6004359063ffffffff8216820361051557565b9181601f84011215610515578235916001600160401b038311610515576020838186019501011161051557565b60a06003198201126105155760043563ffffffff811681036105155791602435916044356001600160401b038111610515578161188f91600401611823565b92909291606435906001600160401b038211610515576118b191600401611823565b90916084356001600160a01b03811681036105155790565b600435906001600160a01b038216820361051557565b60806003198201126105155760043563ffffffff811681036105155791602435916044356001600160401b038111610515578161191e91600401611823565b92909291606435906001600160401b0382116105155761194091600401611823565b9091565b90600182811c92168015611972575b602083101461195e57565b634e487b7160e01b5f52602260045260245ffd5b91607f1691611953565b90601f801991011681019081106001600160401b0382111761199d57604052565b634e487b7160e01b5f52604160045260245ffd5b9060405191825f8254926119c484611944565b8084529360018116908115611a2f57506001146119eb575b506119e99250038361197c565b565b90505f9291925260205f20905f915b818310611a135750509060206119e9928201015f6119dc565b60209193508060019154838589010152019101909184926119fa565b9050602092506119e994915060ff191682840152151560051b8201015f6119dc565b805180835260209291819084018484015e5f828201840152601f01601f1916010190565b6001600160401b03811161199d57601f01601f191660200190565b60606003198201126105155760043563ffffffff81168103610515579160243591604435906001600160401b0382116105155761194091600401611823565b906060611aed92604081525f60408201528160208201520190611a51565b90565b95949391909293611b038583868a611fd8565b5f96909590926001600160a01b03841615611d85575b90611b2591868a611fd8565b9283516020850120978860665560655490600163ffffffff8316019163ffffffff8311611d715763ffffffff8093169083191617606555169485604051602081527f769f711d20c679153d382254f59892613b58a97cc876b249134ac25c80f9c814339180611b97602082018b611a51565b0390a460405192887f788dbc1b7152732178210e7f4d9d010ef016f9eafbe66786bd7169f56e0c353a5f80a2606954630aaccd2360e41b85526001600160a01b031660208580611bec89888860048501611dcf565b0381845afa9485156117d4575f95611d3d575b50843410611d35575b803b15610515575f604051809263086011b960e01b8252818881611c318c8b8b60048501611dcf565b03925af180156117d457611d20575b506001600160a01b03169234908103919082116104b157833b156104da5760405163086011b960e01b815294889486949093859390928492611c859260048501611dcf565b03925af18015610c7457908491611d0b575b5052606c60205260408220546001600160a01b031690811561044b57813b1561044757611ce583928392604051948580948193630ca2264360e21b8352602060048401526024830190611a51565b03925af180156104a257611cf857505090565b611d0382809261197c565b6101ba575090565b81611d159161197c565b61044757825f611c97565b611d2d9198505f9061197c565b5f965f611c40565b349450611c08565b9094506020813d602011611d69575b81611d596020938361197c565b810103126105155751935f611bff565b3d9150611d4c565b634e487b7160e01b5f52601160045260245ffd5b6068546001600160a01b03169350611b19565b63ffffffff1663ffffffff8114611d715760010190565b908060209392818452848401375f828201840152601f01601f1916010190565b91611aed9391611de791604085526040850191611daf565b916020818403910152611a51565b95949291906001600160a01b03861615611f1b575b611e1693949596611fd8565b606954604051630aaccd2360e41b8152939192919060209085906001600160a01b03168180611e4a88888860048501611dcf565b03915afa9384156117d4575f94611ede575b509360209291611e84949560405195869485938493630aaccd2360e41b855260048501611dcf565b03916001600160a01b03165afa9081156117d4575f91611eac575b508101809111611d715790565b90506020813d602011611ed6575b81611ec76020938361197c565b8101031261051557515f611e9f565b3d9150611eba565b92919350936020833d602011611f13575b81611efc6020938361197c565b810103126105155791519193919290916020611e5c565b3d9150611eef565b6068546001600160a01b03169550611e0a565b5f8091604051602081019063de523cf360e01b825260048152611f5260248261197c565b51915afa3d15611fd0573d90611f6782611a75565b91611f75604051938461197c565b82523d5f602084013e5b80611fc6575b611f9a575b506067546001600160a01b031690565b60208180518101031261051557602001516001600160a01b03811690819003610515578015611f8a5790565b5080511515611f85565b606090611f7f565b606554604051600360f81b60208201526001600160e01b031960e092831b811660218301527f0000000000000000000000000000000000000000000000000000000000000000831b811660258301523360298301529290911b9091166049820152604d81019190915291611aed91606d91849181908484013781015f838201520301601f19810183528261197c565b6033546001600160a01b0316330361207b57565b606460405162461bcd60e51b815260206004820152602060248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152fd5b603380546001600160a01b039283166001600160a01b0319821681179092559091167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e05f80a3565b90600911610515576005013560e01c90565b90602911610515576009013590565b1561212f57565b60405162461bcd60e51b815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201526a6e697469616c697a696e6760a81b6064820152608490fdfea26469706673582212201ebce9cbaeeb18a7db947ac08d55bae1fa4c7d4455f4940c16fc84b7b9dcea1b64736f6c634300081a00336080806040523460225761010661ffff195f5416175f5561015f90816100278239f35b5f80fdfe6080806040526004361015610012575f80fd5b5f3560e01c9081636465e69f146100df57508063951a291f146100aa5763f7e83aee1461003d575f80fd5b346100a65760403660031901126100a65760043567ffffffffffffffff81116100a65761006e9036906004016100fb565b505060243567ffffffffffffffff81116100a6576100909036906004016100fb565b5050602060ff5f5460081c166040519015158152f35b5f80fd5b346100a65760203660031901126100a6576004358015158091036100a65761ff005f549160081b169061ff001916175f555f80f35b346100a6575f3660031901126100a65760209060ff5f54168152f35b9181601f840112156100a65782359167ffffffffffffffff83116100a657602083818601950101116100a65756fea2646970667358221220f0e47ef8257522c7bf2a20a19c2af009cb6b93203c86951204a3f172ffa0eddc64736f6c634300081a0033608080604052346018575f8055610304908161001d8239f35b5f80fdfe60806040526004361015610011575f80fd5b5f3560e01c8063086011b9146101aa57806369fe0e2d1461019257806393c4484714610136578063aaccd23014610118578063ddca3f43146100fc578063e445e7dd146100e2578063e5320bb9146100a45763f667ee9114610071575f80fd5b346100a05760203660031901126100a0576004355f526001602052602060ff60405f2054166040519015158152f35b5f80fd5b346100a05760203660031901126100a05760043567ffffffffffffffff81116100a0576100d5903690600401610228565b5050602060405160018152f35b346100a0575f3660031901126100a05760206040515f8152f35b346100a0575f3660031901126100a05760205f54604051908152f35b346100a05761012636610256565b5050505060205f54604051908152f35b346100a0575f3660031901126100a0576040610151816102a8565b90600682526020820191650d4b8c4c4b8d60d21b83528151928391602083525180918160208501528484015e5f828201840152601f01601f19168101030190f35b346100a05760203660031901126100a0576004355f55005b6101b336610256565b9150915067ffffffffffffffff8111610214576101d9601f8201601f19166020016102a8565b90808252602082019236828201116100a057815f926020928637830101525190205f52600160205260405f20600160ff198254161790555f80f35b634e487b7160e01b5f52604160045260245ffd5b9181601f840112156100a05782359167ffffffffffffffff83116100a057602083818601950101116100a057565b60406003198201126100a05760043567ffffffffffffffff81116100a0578161028191600401610228565b929092916024359067ffffffffffffffff82116100a0576102a491600401610228565b9091565b6040519190601f01601f1916820167ffffffffffffffff8111838210176102145760405256fea26469706673582212209121f5ead8f9355b5f4aee4ebb347908756a0a0abbca58fe742b148fcfbf862564736f6c634300081a0033" as Hex;
export const deployedBytecode =
    "0x6080806040526004361015610012575f80fd5b5f905f3560e01c90816307a2fda1146117df575080630a2ee4021461175e57806310b83dc014611744578063134fbb4f146117265780631426b7f4146116b75780631605c306146116065780633288990c146114875780633d1250b71461145e57806348aee8d41461143857806359b3f6e0146113d95780635d1fe5a9146113a65780636e5f516e1461137d578063715018a6146113205780637c39d13014610e7757806381d2ea9514610e575780638209d31214610e3357806382ea7bfe14610df85780638d3638f414610db75780638da5cb5b14610d8e57806392d28b3d14610d4f57806393c4484714610d0157806399b0480914610c925780639c42bd1814610b00578063a3b4919f14610ac2578063affed0e014610a9e578063d12164e414610a78578063d6d08a0914610a4f578063e495f1d414610a0f578063e70f48ac146109d9578063f2fde38b1461099c578063f794687a1461092d578063f7ccd321146108f9578063f8c8765e14610548578063fa31de01146101bd5763ffa1ad741461019f575f80fd5b346101ba57806003193601126101ba57602060405160038152f35b80fd5b506101c736611a90565b606854909291906001600160a01b03166101e384838588611fd8565b938115610535575b6101f790838588611fd8565b805160208201209586606655606554600163ffffffff82160163ffffffff8111610521579063ffffffff809392169083191617606555169384604051602081527f769f711d20c679153d382254f59892613b58a97cc876b249134ac25c80f9c8143391806102686020820188611a51565b0390a460405191867f788dbc1b7152732178210e7f4d9d010ef016f9eafbe66786bd7169f56e0c353a8980a2606954630aaccd2360e41b84526040600485015288906001600160a01b0316602085806102da6102c860448301878c611daf565b82810360031901602484015288611a51565b0381845afa9485156104a25782956104e6575b508434106104de575b803b156104385781604051809263086011b960e01b82526040600483015281888161033b6103298d886044850191611daf565b8281036003190160248401528b611a51565b03925af180156104a2576104c5575b505060018060a01b0316913403913483116104b1579081889493923b156104ad5761039a85936103ac956040519687958694859363086011b960e01b855260406004860152896044860191611daf565b83810360031901602485015290611a51565b03925af180156104a257610489575b5052606c60205260408320546001600160a01b0316801561044b578391813b1561044757829161040991604051948580948193630ca2264360e21b8352602060048401526024830190611a51565b03925af1801561043c57610423575b602082604051908152f35b61042e83809261197c565b6104385781610418565b5080fd5b6040513d85823e3d90fd5b8280fd5b60405162461bcd60e51b815260206004820152601660248201527509ad2e6e6d2dcce40e4cadadee8ca40dac2d2d8c4def60531b6044820152606490fd5b816104939161197c565b61049e57835f6103bb565b8380fd5b6040513d84823e3d90fd5b8480fd5b634e487b7160e01b88526011600452602488fd5b816104cf9161197c565b6104da57875f61034a565b8780fd5b3494506102f6565b915093506020813d602011610519575b816105036020938361197c565b8101031261051557889051935f6102ed565b5f80fd5b3d91506104f6565b634e487b7160e01b8a52601160045260248afd5b6068546001600160a01b031691506101eb565b50346101ba5760803660031901126101ba576105626118c9565b602435906001600160a01b03821680830361049e576044356001600160a01b0381168082036108f5576064356001600160a01b038116939092908484036104da5787549660ff8860081c1615978880996108e8575b80156108d1575b156108755760ff1981166001178a5588610864575b506105ed60ff8a5460081c166105e881612128565b612128565b6105f6336120bf565b6105fe612067565b3b1561081557606780546001600160a01b031916821790557fa76ad0adbf45318f8633aa0210f711273d50fbb6fef76ed95bbae97082c75daa8880a2610642612067565b3b156107c557606880546001600160a01b031916821790557f65a63e5066ee2fcdf9d32a7f1bf7ce71c76066f19d0609dddccd334ab87237d78680a2610686612067565b3b1561077457606980546001600160a01b031916821790557f329ec8e2438a73828ecf31a6568d7a91d7b1d79e342b0692914fd053d1a002b18480a26106ca612067565b6001600160a01b03811615610720576106e2906120bf565b6106e95780f35b61ff001981541681557f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb3847402498602060405160018152a180f35b60405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608490fd5b60405162461bcd60e51b815260206004820152602360248201527f4d61696c626f783a20726571756972656420686f6f6b206e6f7420636f6e74726044820152621858dd60ea1b6064820152608490fd5b60405162461bcd60e51b815260206004820152602260248201527f4d61696c626f783a2064656661756c7420686f6f6b206e6f7420636f6e74726160448201526118dd60f21b6064820152608490fd5b60405162461bcd60e51b815260206004820152602160248201527f4d61696c626f783a2064656661756c742049534d206e6f7420636f6e747261636044820152601d60fa1b6064820152608490fd5b61ffff19166101011789555f6105d3565b60405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b6064820152608490fd5b50303b1580156105be5750600160ff8216146105be565b50600160ff8216106105b7565b8580fd5b50346101ba57602061092561090d366118df565b6068546001600160a01b031695909491939190611df5565b604051908152f35b50346101ba5760203660031901126101ba576109476118c9565b61094f612067565b803b1561081557606780546001600160a01b0319166001600160a01b039290921691821790557fa76ad0adbf45318f8633aa0210f711273d50fbb6fef76ed95bbae97082c75daa8280a280f35b50346101ba5760203660031901126101ba576109b66118c9565b6109be612067565b6001600160a01b03811615610720576109d6906120bf565b80f35b50346101ba5760203660031901126101ba5760206109fd6109f86118c9565b611f2e565b6040516001600160a01b039091168152f35b50346101ba5760203660031901126101ba576020610a456004355f52606a60205265ffffffffffff60405f205460a01c16151590565b6040519015158152f35b50346101ba57806003193601126101ba576069546040516001600160a01b039091168152602090f35b50346101ba57806003193601126101ba57602063ffffffff606b54821c16604051908152f35b50346101ba57806003193601126101ba57602063ffffffff60655416604051908152f35b50346101ba5760203660031901126101ba5760209063ffffffff610ae4611810565b168152606c8252604060018060a01b0391205416604051908152f35b50346101ba57610b0f36611a90565b606854919493926001600160a01b039092169185908315610c7f575b610b359394611fd8565b9060018060a01b03606954169360206040518096630aaccd2360e41b8252604060048301528180610b7f610b6d604483018b89611daf565b82810360031901602484015289611a51565b03915afa948515610c74578495610c39575b509160209161039a610bc39460405195869485938493630aaccd2360e41b8552604060048601528a6044860191611daf565b03916001600160a01b03165afa9081156104a2578291610c07575b508201809211610bf357602082604051908152f35b634e487b7160e01b81526011600452602490fd5b90506020813d602011610c31575b81610c226020938361197c565b8101031261051557515f610bde565b3d9150610c15565b91929094506020823d602011610c6c575b81610c576020938361197c565b81010312610515579051939091906020610b91565b3d9150610c4a565b6040513d86823e3d90fd5b6068546001600160a01b03169350610b2b565b50346101ba5760203660031901126101ba57610cac6118c9565b610cb4612067565b803b156107c557606880546001600160a01b0319166001600160a01b039290921691821790557f65a63e5066ee2fcdf9d32a7f1bf7ce71c76066f19d0609dddccd334ab87237d78280a280f35b50346101ba57806003193601126101ba5750610d4b604051610d2460408261197c565b60068152650d4b8c4c4b8d60d21b6020820152604051918291602083526020830190611a51565b0390f35b50346101ba5760203660031901126101ba57610d7a6040610d4b926004358152606d602052206119b1565b604051918291602083526020830190611a51565b50346101ba57806003193601126101ba576033546040516001600160a01b039091168152602090f35b50346101ba57806003193601126101ba57602060405163ffffffff7f0000000000000000000000000000000000000000000000000000000000000000168152f35b50346101ba57806003193601126101ba5760206040517f00000000000000000000000000000000000000000000000000000000000000008152f35b50346101ba57806003193601126101ba57602063ffffffff606b5416604051908152f35b50346101ba576020610925610e6b36611850565b95949094939193611df5565b5060403660031901126101ba576004356001600160401b03811161043857610ea3903690600401611823565b6024356001600160401b03811161049e57610ec2903690600401611823565b929091836001116104ad576003833560f81c036112e45783602d116104ad577f000000000000000000000000000000000000000000000000000000000000000063ffffffff16602984013560e01c0361129f57610f1e84611a75565b610f2b604051918261197c565b8481526020810190368686011161129b5785858337866020878301015251902090610f6c825f52606a60205265ffffffffffff60405f205460a01c16151590565b6112565784604d116108f557602d8401356001600160a01b038111611205576001600160a01b031692610f9e84611f2e565b91604051604081018181106001600160401b038211176111f15760409081523382524365ffffffffffff166020838101918252878c52606a8152918b209251835491516001600160d01b03199092166001600160a01b03919091161760a09190911b65ffffffffffff60a01b1617909155859490939092909163ffffffff918a9189916110c0916110ad919061103e8e6110388188612107565b96612119565b986040519b8c9a8b998a98167f0d381c2a574ae8f04e213db7cfb4df8df712cdbd427d9868ffef380660ca65748a80a47f1cae38cdd3d3919489272725a5ae62a4f48b2989b0dae843d3c279fee18073a98780a2637bf41d7760e11b8552604060048601526044850191611daf565b8281036003190160248401528b8b611daf565b03926001600160a01b03165af19081156111e65785916111ab575b501561116757826110ed859484612107565b916110f88285612119565b91813b156108f557859361114363ffffffff92604051978896879586956356d5d47560e01b8752166004860152602485015260606044850152604d6064850192604c19019101611daf565b039134905af180156104a2576111565750f35b816111609161197c565b6101ba5780f35b606460405162461bcd60e51b815260206004820152602060248201527f4d61696c626f783a2049534d20766572696669636174696f6e206661696c65646044820152fd5b90506020813d6020116111de575b816111c66020938361197c565b810103126104ad575180151581036104ad575f6110db565b3d91506111b9565b6040513d87823e3d90fd5b634e487b7160e01b8a52604160045260248afd5b60405162461bcd60e51b8152602060048201526024808201527f5479706543617374733a2062797465733332546f41646472657373206f766572604482015263666c6f7760e01b6064820152608490fd5b60405162461bcd60e51b815260206004820152601a60248201527f4d61696c626f783a20616c72656164792064656c6976657265640000000000006044820152606490fd5b8680fd5b60405162461bcd60e51b815260206004820152601f60248201527f4d61696c626f783a20756e65787065637465642064657374696e6174696f6e006044820152606490fd5b60405162461bcd60e51b815260206004820152601460248201527326b0b4b63137bc1d103130b2103b32b939b4b7b760611b6044820152606490fd5b50346101ba57806003193601126101ba57611339612067565b603380546001600160a01b0319811690915581906001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a380f35b50346101ba57806003193601126101ba576067546040516001600160a01b039091168152602090f35b50346101ba5760203660031901126101ba576020906004358152606a8252604060018060a01b0391205416604051908152f35b50346101ba5760403660031901126101ba576113f3611810565b602435906001600160a01b03821682036104475763ffffffff168252606c6020526040822080546001600160a01b0319166001600160a01b0390921691909117905580f35b6020610925611446366118df565b6068546001600160a01b031695909491939190611af0565b50346101ba57806003193601126101ba576068546040516001600160a01b039091168152602090f35b50346101ba5760203660031901126101ba576004356001600160401b038111610438576114b8903690600401611823565b63ffffffff606b93929354168252606d60205260408220906001600160401b0381116115f2576114e88254611944565b601f81116115ad575b5082601f821160011461154b57839482939492611540575b50508160011b915f199060031b1c19161790555b606b5463ffffffff611530818316611d98565b169063ffffffff191617606b5580f35b013590505f80611509565b601f198216948385526020852091855b87811061159557508360019596971061157c575b505050811b01905561151d565b01355f19600384901b60f8161c191690555f808061156f565b9092602060018192868601358155019401910161155b565b82845260208420601f830160051c810191602084106115e8575b601f0160051c01905b8181106115dd57506114f1565b8481556001016115d0565b90915081906115c7565b634e487b7160e01b83526041600452602483fd5b50806003193601126101ba5763ffffffff606b5460201c168152606d60205280611632604082206119b1565b303b156116b4578161165891604051809381926307c39d1360e41b835260048301611acf565b038134305af180156104a25761169f575b50606b5467ffffffff0000000061168863ffffffff8360201c16611d98565b60201b169067ffffffff00000000191617606b5580f35b816116a99161197c565b6101ba57805f611669565b50fd5b50346101ba5760203660031901126101ba576116d16118c9565b6116d9612067565b803b1561077457606980546001600160a01b0319166001600160a01b039290921691821790557f329ec8e2438a73828ecf31a6568d7a91d7b1d79e342b0692914fd053d1a002b18280a280f35b50346101ba57806003193601126101ba576020606654604051908152f35b602061092561175236611850565b95949094939193611af0565b5060203660031901126105155763ffffffff611778611810565b165f52606d60205261178c60405f206119b1565b303b15610515575f6117b291604051809381926307c39d1360e41b835260048301611acf565b038134305af180156117d4576117c6575080f35b6117d291505f9061197c565b005b6040513d5f823e3d90fd5b34610515576020366003190112610515576020906004355f52606a825265ffffffffffff60405f205460a01c168152f35b6004359063ffffffff8216820361051557565b9181601f84011215610515578235916001600160401b038311610515576020838186019501011161051557565b60a06003198201126105155760043563ffffffff811681036105155791602435916044356001600160401b038111610515578161188f91600401611823565b92909291606435906001600160401b038211610515576118b191600401611823565b90916084356001600160a01b03811681036105155790565b600435906001600160a01b038216820361051557565b60806003198201126105155760043563ffffffff811681036105155791602435916044356001600160401b038111610515578161191e91600401611823565b92909291606435906001600160401b0382116105155761194091600401611823565b9091565b90600182811c92168015611972575b602083101461195e57565b634e487b7160e01b5f52602260045260245ffd5b91607f1691611953565b90601f801991011681019081106001600160401b0382111761199d57604052565b634e487b7160e01b5f52604160045260245ffd5b9060405191825f8254926119c484611944565b8084529360018116908115611a2f57506001146119eb575b506119e99250038361197c565b565b90505f9291925260205f20905f915b818310611a135750509060206119e9928201015f6119dc565b60209193508060019154838589010152019101909184926119fa565b9050602092506119e994915060ff191682840152151560051b8201015f6119dc565b805180835260209291819084018484015e5f828201840152601f01601f1916010190565b6001600160401b03811161199d57601f01601f191660200190565b60606003198201126105155760043563ffffffff81168103610515579160243591604435906001600160401b0382116105155761194091600401611823565b906060611aed92604081525f60408201528160208201520190611a51565b90565b95949391909293611b038583868a611fd8565b5f96909590926001600160a01b03841615611d85575b90611b2591868a611fd8565b9283516020850120978860665560655490600163ffffffff8316019163ffffffff8311611d715763ffffffff8093169083191617606555169485604051602081527f769f711d20c679153d382254f59892613b58a97cc876b249134ac25c80f9c814339180611b97602082018b611a51565b0390a460405192887f788dbc1b7152732178210e7f4d9d010ef016f9eafbe66786bd7169f56e0c353a5f80a2606954630aaccd2360e41b85526001600160a01b031660208580611bec89888860048501611dcf565b0381845afa9485156117d4575f95611d3d575b50843410611d35575b803b15610515575f604051809263086011b960e01b8252818881611c318c8b8b60048501611dcf565b03925af180156117d457611d20575b506001600160a01b03169234908103919082116104b157833b156104da5760405163086011b960e01b815294889486949093859390928492611c859260048501611dcf565b03925af18015610c7457908491611d0b575b5052606c60205260408220546001600160a01b031690811561044b57813b1561044757611ce583928392604051948580948193630ca2264360e21b8352602060048401526024830190611a51565b03925af180156104a257611cf857505090565b611d0382809261197c565b6101ba575090565b81611d159161197c565b61044757825f611c97565b611d2d9198505f9061197c565b5f965f611c40565b349450611c08565b9094506020813d602011611d69575b81611d596020938361197c565b810103126105155751935f611bff565b3d9150611d4c565b634e487b7160e01b5f52601160045260245ffd5b6068546001600160a01b03169350611b19565b63ffffffff1663ffffffff8114611d715760010190565b908060209392818452848401375f828201840152601f01601f1916010190565b91611aed9391611de791604085526040850191611daf565b916020818403910152611a51565b95949291906001600160a01b03861615611f1b575b611e1693949596611fd8565b606954604051630aaccd2360e41b8152939192919060209085906001600160a01b03168180611e4a88888860048501611dcf565b03915afa9384156117d4575f94611ede575b509360209291611e84949560405195869485938493630aaccd2360e41b855260048501611dcf565b03916001600160a01b03165afa9081156117d4575f91611eac575b508101809111611d715790565b90506020813d602011611ed6575b81611ec76020938361197c565b8101031261051557515f611e9f565b3d9150611eba565b92919350936020833d602011611f13575b81611efc6020938361197c565b810103126105155791519193919290916020611e5c565b3d9150611eef565b6068546001600160a01b03169550611e0a565b5f8091604051602081019063de523cf360e01b825260048152611f5260248261197c565b51915afa3d15611fd0573d90611f6782611a75565b91611f75604051938461197c565b82523d5f602084013e5b80611fc6575b611f9a575b506067546001600160a01b031690565b60208180518101031261051557602001516001600160a01b03811690819003610515578015611f8a5790565b5080511515611f85565b606090611f7f565b606554604051600360f81b60208201526001600160e01b031960e092831b811660218301527f0000000000000000000000000000000000000000000000000000000000000000831b811660258301523360298301529290911b9091166049820152604d81019190915291611aed91606d91849181908484013781015f838201520301601f19810183528261197c565b6033546001600160a01b0316330361207b57565b606460405162461bcd60e51b815260206004820152602060248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152fd5b603380546001600160a01b039283166001600160a01b0319821681179092559091167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e05f80a3565b90600911610515576005013560e01c90565b90602911610515576009013590565b1561212f57565b60405162461bcd60e51b815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201526a6e697469616c697a696e6760a81b6064820152608490fdfea26469706673582212201ebce9cbaeeb18a7db947ac08d55bae1fa4c7d4455f4940c16fc84b7b9dcea1b64736f6c634300081a0033" as Hex;
export const MockMailbox = {
    abi,
    bytecode,
    deployedBytecode,
};
