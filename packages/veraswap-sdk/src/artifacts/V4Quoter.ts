import { Hex } from "viem";

export const _constructor = {
    type: "constructor",
    inputs: [{ name: "_poolManager", type: "address", internalType: "contract IPoolManager" }],
    stateMutability: "nonpayable",
} as const;
export const _quoteExactInput = {
    type: "function",
    name: "_quoteExactInput",
    inputs: [
        {
            name: "params",
            type: "tuple",
            internalType: "struct IV4Quoter.QuoteExactParams",
            components: [
                { name: "exactCurrency", type: "address", internalType: "Currency" },
                {
                    name: "path",
                    type: "tuple[]",
                    internalType: "struct PathKey[]",
                    components: [
                        { name: "intermediateCurrency", type: "address", internalType: "Currency" },
                        { name: "fee", type: "uint24", internalType: "uint24" },
                        { name: "tickSpacing", type: "int24", internalType: "int24" },
                        { name: "hooks", type: "address", internalType: "contract IHooks" },
                        { name: "hookData", type: "bytes", internalType: "bytes" },
                    ],
                },
                { name: "exactAmount", type: "uint128", internalType: "uint128" },
            ],
        },
    ],
    outputs: [{ name: "", type: "bytes", internalType: "bytes" }],
    stateMutability: "nonpayable",
} as const;
export const _quoteExactInputSingle = {
    type: "function",
    name: "_quoteExactInputSingle",
    inputs: [
        {
            name: "params",
            type: "tuple",
            internalType: "struct IV4Quoter.QuoteExactSingleParams",
            components: [
                {
                    name: "poolKey",
                    type: "tuple",
                    internalType: "struct PoolKey",
                    components: [
                        { name: "currency0", type: "address", internalType: "Currency" },
                        { name: "currency1", type: "address", internalType: "Currency" },
                        { name: "fee", type: "uint24", internalType: "uint24" },
                        { name: "tickSpacing", type: "int24", internalType: "int24" },
                        { name: "hooks", type: "address", internalType: "contract IHooks" },
                    ],
                },
                { name: "zeroForOne", type: "bool", internalType: "bool" },
                { name: "exactAmount", type: "uint128", internalType: "uint128" },
                { name: "hookData", type: "bytes", internalType: "bytes" },
            ],
        },
    ],
    outputs: [{ name: "", type: "bytes", internalType: "bytes" }],
    stateMutability: "nonpayable",
} as const;
export const _quoteExactOutput = {
    type: "function",
    name: "_quoteExactOutput",
    inputs: [
        {
            name: "params",
            type: "tuple",
            internalType: "struct IV4Quoter.QuoteExactParams",
            components: [
                { name: "exactCurrency", type: "address", internalType: "Currency" },
                {
                    name: "path",
                    type: "tuple[]",
                    internalType: "struct PathKey[]",
                    components: [
                        { name: "intermediateCurrency", type: "address", internalType: "Currency" },
                        { name: "fee", type: "uint24", internalType: "uint24" },
                        { name: "tickSpacing", type: "int24", internalType: "int24" },
                        { name: "hooks", type: "address", internalType: "contract IHooks" },
                        { name: "hookData", type: "bytes", internalType: "bytes" },
                    ],
                },
                { name: "exactAmount", type: "uint128", internalType: "uint128" },
            ],
        },
    ],
    outputs: [{ name: "", type: "bytes", internalType: "bytes" }],
    stateMutability: "nonpayable",
} as const;
export const _quoteExactOutputSingle = {
    type: "function",
    name: "_quoteExactOutputSingle",
    inputs: [
        {
            name: "params",
            type: "tuple",
            internalType: "struct IV4Quoter.QuoteExactSingleParams",
            components: [
                {
                    name: "poolKey",
                    type: "tuple",
                    internalType: "struct PoolKey",
                    components: [
                        { name: "currency0", type: "address", internalType: "Currency" },
                        { name: "currency1", type: "address", internalType: "Currency" },
                        { name: "fee", type: "uint24", internalType: "uint24" },
                        { name: "tickSpacing", type: "int24", internalType: "int24" },
                        { name: "hooks", type: "address", internalType: "contract IHooks" },
                    ],
                },
                { name: "zeroForOne", type: "bool", internalType: "bool" },
                { name: "exactAmount", type: "uint128", internalType: "uint128" },
                { name: "hookData", type: "bytes", internalType: "bytes" },
            ],
        },
    ],
    outputs: [{ name: "", type: "bytes", internalType: "bytes" }],
    stateMutability: "nonpayable",
} as const;
export const poolManager = {
    type: "function",
    name: "poolManager",
    inputs: [],
    outputs: [{ name: "", type: "address", internalType: "contract IPoolManager" }],
    stateMutability: "view",
} as const;
export const quoteExactInput = {
    type: "function",
    name: "quoteExactInput",
    inputs: [
        {
            name: "params",
            type: "tuple",
            internalType: "struct IV4Quoter.QuoteExactParams",
            components: [
                { name: "exactCurrency", type: "address", internalType: "Currency" },
                {
                    name: "path",
                    type: "tuple[]",
                    internalType: "struct PathKey[]",
                    components: [
                        { name: "intermediateCurrency", type: "address", internalType: "Currency" },
                        { name: "fee", type: "uint24", internalType: "uint24" },
                        { name: "tickSpacing", type: "int24", internalType: "int24" },
                        { name: "hooks", type: "address", internalType: "contract IHooks" },
                        { name: "hookData", type: "bytes", internalType: "bytes" },
                    ],
                },
                { name: "exactAmount", type: "uint128", internalType: "uint128" },
            ],
        },
    ],
    outputs: [
        { name: "amountOut", type: "uint256", internalType: "uint256" },
        { name: "gasEstimate", type: "uint256", internalType: "uint256" },
    ],
    stateMutability: "nonpayable",
} as const;
export const quoteExactInputSingle = {
    type: "function",
    name: "quoteExactInputSingle",
    inputs: [
        {
            name: "params",
            type: "tuple",
            internalType: "struct IV4Quoter.QuoteExactSingleParams",
            components: [
                {
                    name: "poolKey",
                    type: "tuple",
                    internalType: "struct PoolKey",
                    components: [
                        { name: "currency0", type: "address", internalType: "Currency" },
                        { name: "currency1", type: "address", internalType: "Currency" },
                        { name: "fee", type: "uint24", internalType: "uint24" },
                        { name: "tickSpacing", type: "int24", internalType: "int24" },
                        { name: "hooks", type: "address", internalType: "contract IHooks" },
                    ],
                },
                { name: "zeroForOne", type: "bool", internalType: "bool" },
                { name: "exactAmount", type: "uint128", internalType: "uint128" },
                { name: "hookData", type: "bytes", internalType: "bytes" },
            ],
        },
    ],
    outputs: [
        { name: "amountOut", type: "uint256", internalType: "uint256" },
        { name: "gasEstimate", type: "uint256", internalType: "uint256" },
    ],
    stateMutability: "nonpayable",
} as const;
export const quoteExactOutput = {
    type: "function",
    name: "quoteExactOutput",
    inputs: [
        {
            name: "params",
            type: "tuple",
            internalType: "struct IV4Quoter.QuoteExactParams",
            components: [
                { name: "exactCurrency", type: "address", internalType: "Currency" },
                {
                    name: "path",
                    type: "tuple[]",
                    internalType: "struct PathKey[]",
                    components: [
                        { name: "intermediateCurrency", type: "address", internalType: "Currency" },
                        { name: "fee", type: "uint24", internalType: "uint24" },
                        { name: "tickSpacing", type: "int24", internalType: "int24" },
                        { name: "hooks", type: "address", internalType: "contract IHooks" },
                        { name: "hookData", type: "bytes", internalType: "bytes" },
                    ],
                },
                { name: "exactAmount", type: "uint128", internalType: "uint128" },
            ],
        },
    ],
    outputs: [
        { name: "amountIn", type: "uint256", internalType: "uint256" },
        { name: "gasEstimate", type: "uint256", internalType: "uint256" },
    ],
    stateMutability: "nonpayable",
} as const;
export const quoteExactOutputSingle = {
    type: "function",
    name: "quoteExactOutputSingle",
    inputs: [
        {
            name: "params",
            type: "tuple",
            internalType: "struct IV4Quoter.QuoteExactSingleParams",
            components: [
                {
                    name: "poolKey",
                    type: "tuple",
                    internalType: "struct PoolKey",
                    components: [
                        { name: "currency0", type: "address", internalType: "Currency" },
                        { name: "currency1", type: "address", internalType: "Currency" },
                        { name: "fee", type: "uint24", internalType: "uint24" },
                        { name: "tickSpacing", type: "int24", internalType: "int24" },
                        { name: "hooks", type: "address", internalType: "contract IHooks" },
                    ],
                },
                { name: "zeroForOne", type: "bool", internalType: "bool" },
                { name: "exactAmount", type: "uint128", internalType: "uint128" },
                { name: "hookData", type: "bytes", internalType: "bytes" },
            ],
        },
    ],
    outputs: [
        { name: "amountIn", type: "uint256", internalType: "uint256" },
        { name: "gasEstimate", type: "uint256", internalType: "uint256" },
    ],
    stateMutability: "nonpayable",
} as const;
export const unlockCallback = {
    type: "function",
    name: "unlockCallback",
    inputs: [{ name: "data", type: "bytes", internalType: "bytes" }],
    outputs: [{ name: "", type: "bytes", internalType: "bytes" }],
    stateMutability: "nonpayable",
} as const;
export const NotEnoughLiquidity = {
    type: "error",
    name: "NotEnoughLiquidity",
    inputs: [{ name: "poolId", type: "bytes32", internalType: "PoolId" }],
} as const;
export const NotPoolManager = { type: "error", name: "NotPoolManager", inputs: [] } as const;
export const NotSelf = { type: "error", name: "NotSelf", inputs: [] } as const;
export const QuoteSwap = {
    type: "error",
    name: "QuoteSwap",
    inputs: [{ name: "amount", type: "uint256", internalType: "uint256" }],
} as const;
export const UnexpectedCallSuccess = { type: "error", name: "UnexpectedCallSuccess", inputs: [] } as const;
export const UnexpectedRevertBytes = {
    type: "error",
    name: "UnexpectedRevertBytes",
    inputs: [{ name: "revertData", type: "bytes", internalType: "bytes" }],
} as const;
export const functions = [
    _constructor,
    _quoteExactInput,
    _quoteExactInputSingle,
    _quoteExactOutput,
    _quoteExactOutputSingle,
    poolManager,
    quoteExactInput,
    quoteExactInputSingle,
    quoteExactOutput,
    quoteExactOutputSingle,
    unlockCallback,
] as const;
export const events = [] as const;
export const errors = [
    NotEnoughLiquidity,
    NotPoolManager,
    NotSelf,
    QuoteSwap,
    UnexpectedCallSuccess,
    UnexpectedRevertBytes,
] as const;
export const abi = [...functions, ...events, ...errors] as const;

export const bytecode =
    "" as Hex;
export const deployedBytecode =
    "0x60806040526004361015610011575f80fd5b5f3560e01c8063147d2af91461063f5780635873307314610605578063595323f51461057a5780636a36a38c1461048c57806391dd7346146103c1578063aa2f1501146102a8578063aa9d21cb1461026e578063ca253dc914610174578063dc4c90d3146101305763eebe0c6a14610087575f80fd5b3461012c5761009536610a11565b30330361011d57806100f86100f26100ed60a06001600160801b039501936100bc85610a9c565b6100d5876100cc60c08501610aa9565b16600f0b610b8e565b906100e360e0840184610abd565b9490933690610903565b610de7565b91610a9c565b156101135781165b633b2f660160e21b5f521660045260245ffd5b60801d8116610100565b6314e1dbf760e11b5f5260045ffd5b5f80fd5b3461012c575f36600319011261012c576040517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b3461012c5760406101843661078b565b5f60606101dd826101ae6101bc5a968851928391631a8da8e360e21b602084015260248301610bab565b03601f1981018352826106c3565b8651809381926348c8949160e01b8352602060048401526024830190610a45565b0381837f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03165af1908161024e575b50610243575050610236610230610228610cdb565b925a90610b9e565b91610d0a565b9082519182526020820152f35b610236919250610d0a565b610269903d805f833e61026181836106c3565b810190610c79565b610213565b3461012c57604061027e3661096c565b5f60606101dd826101ae6101bc5a96885192839163775f063560e11b602084015260248301610d99565b3461012c576102b636610a69565b30330361011d57602081016102cb8183610b0f565b90506102d960408401610aa9565b916102e384610b44565b9190815b610307576001600160801b0384633b2f660160e21b5f521660045260245ffd5b9091926103148286610b0f565b91905f1985018581116103935761034461033d6001600160801b03926103829661036095610b58565b9788610f5d565b939061035360808a018a610abd565b9390921690851590610de7565b90156103a75761037290600f0b610aef565b6001600160801b03165b93610b44565b918015610393575f190190816102e7565b634e487b7160e01b5f52601160045260245ffd5b6103b39060801d610aef565b6001600160801b031661037c565b3461012c57602036600319011261012c576004356001600160401b03811161012c573660238201121561012c578060040135906001600160401b03821161012c57366024838301011161012c577f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316330361047d575f6024819284806040519384930183378101838152039082305af1610461610cdb565b9061046e57602081519101fd5b63703a952d60e11b5f5260045ffd5b63570c108560e11b5f5260045ffd5b3461012c5761049a36610a69565b30330361011d5760208101906104b08282610b0f565b90506104be60408301610aa9565b916104c881610b44565b935f915b8383106104ef576001600160801b0385633b2f660160e21b5f521660045260245ffd5b9091929361055e6001600160801b0361054861053360019461052561051e8a6105188b8b610b0f565b90610b58565b9b8c610f5d565b948593919216600f0b610b8e565b61054060808d018d610abd565b939092610de7565b9015610569576001600160801b03165b96610b44565b9594930191906104cc565b60801d6001600160801b0316610558565b3461012c5761058836610a11565b30330361011d57806105cb6100f26100ed60a06001600160801b039501936105af85610a9c565b866105bc60c08401610aa9565b16906100e360e0840184610abd565b156105f2576105dc9060801d610aef565b633b2f660160e21b5f9081529116600452602490fd5b6105fe90600f0b610aef565b8116610100565b3461012c5760406106153661096c565b5f60606101dd826101ae6101bc5a96885192839163595323f560e01b602084015260248301610d99565b3461012c57604061064f3661078b565b5f60606101dd826101ae6101bc5a96885192839163aa2f150160e01b602084015260248301610bab565b606081019081106001600160401b0382111761069457604052565b634e487b7160e01b5f52604160045260245ffd5b60a081019081106001600160401b0382111761069457604052565b90601f801991011681019081106001600160401b0382111761069457604052565b35906001600160a01b038216820361012c57565b359062ffffff8216820361012c57565b35908160020b820361012c57565b6001600160401b03811161069457601f01601f191660200190565b81601f8201121561012c5780359061074882610716565b9261075660405194856106c3565b8284526020838301011161012c57815f926020809301838601378301015290565b35906001600160801b038216820361012c57565b602060031982011261012c576004356001600160401b03811161012c576060818303600319011261012c57604051916107c383610679565b6107cf826004016106e4565b835260248201356001600160401b03811161012c578201908060238301121561012c576004820135916001600160401b038311610694578260051b6040519361081b60208301866106c3565b8452810160240190602084019083831161012c5760248101915b83831061085a575050505050602083015261085290604401610777565b604082015290565b82356001600160401b03811161012c576004908301019060a0601f19838803011261012c576040519061088c826106a8565b610898602084016106e4565b82526108a6604084016106f8565b60208301526108b760608401610708565b60408301526108c8608084016106e4565b606083015260a0830135916001600160401b03831161012c576108f388602080969581960101610731565b6080820152815201920191610835565b91908260a091031261012c5760405161091b816106a8565b608061096781839561092c816106e4565b855261093a602082016106e4565b602086015261094b604082016106f8565b604086015261095c60608201610708565b6060860152016106e4565b910152565b602060031982011261012c576004356001600160401b03811161012c57610100818303600319011261012c5760405191608083018381106001600160401b03821117610694576040526109c28183600401610903565b835260a4820135801515810361012c5760208401526109e360c48301610777565b604084015260e4820135916001600160401b03831161012c57610a099201600401610731565b606082015290565b602060031982011261012c57600435906001600160401b03821161012c5761010090829003600319011261012c5760040190565b805180835260209291819084018484015e5f828201840152601f01601f1916010190565b602060031982011261012c57600435906001600160401b03821161012c57606090829003600319011261012c5760040190565b35801515810361012c5790565b356001600160801b038116810361012c5790565b903590601e198136030182121561012c57018035906001600160401b03821161012c5760200191813603831361012c57565b600f0b6f7fffffffffffffffffffffffffffffff198114610393575f0390565b903590601e198136030182121561012c57018035906001600160401b03821161012c57602001918160051b3603831361012c57565b356001600160a01b038116810361012c5790565b9190811015610b7a5760051b81013590609e198136030182121561012c570190565b634e487b7160e01b5f52603260045260245ffd5b600160ff1b8114610393575f0390565b9190820391821161039357565b602080825282516001600160a01b031682820152828101516060604084015280516080840181905260a0600582901b85018101959392909201915f9085015b828210610c0b57505050506001600160801b03604060609201511691015290565b90919295602080610c6b600193609f198a820301865260a060808c518780841b03815116845262ffffff868201511686850152604081015160020b60408501528780841b0360608201511660608501520151918160808201520190610a45565b980192019201909291610bea565b60208183031261012c578051906001600160401b03821161012c570181601f8201121561012c57805190610cac82610716565b92610cba60405194856106c3565b8284526020838301011161012c57815f9260208093018386015e8301015290565b3d15610d05573d90610cec82610716565b91610cfa60405193846106c3565b82523d5f602084013e565b606090565b60208101516001600160e01b0319166304d099ff60e21b01610d2d576024015190565b6040516306190b2b60e41b815260206004820152908190610d52906024830190610a45565b0390fd5b80516001600160a01b03908116835260208083015182169084015260408083015162ffffff169084015260608083015160020b9084015260809182015116910152565b6101206060610de49360208452610db4602085018251610d56565b6020810151151560c08501526001600160801b0360408201511660e0850152015191610100808201520190610a45565b90565b939493926020908215610f3f576101446401000276a4935b60405190610e0c82610679565b1515988982528085830194888652604084019760018060a01b031688526040519788968795633cf3645360e21b8752610e498d6004890190610d56565b51151560a48701525160c4860152516001600160a01b031660e48501526101206101048501526101248401829052848401375f838284010152601f801991011681010301815f60018060a01b037f0000000000000000000000000000000000000000000000000000000000000000165af1908115610f34575f91610f02575b5080945f8312145f14610efa5760801d5b600f0b03610ee45750565b60a09020631e97b5cd60e21b5f5260045260245ffd5b600f0b610ed9565b90506020813d602011610f2c575b81610f1d602093836106c3565b8101031261012c57515f610ec8565b3d9150610f10565b6040513d5f823e3d90fd5b61014473fffd8963efd1fc6a506488495d951d5263988d2593610dff565b905f6080604051610f6d816106a8565b8281528260208201528260408201528260608201520152610f8d82610b44565b6001600160a01b03828116929082168084101561101b57505b6001600160a01b031691821492602081013562ffffff81169081900361012c576040820135918260020b80930361012c57606001359260018060a01b03841680940361012c5760405194610ff9866106a8565b85526001600160a01b0316602085015260408401526060830152608082015291565b9150508190610fa656fea164736f6c634300081a000a" as Hex;
export const V4Quoter = {
    abi,
    bytecode,
    deployedBytecode,
};
