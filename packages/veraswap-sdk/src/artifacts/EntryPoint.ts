import { Hex } from "viem";

export const receive = { type: "receive", stateMutability: "payable" } as const;
export const addStake = {
    type: "function",
    name: "addStake",
    inputs: [{ name: "unstakeDelaySec", type: "uint32", internalType: "uint32" }],
    outputs: [],
    stateMutability: "payable",
} as const;
export const balanceOf = {
    type: "function",
    name: "balanceOf",
    inputs: [{ name: "account", type: "address", internalType: "address" }],
    outputs: [{ name: "", type: "uint256", internalType: "uint256" }],
    stateMutability: "view",
} as const;
export const delegateAndRevert = {
    type: "function",
    name: "delegateAndRevert",
    inputs: [
        { name: "target", type: "address", internalType: "address" },
        { name: "data", type: "bytes", internalType: "bytes" },
    ],
    outputs: [],
    stateMutability: "nonpayable",
} as const;
export const depositTo = {
    type: "function",
    name: "depositTo",
    inputs: [{ name: "account", type: "address", internalType: "address" }],
    outputs: [],
    stateMutability: "payable",
} as const;
export const deposits = {
    type: "function",
    name: "deposits",
    inputs: [{ name: "", type: "address", internalType: "address" }],
    outputs: [
        { name: "deposit", type: "uint256", internalType: "uint256" },
        { name: "staked", type: "bool", internalType: "bool" },
        { name: "stake", type: "uint112", internalType: "uint112" },
        { name: "unstakeDelaySec", type: "uint32", internalType: "uint32" },
        { name: "withdrawTime", type: "uint48", internalType: "uint48" },
    ],
    stateMutability: "view",
} as const;
export const getDepositInfo = {
    type: "function",
    name: "getDepositInfo",
    inputs: [{ name: "account", type: "address", internalType: "address" }],
    outputs: [
        {
            name: "info",
            type: "tuple",
            internalType: "struct IStakeManager.DepositInfo",
            components: [
                { name: "deposit", type: "uint256", internalType: "uint256" },
                { name: "staked", type: "bool", internalType: "bool" },
                { name: "stake", type: "uint112", internalType: "uint112" },
                { name: "unstakeDelaySec", type: "uint32", internalType: "uint32" },
                { name: "withdrawTime", type: "uint48", internalType: "uint48" },
            ],
        },
    ],
    stateMutability: "view",
} as const;
export const getGasConsumed = {
    type: "function",
    name: "getGasConsumed",
    inputs: [
        { name: "account", type: "address", internalType: "address" },
        { name: "phase", type: "uint256", internalType: "uint256" },
    ],
    outputs: [{ name: "", type: "uint256", internalType: "uint256" }],
    stateMutability: "view",
} as const;
export const getNonce = {
    type: "function",
    name: "getNonce",
    inputs: [
        { name: "sender", type: "address", internalType: "address" },
        { name: "key", type: "uint192", internalType: "uint192" },
    ],
    outputs: [{ name: "nonce", type: "uint256", internalType: "uint256" }],
    stateMutability: "view",
} as const;
export const getSenderAddress = {
    type: "function",
    name: "getSenderAddress",
    inputs: [{ name: "initCode", type: "bytes", internalType: "bytes" }],
    outputs: [],
    stateMutability: "nonpayable",
} as const;
export const getUserOpHash = {
    type: "function",
    name: "getUserOpHash",
    inputs: [
        {
            name: "userOp",
            type: "tuple",
            internalType: "struct PackedUserOperation",
            components: [
                { name: "sender", type: "address", internalType: "address" },
                { name: "nonce", type: "uint256", internalType: "uint256" },
                { name: "initCode", type: "bytes", internalType: "bytes" },
                { name: "callData", type: "bytes", internalType: "bytes" },
                { name: "accountGasLimits", type: "bytes32", internalType: "bytes32" },
                { name: "preVerificationGas", type: "uint256", internalType: "uint256" },
                { name: "gasFees", type: "bytes32", internalType: "bytes32" },
                { name: "paymasterAndData", type: "bytes", internalType: "bytes" },
                { name: "signature", type: "bytes", internalType: "bytes" },
            ],
        },
    ],
    outputs: [{ name: "", type: "bytes32", internalType: "bytes32" }],
    stateMutability: "view",
} as const;
export const handleAggregatedOps = {
    type: "function",
    name: "handleAggregatedOps",
    inputs: [
        {
            name: "opsPerAggregator",
            type: "tuple[]",
            internalType: "struct IEntryPoint.UserOpsPerAggregator[]",
            components: [
                {
                    name: "userOps",
                    type: "tuple[]",
                    internalType: "struct PackedUserOperation[]",
                    components: [
                        { name: "sender", type: "address", internalType: "address" },
                        { name: "nonce", type: "uint256", internalType: "uint256" },
                        { name: "initCode", type: "bytes", internalType: "bytes" },
                        { name: "callData", type: "bytes", internalType: "bytes" },
                        { name: "accountGasLimits", type: "bytes32", internalType: "bytes32" },
                        { name: "preVerificationGas", type: "uint256", internalType: "uint256" },
                        { name: "gasFees", type: "bytes32", internalType: "bytes32" },
                        { name: "paymasterAndData", type: "bytes", internalType: "bytes" },
                        { name: "signature", type: "bytes", internalType: "bytes" },
                    ],
                },
                { name: "aggregator", type: "address", internalType: "contract IAggregator" },
                { name: "signature", type: "bytes", internalType: "bytes" },
            ],
        },
        { name: "beneficiary", type: "address", internalType: "address payable" },
    ],
    outputs: [],
    stateMutability: "nonpayable",
} as const;
export const handleOps = {
    type: "function",
    name: "handleOps",
    inputs: [
        {
            name: "ops",
            type: "tuple[]",
            internalType: "struct PackedUserOperation[]",
            components: [
                { name: "sender", type: "address", internalType: "address" },
                { name: "nonce", type: "uint256", internalType: "uint256" },
                { name: "initCode", type: "bytes", internalType: "bytes" },
                { name: "callData", type: "bytes", internalType: "bytes" },
                { name: "accountGasLimits", type: "bytes32", internalType: "bytes32" },
                { name: "preVerificationGas", type: "uint256", internalType: "uint256" },
                { name: "gasFees", type: "bytes32", internalType: "bytes32" },
                { name: "paymasterAndData", type: "bytes", internalType: "bytes" },
                { name: "signature", type: "bytes", internalType: "bytes" },
            ],
        },
        { name: "beneficiary", type: "address", internalType: "address payable" },
    ],
    outputs: [],
    stateMutability: "nonpayable",
} as const;
export const incrementNonce = {
    type: "function",
    name: "incrementNonce",
    inputs: [{ name: "key", type: "uint192", internalType: "uint192" }],
    outputs: [],
    stateMutability: "nonpayable",
} as const;
export const innerHandleOp = {
    type: "function",
    name: "innerHandleOp",
    inputs: [
        { name: "callData", type: "bytes", internalType: "bytes" },
        {
            name: "opInfo",
            type: "tuple",
            internalType: "struct EntryPoint.UserOpInfo",
            components: [
                {
                    name: "mUserOp",
                    type: "tuple",
                    internalType: "struct EntryPoint.MemoryUserOp",
                    components: [
                        { name: "sender", type: "address", internalType: "address" },
                        { name: "nonce", type: "uint256", internalType: "uint256" },
                        { name: "verificationGasLimit", type: "uint256", internalType: "uint256" },
                        { name: "callGasLimit", type: "uint256", internalType: "uint256" },
                        { name: "paymasterVerificationGasLimit", type: "uint256", internalType: "uint256" },
                        { name: "paymasterPostOpGasLimit", type: "uint256", internalType: "uint256" },
                        { name: "preVerificationGas", type: "uint256", internalType: "uint256" },
                        { name: "paymaster", type: "address", internalType: "address" },
                        { name: "maxFeePerGas", type: "uint256", internalType: "uint256" },
                        { name: "maxPriorityFeePerGas", type: "uint256", internalType: "uint256" },
                    ],
                },
                { name: "userOpHash", type: "bytes32", internalType: "bytes32" },
                { name: "prefund", type: "uint256", internalType: "uint256" },
                { name: "contextOffset", type: "uint256", internalType: "uint256" },
                { name: "preOpGas", type: "uint256", internalType: "uint256" },
            ],
        },
        { name: "context", type: "bytes", internalType: "bytes" },
    ],
    outputs: [{ name: "actualGasCost", type: "uint256", internalType: "uint256" }],
    stateMutability: "nonpayable",
} as const;
export const nonceSequenceNumber = {
    type: "function",
    name: "nonceSequenceNumber",
    inputs: [
        { name: "", type: "address", internalType: "address" },
        { name: "", type: "uint192", internalType: "uint192" },
    ],
    outputs: [{ name: "", type: "uint256", internalType: "uint256" }],
    stateMutability: "view",
} as const;
export const supportsInterface = {
    type: "function",
    name: "supportsInterface",
    inputs: [{ name: "interfaceId", type: "bytes4", internalType: "bytes4" }],
    outputs: [{ name: "", type: "bool", internalType: "bool" }],
    stateMutability: "view",
} as const;
export const unlockStake = {
    type: "function",
    name: "unlockStake",
    inputs: [],
    outputs: [],
    stateMutability: "nonpayable",
} as const;
export const withdrawStake = {
    type: "function",
    name: "withdrawStake",
    inputs: [{ name: "withdrawAddress", type: "address", internalType: "address payable" }],
    outputs: [],
    stateMutability: "nonpayable",
} as const;
export const withdrawTo = {
    type: "function",
    name: "withdrawTo",
    inputs: [
        { name: "withdrawAddress", type: "address", internalType: "address payable" },
        { name: "withdrawAmount", type: "uint256", internalType: "uint256" },
    ],
    outputs: [],
    stateMutability: "nonpayable",
} as const;
export const AccountDeployed = {
    type: "event",
    name: "AccountDeployed",
    inputs: [
        { name: "userOpHash", type: "bytes32", indexed: true, internalType: "bytes32" },
        { name: "sender", type: "address", indexed: true, internalType: "address" },
        { name: "factory", type: "address", indexed: false, internalType: "address" },
        { name: "paymaster", type: "address", indexed: false, internalType: "address" },
    ],
    anonymous: false,
} as const;
export const BeforeExecution = { type: "event", name: "BeforeExecution", inputs: [], anonymous: false } as const;
export const Deposited = {
    type: "event",
    name: "Deposited",
    inputs: [
        { name: "account", type: "address", indexed: true, internalType: "address" },
        { name: "totalDeposit", type: "uint256", indexed: false, internalType: "uint256" },
    ],
    anonymous: false,
} as const;
export const PostOpRevertReason = {
    type: "event",
    name: "PostOpRevertReason",
    inputs: [
        { name: "userOpHash", type: "bytes32", indexed: true, internalType: "bytes32" },
        { name: "sender", type: "address", indexed: true, internalType: "address" },
        { name: "nonce", type: "uint256", indexed: false, internalType: "uint256" },
        { name: "revertReason", type: "bytes", indexed: false, internalType: "bytes" },
    ],
    anonymous: false,
} as const;
export const SignatureAggregatorChanged = {
    type: "event",
    name: "SignatureAggregatorChanged",
    inputs: [{ name: "aggregator", type: "address", indexed: true, internalType: "address" }],
    anonymous: false,
} as const;
export const StakeLocked = {
    type: "event",
    name: "StakeLocked",
    inputs: [
        { name: "account", type: "address", indexed: true, internalType: "address" },
        { name: "totalStaked", type: "uint256", indexed: false, internalType: "uint256" },
        { name: "unstakeDelaySec", type: "uint256", indexed: false, internalType: "uint256" },
    ],
    anonymous: false,
} as const;
export const StakeUnlocked = {
    type: "event",
    name: "StakeUnlocked",
    inputs: [
        { name: "account", type: "address", indexed: true, internalType: "address" },
        { name: "withdrawTime", type: "uint256", indexed: false, internalType: "uint256" },
    ],
    anonymous: false,
} as const;
export const StakeWithdrawn = {
    type: "event",
    name: "StakeWithdrawn",
    inputs: [
        { name: "account", type: "address", indexed: true, internalType: "address" },
        { name: "withdrawAddress", type: "address", indexed: false, internalType: "address" },
        { name: "amount", type: "uint256", indexed: false, internalType: "uint256" },
    ],
    anonymous: false,
} as const;
export const UserOperationEvent = {
    type: "event",
    name: "UserOperationEvent",
    inputs: [
        { name: "userOpHash", type: "bytes32", indexed: true, internalType: "bytes32" },
        { name: "sender", type: "address", indexed: true, internalType: "address" },
        { name: "paymaster", type: "address", indexed: true, internalType: "address" },
        { name: "nonce", type: "uint256", indexed: false, internalType: "uint256" },
        { name: "success", type: "bool", indexed: false, internalType: "bool" },
        { name: "actualGasCost", type: "uint256", indexed: false, internalType: "uint256" },
        { name: "actualGasUsed", type: "uint256", indexed: false, internalType: "uint256" },
    ],
    anonymous: false,
} as const;
export const UserOperationPrefundTooLow = {
    type: "event",
    name: "UserOperationPrefundTooLow",
    inputs: [
        { name: "userOpHash", type: "bytes32", indexed: true, internalType: "bytes32" },
        { name: "sender", type: "address", indexed: true, internalType: "address" },
        { name: "nonce", type: "uint256", indexed: false, internalType: "uint256" },
    ],
    anonymous: false,
} as const;
export const UserOperationRevertReason = {
    type: "event",
    name: "UserOperationRevertReason",
    inputs: [
        { name: "userOpHash", type: "bytes32", indexed: true, internalType: "bytes32" },
        { name: "sender", type: "address", indexed: true, internalType: "address" },
        { name: "nonce", type: "uint256", indexed: false, internalType: "uint256" },
        { name: "revertReason", type: "bytes", indexed: false, internalType: "bytes" },
    ],
    anonymous: false,
} as const;
export const Withdrawn = {
    type: "event",
    name: "Withdrawn",
    inputs: [
        { name: "account", type: "address", indexed: true, internalType: "address" },
        { name: "withdrawAddress", type: "address", indexed: false, internalType: "address" },
        { name: "amount", type: "uint256", indexed: false, internalType: "uint256" },
    ],
    anonymous: false,
} as const;
export const DelegateAndRevert = {
    type: "error",
    name: "DelegateAndRevert",
    inputs: [
        { name: "success", type: "bool", internalType: "bool" },
        { name: "ret", type: "bytes", internalType: "bytes" },
    ],
} as const;
export const FailedOp = {
    type: "error",
    name: "FailedOp",
    inputs: [
        { name: "opIndex", type: "uint256", internalType: "uint256" },
        { name: "reason", type: "string", internalType: "string" },
    ],
} as const;
export const FailedOpWithRevert = {
    type: "error",
    name: "FailedOpWithRevert",
    inputs: [
        { name: "opIndex", type: "uint256", internalType: "uint256" },
        { name: "reason", type: "string", internalType: "string" },
        { name: "inner", type: "bytes", internalType: "bytes" },
    ],
} as const;
export const PostOpReverted = {
    type: "error",
    name: "PostOpReverted",
    inputs: [{ name: "returnData", type: "bytes", internalType: "bytes" }],
} as const;
export const ReentrancyGuardReentrantCall = {
    type: "error",
    name: "ReentrancyGuardReentrantCall",
    inputs: [],
} as const;
export const SenderAddressResult = {
    type: "error",
    name: "SenderAddressResult",
    inputs: [{ name: "sender", type: "address", internalType: "address" }],
} as const;
export const SignatureValidationFailed = {
    type: "error",
    name: "SignatureValidationFailed",
    inputs: [{ name: "aggregator", type: "address", internalType: "address" }],
} as const;
export const functions = [
    receive,
    addStake,
    balanceOf,
    delegateAndRevert,
    depositTo,
    deposits,
    getDepositInfo,
    getGasConsumed,
    getNonce,
    getSenderAddress,
    getUserOpHash,
    handleAggregatedOps,
    handleOps,
    incrementNonce,
    innerHandleOp,
    nonceSequenceNumber,
    supportsInterface,
    unlockStake,
    withdrawStake,
    withdrawTo,
] as const;
export const events = [
    AccountDeployed,
    BeforeExecution,
    Deposited,
    PostOpRevertReason,
    SignatureAggregatorChanged,
    StakeLocked,
    StakeUnlocked,
    StakeWithdrawn,
    UserOperationEvent,
    UserOperationPrefundTooLow,
    UserOperationRevertReason,
    Withdrawn,
] as const;
export const errors = [
    DelegateAndRevert,
    FailedOp,
    FailedOpWithRevert,
    PostOpReverted,
    ReentrancyGuardReentrantCall,
    SenderAddressResult,
    SignatureValidationFailed,
] as const;
export const abi = [...functions, ...events, ...errors] as const;

export const bytecode =
    "0x60a08060405234607657600160025561013e8181016001600160401b038111838210176062578291612fc0833903905ff08015605757608052604051612f45908161007b8239608051818181610a17015261257d0152f35b6040513d5f823e3d90fd5b634e487b7160e01b5f52604160045260245ffd5b5f80fdfe60806040526004361015610023575b3615610018575f80fd5b61002133611cd5565b005b5f803560e01c806242dc53146113b257806301ffc9a7146113135780630396cb60146110c45780630bd28e3b146110725780631b2e01b81461101f578063205c287814610f0257806322cdde4c14610eb957806335567e1a14610e515780635287ce1214610d7f57806370a0823114610d47578063765e827f14610b32578063850aaf6214610aaa5780639b249f69146109b8578063b760faf914610998578063bb9fe6bf14610869578063c23a5cea14610693578063dbed18e0146101be578063ee5a97c81461017b5763fc7e286d146100fe575061000e565b346101785760203660031901126101785760a0906040906001600160a01b0361012561194b565b168152806020522065ffffffffffff6001825492015460405192835260ff8116151560208401526001600160701b038160081c16604084015263ffffffff8160781c16606084015260981c166080820152f35b80fd5b5034610178576040366003190112610178576020906040906001600160a01b036101a361194b565b16815260038352818120602435825283522054604051908152f35b5034610178576101cd366119a4565b906101d9939293611eae565b8291835b8281106104e3575090916101f090611b99565b9183845b82811061030b5750507fbb47ee3e183a558b1a2ff0874b079f3fc5478b7454eacf2bfc5af2ff5878f9728480a183928491855b818110610266578661025e8787837f575ff3acadd5ab348fe1855e217e0f3678f8d767d7494c9f9fefbee2e17cca4d8180a2612c78565b600160025580f35b6102b361027482848b611d17565b6001600160a01b0361028860208301611d6e565b167f575ff3acadd5ab348fe1855e217e0f3678f8d767d7494c9f9fefbee2e17cca4d8a80a280611d39565b9088915b8083106102c957505050600101610227565b909195976103026102fc6001926102f68c6102e58c888a611c73565b6102ef828d611c4b565b51916128fe565b90611a69565b99611a76565b960191906102b7565b610316818489611d17565b602061032e6103258380611d39565b92909301611d6e565b88926001600160a01b03909116905b82841061035057505050506001016101f4565b9091929461037d610376610364838c611c4b565b51610370898887611c73565b84611ecc565b9190612ea4565b906001600160a01b031685036104a05761045a5761039a90612ea4565b906001600160a01b0316610417576103c1576103b7600191611a76565b950192919061033d565b60a48660405190631101335b60e11b8252600482015260406024820152602160448201527f41413332207061796d61737465722065787069726564206f72206e6f742064756064820152606560f81b6084820152fd5b60848760405190631101335b60e11b8252600482015260406024820152601460448201527320a0999a1039b4b3b730ba3ab9329032b93937b960611b6064820152fd5b60848760405190631101335b60e11b82526004820152604060248201526017604482015276414132322065787069726564206f72206e6f742064756560481b6064820152fd5b60848860405190631101335b60e11b8252600482015260406024820152601460448201527320a0991a1039b4b3b730ba3ab9329032b93937b960611b6064820152fd5b6104ee818488611d17565b936104f98580611d39565b91906001600160a01b0361050f60208901611d6e565b16966001881461064e578761053b575b5050600192939495509061053291611a69565b939291016101dd565b806040610549920190611d82565b889291923b1561064a57918991604051938492632dd8113360e01b845287604485016040600487015252606484019260648960051b8601019381879061011e1981360301905b8c831061060357505050505083830360031901602485015284939283926105b592611cb5565b03818b5afa91826105ea575b50506105db5763086a9f7560e41b87526004869052602487fd5b9394508493610532600161051f565b816105f4916118d9565b6105ff57875f6105c1565b8780fd5b92959750929750929460631989820301855287358381121561064557602061063060019385839401611de5565b9901950193018f97959391928997959361058f565b508f80fd5b8980fd5b60405162461bcd60e51b815260206004820152601760248201527f4141393620696e76616c69642061676772656761746f720000000000000000006044820152606490fd5b5034610178576020366003190112610178576106ad61194b565b3382528160205260016040832001908154906001600160701b038260081c1691821561082d5760981c65ffffffffffff1680156107e85742106107a3578254610100600160c81b0319168355604080516001600160a01b03831681526020810184905285938493849384938493929133917fb7c918e0e249f999e965cafeb6c664271b3f4317d296461500e71da39f0cbda39190a26001600160a01b03165af1610755611a84565b501561075e5780f35b60405162461bcd60e51b815260206004820152601860248201527f6661696c656420746f207769746864726177207374616b6500000000000000006044820152606490fd5b60405162461bcd60e51b815260206004820152601b60248201527f5374616b65207769746864726177616c206973206e6f742064756500000000006044820152606490fd5b60405162461bcd60e51b815260206004820152601d60248201527f6d7573742063616c6c20756e6c6f636b5374616b6528292066697273740000006044820152606490fd5b60405162461bcd60e51b81526020600482015260146024820152734e6f207374616b6520746f20776974686472617760601b6044820152606490fd5b50346101785780600319360112610178573381528060205260016040822001805463ffffffff8160781c169081156109665760ff161561092d5765ffffffffffff4216019065ffffffffffff821161091957805460ff65ffffffffffff60981b01191665ffffffffffff60981b609884901b1617905560405165ffffffffffff909116815233907ffa9b3c14cc825c412c9ed81b3ba365a5b459439403f18829e572ed53a4180f0a90602090a280f35b634e487b7160e01b83526011600452602483fd5b60405162461bcd60e51b8152602060048201526011602482015270616c726561647920756e7374616b696e6760781b6044820152606490fd5b60405162461bcd60e51b815260206004820152600a6024820152691b9bdd081cdd185ad95960b21b6044820152606490fd5b506020366003190112610178576109b56109b061194b565b611cd5565b80f35b5034610178576020366003190112610178576004356001600160401b038111610aa6579060206109ef610a12933690600401611961565b604051632b870d1b60e11b81526004810184905294859283926024840191611cb5565b0381847f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03165af18015610a99576024928291610a6a575b50633653dc0360e11b82526001600160a01b0316600452fd5b610a8c915060203d602011610a92575b610a8481836118d9565b810190611c96565b5f610a51565b503d610a7a565b50604051903d90823e3d90fd5b5080fd5b50346101785760403660031901126101785780610ac561194b565b6024356001600160401b038111610b2e57610ae4903690600401611961565b90816040519283928337810184815203915af4610aff611a84565b60408051632650415560e21b8152921515600484015260248301528190610b2a906044830190611a2b565b0390fd5b5050fd5b503461017857610b41366119a4565b929190610b4c611eae565b610b5581611b99565b91835b828110610bcd575083927fbb47ee3e183a558b1a2ff0874b079f3fc5478b7454eacf2bfc5af2ff5878f9728580a184925b808410610b9b578561025e8689612c78565b90919293600190610bc2610bb0878588611c73565b610bba8887611c4b565b5190886128fe565b019401929190610b89565b610bec610376610be08387959697611c4b565b51610370848888611c73565b906001600160a01b0316610d0457610cbe57610c0790612ea4565b906001600160a01b0316610c7b57610c255760010192919092610b58565b60a49060405190631101335b60e11b8252600482015260406024820152602160448201527f41413332207061796d61737465722065787069726564206f72206e6f742064756064820152606560f81b6084820152fd5b60848260405190631101335b60e11b8252600482015260406024820152601460448201527320a0999a1039b4b3b730ba3ab9329032b93937b960611b6064820152fd5b60848260405190631101335b60e11b82526004820152604060248201526017604482015276414132322065787069726564206f72206e6f742064756560481b6064820152fd5b60848360405190631101335b60e11b8252600482015260406024820152601460448201527320a0991a1039b4b3b730ba3ab9329032b93937b960611b6064820152fd5b5034610178576020366003190112610178576020906040906001600160a01b03610d6f61194b565b1681528083522054604051908152f35b503461017857602036600319011261017857604060a091610d9e61194b565b8160808451610dac81611873565b82815282602082015282868201528260608201520152600180851b03168152806020522065ffffffffffff604051610de381611873565b63ffffffff60018454948584520154916001600160701b036020820160ff8516151581526040830190828660081c1682528660806060860195878960781c168752019660981c1686526040519788525115156020880152511660408601525116606084015251166080820152f35b5034610178576040366003190112610178576020906040610e7061194b565b91610e7961198e565b6001600160a01b03909316815260018452206001600160c01b0382165f9081529083526040908190205481519290911b67ffffffffffffffff1916178152f35b503461017857602036600319011261017857600435906001600160401b038211610178576101206003198336030112610178576020610efa83600401611ab3565b604051908152f35b503461017857604036600319011261017857610f1c61194b565b6024359033835282602052604083208054808411610fda5784808581958295610f46838597611a0a565b9055604080516001600160a01b03831681526020810184905233917fd1c19fbcd4551a5edfb66d43d2e337c04837afda3482b42bdf569a8fccdae5fb91a26001600160a01b03165af1610f97611a84565b5015610fa05780f35b60405162461bcd60e51b81526020600482015260126024820152716661696c656420746f20776974686472617760701b6044820152606490fd5b60405162461bcd60e51b815260206004820152601960248201527f576974686472617720616d6f756e7420746f6f206c61726765000000000000006044820152606490fd5b503461017857604036600319011261017857604061103b61194b565b9161104461198e565b9260018060a01b031681526001602052209060018060c01b03165f52602052602060405f2054604051908152f35b5034610178576020366003190112610178576004356001600160c01b0381168103610aa6573382526001602052604082209060018060c01b03165f5260205260405f206110bf8154611a76565b905580f35b5060203660031901126101785760043563ffffffff8116809103610aa65733825281602052604082209080156112ce57600182015463ffffffff8160781c16821061128957611120906001600160701b03349160081c16611a69565b91821561124f576001600160701b03831161121957546040516111e59161114682611873565b8152600160208083018281526001600160701b038716604080860191825260608601888152608087018b8152338c52948b9052908a209551865591519490930180549351915192516001600160c81b031990941660ff951515959095169490941760089190911b6effffffffffffffffffffffffffff00161760789190911b63ffffffff60781b161760989190911b65ffffffffffff60981b16179055565b60405191825260208201527fa5ae833d0bb1dcd632d98a8b70973e8516812898e19bf27b70071ebc8dc52c0160403392a280f35b60405162461bcd60e51b815260206004820152600e60248201526d7374616b65206f766572666c6f7760901b6044820152606490fd5b60405162461bcd60e51b81526020600482015260126024820152711b9bc81cdd185ad9481cdc1958da599a595960721b6044820152606490fd5b60405162461bcd60e51b815260206004820152601c60248201527f63616e6e6f7420646563726561736520756e7374616b652074696d65000000006044820152606490fd5b60405162461bcd60e51b815260206004820152601a60248201527f6d757374207370656369667920756e7374616b652064656c61790000000000006044820152606490fd5b50346101785760203660031901126101785760043563ffffffff60e01b8116809103610aa65760209063307e35b760e11b81149081156113a1575b8115611390575b811561137f575b811561136e575b506040519015158152f35b6301ffc9a760e01b14905082611363565b633e84f02160e01b8114915061135c565b63cf28ef9760e01b81149150611355565b63122a0e9b60e31b8114915061134e565b503461171f5761020036600319011261171f576004356001600160401b03811161171f573660238201121561171f576113f5903690602481600401359101611915565b9036602319016101c0811261171f576101406040519161141483611873565b1261171f57604051611425816118a2565b6024356001600160a01b038116810361171f57815260443560208201526064356040820152608435606082015260a435608082015260c43560a082015260e43560c0820152610104356001600160a01b038116810361171f5760e08201526101243561010082015261014435610120820152815260208101610164358152604082016101843581526101a435606084015260808301906101c43582526101e4356001600160401b03811161171f576114e1903690600401611961565b935a9030330361182e57865190606082015199603f5a0260061c61271060a08501518d01011161181f5780515f9b81611737575b50505050509061152d915a9003845101943691611915565b5a9285519461153b86612d4c565b60e087015190936001600160a01b03909116908161163657505085516001600160a01b0316945b5a9003019460a06060820151910151019051850390818111611622575b505083029051918183105f146115dd57505060038510156115c9576020946002036115ba57610efa92935080936115b581612e40565b612d76565b505063deadaa5160e01b825250fd5b634e487b7160e01b84526021600452602484fd5b816115ee9296939794970390612d29565b50600382101561160e57509282611609926020951590612ddb565b610efa565b634e487b7160e01b81526021600452602490fd5b6064919003600a0204909301925f8061157f565b819691968151611648575b5050611562565b60038c10156117235760028c03156116415760a089015191813b1561171f57611698928d5f8094604051809781968295637c627b2160e01b84526004840152608060248401526084830190611a2b565b8c8b0260448301528c60648301520393f1908161170a575b5061170357610b2a893d61080081116116fa575b60405191602082840101604052818352602083013e604051632b5e552f60e21b8152602060048201529182916024830190611a2b565b506108006116c4565b5f80611641565b611717919a505f906118d9565b5f985f6116b0565b5f80fd5b634e487b7160e01b5f52602160045260245ffd5b5f918291825a95602060018060a01b038a5116910192f19061176460018060a01b03855116915a90611a0a565b905f52600360205260405f2060025f5260205260405f20551561178a575b808080611515565b61152d939299503d906108008211611815575b604051916020818401016040528083525f602084013e81516117c8575b50505060019790915f611782565b7f1c4fada7374c0a9ee8841fc38afe82932dc0f8e69012e927f061a8bae611a201905191602060018060a01b0385511694015161180a60405192839283611a4f565b0390a35f80806117ba565b610800915061179d565b63deaddead60e01b5f5260205ffd5b60405162461bcd60e51b815260206004820152601760248201527f4141393220696e7465726e616c2063616c6c206f6e6c790000000000000000006044820152606490fd5b60a081019081106001600160401b0382111761188e57604052565b634e487b7160e01b5f52604160045260245ffd5b61014081019081106001600160401b0382111761188e57604052565b606081019081106001600160401b0382111761188e57604052565b90601f801991011681019081106001600160401b0382111761188e57604052565b6001600160401b03811161188e57601f01601f191660200190565b929192611921826118fa565b9161192f60405193846118d9565b82948184528183011161171f578281602093845f960137010152565b600435906001600160a01b038216820361171f57565b9181601f8401121561171f578235916001600160401b03831161171f576020838186019501011161171f57565b602435906001600160c01b038216820361171f57565b90604060031983011261171f576004356001600160401b03811161171f5760040182601f8201121561171f578035926001600160401b03841161171f576020808301928560051b01011161171f5791906024356001600160a01b038116810361171f5790565b91908203918211611a1757565b634e487b7160e01b5f52601160045260245ffd5b805180835260209291819084018484015e5f828201840152601f01601f1916010190565b604090611a66939281528160208201520190611a2b565b90565b91908201809211611a1757565b5f198114611a175760010190565b3d15611aae573d90611a95826118fa565b91611aa360405193846118d9565b82523d5f602084013e565b606090565b611ac06040820182611d82565b90816040519182372090611ad76060820182611d82565b9081604051918237209060c0611af060e0830183611d82565b9081604051918237209160405193602085019560018060a01b0383351687526020830135604087015260608601526080850152608081013560a085015260a081013582850152013560e08301526101008201526101008152611b54610120826118d9565b5190206040516020810191825230604082015246606082015260608152611b7c6080826118d9565b51902090565b6001600160401b03811161188e5760051b60200190565b90611ba382611b82565b611bb060405191826118d9565b8281528092611bc1601f1991611b82565b01905f5b828110611bd157505050565b602090604051611be081611873565b604051611bec816118a2565b5f81525f848201525f60408201525f60608201525f60808201525f60a08201525f60c08201525f60e08201525f6101008201525f61012082015281525f838201525f60408201525f60608201525f608082015282828501015201611bc5565b8051821015611c5f5760209160051b010190565b634e487b7160e01b5f52603260045260245ffd5b9190811015611c5f5760051b8101359061011e198136030182121561171f570190565b9081602091031261171f57516001600160a01b038116810361171f5790565b908060209392818452848401375f828201840152601f01601f1916010190565b7f2da466a7b24304f47e87fa2e1e5a81b9831ce54fec19055ce277ca2f39ba42c46020611d023484612d29565b6040519081526001600160a01b0390931692a2565b9190811015611c5f5760051b81013590605e198136030182121561171f570190565b903590601e198136030182121561171f57018035906001600160401b03821161171f57602001918160051b3603831361171f57565b356001600160a01b038116810361171f5790565b903590601e198136030182121561171f57018035906001600160401b03821161171f5760200191813603831361171f57565b9035601e198236030181121561171f5701602081359101916001600160401b03821161171f57813603831361171f57565b8035916001600160a01b038316830361171f576001600160a01b03909216825260208181013590830152611a6691611e9f611e93611e5a611e3f611e2c6040870187611db4565b6101206040880152610120870191611cb5565b611e4c6060870187611db4565b908683036060880152611cb5565b6080850135608085015260a085013560a085015260c085013560c0850152611e8560e0860186611db4565b9085830360e0870152611cb5565b92610100810190611db4565b91610100818503910152611cb5565b6002805414611ebd5760028055565b633ee5aeb560e01b5f5260045ffd5b929190915f905a928051853560018060a01b03811680910361171f5781526020810194602087013586526080870135916001600160801b038360801c9316604082019360608301918252845260a08901359360c0830185815260c08b0135906001600160801b038260801c92169161012086019061010087019384528152611f588d60e0810190611d82565b9081156128465760348210612801578160141161171f578035918060241161171f5760148201359060341161171f5760249190910135608090811c60a08a015290811c9088015260601c60e08701525b611fb18d611ab3565b9360208a0194855280519586845117815117916effffffffffffffffffffffffffffff60808a01938451179460a08b0195865117885117905117116127bc5751905101905101905101905101905102918a875160018060a01b038151169061201c6040840184611d82565b80612531575b505060e001516001600160a01b0316155f8161250d575b60205a9487519061205e60405194859384936306608bdf60e21b855260048501612e82565b03815f878af15f91816124d9575b506120eb578f3d9061080082116120e1575b604051916020818401016040528083525f602084013e610b2a6040519283926365c8fd4d60e01b8452600484015260606024840152600d60648401526c10504c8cc81c995d995c9d1959609a1b608484015260a0604484015260a4830190611a2b565b610800915061207e565b9e95969798999a9b9c9d9e925a9003825f52600360205260405f2060015f5260205260405f205561246f575b5085519b516001600160a01b03909c165f9081526001602090815260408083208f821c845290915290208054919c6001600160401b039161215784611a76565b90551603612423575a8603116123d75760e090930151606093906001600160a01b031661219c575b50508495969798506040608095015260608501525a900301910152565b9192509796505a9085519960018060a01b0360e08c01511690815f525f60205260405f20805486811061238b57915f60806121fe9d9e9f8296948a809703905501519551916040519d8e95869485936314add44b60e21b855260048501612e82565b039286f197885f915f9a61230c575b5061228b573d8b6108008211612281575b604051916020818401016040528083525f602084013e610b2a6040519283926365c8fd4d60e01b8452600484015260606024840152600d60648401526c10504cccc81c995d995c9d1959609a1b608484015260a0604484015260a4830190611a2b565b610800915061221e565b9991929394959697989998925a9003116122b05750879690959493929160805f61217f565b60a49060405190631101335b60e11b8252600482015260406024820152602760448201527f41413336206f766572207061796d6173746572566572696669636174696f6e47606482015266185cd31a5b5a5d60ca1b6084820152fd5b915098503d805f833e61231f81836118d9565b81019060408183031261171f5780516001600160401b03811161171f5781019082601f8301121561171f578151612355816118fa565b9361236360405195866118d9565b8185526020828501011161171f576020815f92828096018388015e850101520151985f61220d565b60848d60405190631101335b60e11b8252600482015260406024820152601e60448201527f41413331207061796d6173746572206465706f73697420746f6f206c6f7700006064820152fd5b60848260405190631101335b60e11b8252600482015260406024820152601e60448201527f41413236206f76657220766572696669636174696f6e4761734c696d697400006064820152fd5b60848360405190631101335b60e11b8252600482015260406024820152601a60448201527f4141323520696e76616c6964206163636f756e74206e6f6e63650000000000006064820152fd5b5f525f60205260405f20805480871161248d5786900390555f612117565b60848660405190631101335b60e11b8252600482015260406024820152601760448201527f41413231206469646e2774207061792070726566756e640000000000000000006064820152fd5b9091506020813d602011612505575b816124f5602093836118d9565b8101031261171f5751905f61206c565b3d91506124e8565b50815f525f60205260405f20548681115f1461252a57505f612039565b8603612039565b82519194506001600160a01b0390911690813b61276e575a60408d5101519060206040518093632b870d1b60e11b8252826004830152815f816125798d8a6024840191611cb5565b03927f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690f1918215612763575f9261273e575b506125c1905a90611a0a565b835f52600360205260405f205f805260205260405f205560018060a01b03811680156126ee57830361269f573b156126515760141161171f578a8f9460407fd51a9c61267aa6196961883ecf5ff2da6619c37dac0fa92122513fb32c032d2d913589519360e060018060a01b03915101511682519160018060a01b039060601c1682526020820152a35f80612022565b505060848f60405190631101335b60e11b8252600482015260406024820152602060448201527f4141313520696e6974436f6465206d757374206372656174652073656e6465726064820152fd5b50505060848f60405190631101335b60e11b8252600482015260406024820152602060448201527f4141313420696e6974436f6465206d7573742072657475726e2073656e6465726064820152fd5b5050505060848f60405190631101335b60e11b8252600482015260406024820152601b60448201527f4141313320696e6974436f6465206661696c6564206f72204f4f4700000000006064820152fd5b6125c191925061275c9060203d602011610a9257610a8481836118d9565b91906125b5565b6040513d5f823e3d90fd5b505060848f60405190631101335b60e11b8252600482015260406024820152601f60448201527f414131302073656e64657220616c726561647920636f6e7374727563746564006064820152fd5b60405162461bcd60e51b815260206004820152601860248201527f41413934206761732076616c756573206f766572666c6f7700000000000000006044820152606490fd5b60405162461bcd60e51b815260206004820152601d60248201527f4141393320696e76616c6964207061796d6173746572416e64446174610000006044820152606490fd5b50505f60e08701525f60808701525f60a0870152611fa8565b60806101a091610120815160018060a01b038151168652602081015160208701526040810151604087015260608101516060870152838101518487015260a081015160a087015260c081015160c087015260018060a01b0360e08201511660e087015261010081015161010087015201516101208501526020810151610140850152604081015161016085015260608101516101808501520151910152565b9092915a606082015160405195866129196060830183611d82565b5f60038211612c70575b6001600160e01b031916638dd7712f60e01b03612c0d575050505f6129af6129dd612974612988602095868a0151604051938492638dd7712f60e01b8a850152604060248501526064840190611de5565b90604483015203601f1981018352826118d9565b6129cf6040519384926242dc5360e01b888501526102006024850152610224840190611a2b565b6129bc604484018b61285f565b8281036023190161020484015287611a2b565b03601f1981018352826118d9565b828151910182305af15f5196604052156129f8575b50505050565b9091929394505f3d602014612c00575b63deaddead60e01b8103612a545760848560405190631101335b60e11b8252600482015260406024820152600f60448201526e41413935206f7574206f662067617360881b6064820152fd5b929350909163deadaa5160e01b03612a9e5750612a83612a78612a93925a90611a0a565b608084015190611a69565b6040830151836115b58295612e40565b905b5f8080806129f2565b90612b169060208401518451907ff62676f440ff169a3a9afdbf812e89e7f95975ee8e5c31214ffdef631c5f4792602060018060a01b038451169301513d906108008211612bf6575b604051916020818401016040528083525f602084013e612b0c60405192839283611a4f565b0390a35a90611a0a565b90612b276080840192835190611a69565b915a915f91855194612b3886612d4c565b60e08701519093906001600160a01b031680612be657505085516001600160a01b0316945b5a9003019460a06060820151910151019051850390818111612bd2575b505083026040850151928184105f14612bab5750508061160e57509081612ba592936115b581612e40565b90612a95565b612bbb9082849397950390612d29565b5061160e575090825f612bcd93612ddb565b612ba5565b6064919003600a0204909301925f80612b7a565b95905115612b5d575f9450612b5d565b6108009150612ae7565b5060205f803e5f51612a08565b6242dc5360e01b60208401526102006024840152612c679350612c5991612c3991610224850191611cb5565b612c46604484018861285f565b8281036023190161020484015284611a2b565b03601f1981018852876118d9565b60205f876129dd565b508135612923565b6001600160a01b03168015612ce4575f80809381935af1612c97611a84565b5015612c9f57565b60405162461bcd60e51b815260206004820152601f60248201527f41413931206661696c65642073656e6420746f2062656e6566696369617279006044820152606490fd5b60405162461bcd60e51b815260206004820152601860248201527f4141393020696e76616c69642062656e656669636961727900000000000000006044820152606490fd5b60018060a01b03165f525f602052612d4660405f20918254611a69565b80915590565b610120610100820151910151808214612d7257480180821015612d6d575090565b905090565b5090565b9190917f49628fd1471006c1482da88028e9ce4dbb080b815c9b0344d39e5a8e6ec1419f6080602083015192519460018060a01b0386511694602060018060a01b0360e089015116970151916040519283525f602084015260408301526060820152a4565b9060807f49628fd1471006c1482da88028e9ce4dbb080b815c9b0344d39e5a8e6ec1419f91602084015193519560018060a01b0387511695602060018060a01b0360e08a015116980151926040519384521515602084015260408301526060820152a4565b60208101519051907f67b4fa9642f42120bf031f3051d1824b0fe25627945b27b8a6a65d5761d5482e60208060018060a01b03855116940151604051908152a3565b612e9a60409295949395606083526060830190611de5565b9460208201520152565b8015612f31575f60408051612eb8816118be565b8281526020810183905201526001600160a01b0381169060a081901c65ffffffffffff16908115612f23575b60409060d01c9165ffffffffffff825191612efe836118be565b8583528460208401521691829101524211908115612f1b57509091565b905042109091565b65ffffffffffff9150612ee4565b505f905f9056fea164736f6c634300081a000a60808060405234601557610124908161001a8239f35b5f80fdfe6080600436101561000e575f80fd5b5f3560e01c63570e1a3614610021575f80fd5b34610113576020366003190112610113576004359067ffffffffffffffff821161011357366023830112156101135781600401359167ffffffffffffffff8311610113573660248483010111610113578260141161011357601319830167ffffffffffffffff81116100ff57600b8401601f19908116603f011683019367ffffffffffffffff8511848610176100ff5760245f9485600c819460209960405286845289840196603889018837830101525193013560601c5af15f5190156100f8575b6040516001600160a01b039091168152602090f35b505f6100e3565b634e487b7160e01b5f52604160045260245ffd5b5f80fdfea164736f6c634300081a000a" as Hex;
export const deployedBytecode =
    "0x60806040526004361015610023575b3615610018575f80fd5b61002133611cd5565b005b5f803560e01c806242dc53146113b257806301ffc9a7146113135780630396cb60146110c45780630bd28e3b146110725780631b2e01b81461101f578063205c287814610f0257806322cdde4c14610eb957806335567e1a14610e515780635287ce1214610d7f57806370a0823114610d47578063765e827f14610b32578063850aaf6214610aaa5780639b249f69146109b8578063b760faf914610998578063bb9fe6bf14610869578063c23a5cea14610693578063dbed18e0146101be578063ee5a97c81461017b5763fc7e286d146100fe575061000e565b346101785760203660031901126101785760a0906040906001600160a01b0361012561194b565b168152806020522065ffffffffffff6001825492015460405192835260ff8116151560208401526001600160701b038160081c16604084015263ffffffff8160781c16606084015260981c166080820152f35b80fd5b5034610178576040366003190112610178576020906040906001600160a01b036101a361194b565b16815260038352818120602435825283522054604051908152f35b5034610178576101cd366119a4565b906101d9939293611eae565b8291835b8281106104e3575090916101f090611b99565b9183845b82811061030b5750507fbb47ee3e183a558b1a2ff0874b079f3fc5478b7454eacf2bfc5af2ff5878f9728480a183928491855b818110610266578661025e8787837f575ff3acadd5ab348fe1855e217e0f3678f8d767d7494c9f9fefbee2e17cca4d8180a2612c78565b600160025580f35b6102b361027482848b611d17565b6001600160a01b0361028860208301611d6e565b167f575ff3acadd5ab348fe1855e217e0f3678f8d767d7494c9f9fefbee2e17cca4d8a80a280611d39565b9088915b8083106102c957505050600101610227565b909195976103026102fc6001926102f68c6102e58c888a611c73565b6102ef828d611c4b565b51916128fe565b90611a69565b99611a76565b960191906102b7565b610316818489611d17565b602061032e6103258380611d39565b92909301611d6e565b88926001600160a01b03909116905b82841061035057505050506001016101f4565b9091929461037d610376610364838c611c4b565b51610370898887611c73565b84611ecc565b9190612ea4565b906001600160a01b031685036104a05761045a5761039a90612ea4565b906001600160a01b0316610417576103c1576103b7600191611a76565b950192919061033d565b60a48660405190631101335b60e11b8252600482015260406024820152602160448201527f41413332207061796d61737465722065787069726564206f72206e6f742064756064820152606560f81b6084820152fd5b60848760405190631101335b60e11b8252600482015260406024820152601460448201527320a0999a1039b4b3b730ba3ab9329032b93937b960611b6064820152fd5b60848760405190631101335b60e11b82526004820152604060248201526017604482015276414132322065787069726564206f72206e6f742064756560481b6064820152fd5b60848860405190631101335b60e11b8252600482015260406024820152601460448201527320a0991a1039b4b3b730ba3ab9329032b93937b960611b6064820152fd5b6104ee818488611d17565b936104f98580611d39565b91906001600160a01b0361050f60208901611d6e565b16966001881461064e578761053b575b5050600192939495509061053291611a69565b939291016101dd565b806040610549920190611d82565b889291923b1561064a57918991604051938492632dd8113360e01b845287604485016040600487015252606484019260648960051b8601019381879061011e1981360301905b8c831061060357505050505083830360031901602485015284939283926105b592611cb5565b03818b5afa91826105ea575b50506105db5763086a9f7560e41b87526004869052602487fd5b9394508493610532600161051f565b816105f4916118d9565b6105ff57875f6105c1565b8780fd5b92959750929750929460631989820301855287358381121561064557602061063060019385839401611de5565b9901950193018f97959391928997959361058f565b508f80fd5b8980fd5b60405162461bcd60e51b815260206004820152601760248201527f4141393620696e76616c69642061676772656761746f720000000000000000006044820152606490fd5b5034610178576020366003190112610178576106ad61194b565b3382528160205260016040832001908154906001600160701b038260081c1691821561082d5760981c65ffffffffffff1680156107e85742106107a3578254610100600160c81b0319168355604080516001600160a01b03831681526020810184905285938493849384938493929133917fb7c918e0e249f999e965cafeb6c664271b3f4317d296461500e71da39f0cbda39190a26001600160a01b03165af1610755611a84565b501561075e5780f35b60405162461bcd60e51b815260206004820152601860248201527f6661696c656420746f207769746864726177207374616b6500000000000000006044820152606490fd5b60405162461bcd60e51b815260206004820152601b60248201527f5374616b65207769746864726177616c206973206e6f742064756500000000006044820152606490fd5b60405162461bcd60e51b815260206004820152601d60248201527f6d7573742063616c6c20756e6c6f636b5374616b6528292066697273740000006044820152606490fd5b60405162461bcd60e51b81526020600482015260146024820152734e6f207374616b6520746f20776974686472617760601b6044820152606490fd5b50346101785780600319360112610178573381528060205260016040822001805463ffffffff8160781c169081156109665760ff161561092d5765ffffffffffff4216019065ffffffffffff821161091957805460ff65ffffffffffff60981b01191665ffffffffffff60981b609884901b1617905560405165ffffffffffff909116815233907ffa9b3c14cc825c412c9ed81b3ba365a5b459439403f18829e572ed53a4180f0a90602090a280f35b634e487b7160e01b83526011600452602483fd5b60405162461bcd60e51b8152602060048201526011602482015270616c726561647920756e7374616b696e6760781b6044820152606490fd5b60405162461bcd60e51b815260206004820152600a6024820152691b9bdd081cdd185ad95960b21b6044820152606490fd5b506020366003190112610178576109b56109b061194b565b611cd5565b80f35b5034610178576020366003190112610178576004356001600160401b038111610aa6579060206109ef610a12933690600401611961565b604051632b870d1b60e11b81526004810184905294859283926024840191611cb5565b0381847f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03165af18015610a99576024928291610a6a575b50633653dc0360e11b82526001600160a01b0316600452fd5b610a8c915060203d602011610a92575b610a8481836118d9565b810190611c96565b5f610a51565b503d610a7a565b50604051903d90823e3d90fd5b5080fd5b50346101785760403660031901126101785780610ac561194b565b6024356001600160401b038111610b2e57610ae4903690600401611961565b90816040519283928337810184815203915af4610aff611a84565b60408051632650415560e21b8152921515600484015260248301528190610b2a906044830190611a2b565b0390fd5b5050fd5b503461017857610b41366119a4565b929190610b4c611eae565b610b5581611b99565b91835b828110610bcd575083927fbb47ee3e183a558b1a2ff0874b079f3fc5478b7454eacf2bfc5af2ff5878f9728580a184925b808410610b9b578561025e8689612c78565b90919293600190610bc2610bb0878588611c73565b610bba8887611c4b565b5190886128fe565b019401929190610b89565b610bec610376610be08387959697611c4b565b51610370848888611c73565b906001600160a01b0316610d0457610cbe57610c0790612ea4565b906001600160a01b0316610c7b57610c255760010192919092610b58565b60a49060405190631101335b60e11b8252600482015260406024820152602160448201527f41413332207061796d61737465722065787069726564206f72206e6f742064756064820152606560f81b6084820152fd5b60848260405190631101335b60e11b8252600482015260406024820152601460448201527320a0999a1039b4b3b730ba3ab9329032b93937b960611b6064820152fd5b60848260405190631101335b60e11b82526004820152604060248201526017604482015276414132322065787069726564206f72206e6f742064756560481b6064820152fd5b60848360405190631101335b60e11b8252600482015260406024820152601460448201527320a0991a1039b4b3b730ba3ab9329032b93937b960611b6064820152fd5b5034610178576020366003190112610178576020906040906001600160a01b03610d6f61194b565b1681528083522054604051908152f35b503461017857602036600319011261017857604060a091610d9e61194b565b8160808451610dac81611873565b82815282602082015282868201528260608201520152600180851b03168152806020522065ffffffffffff604051610de381611873565b63ffffffff60018454948584520154916001600160701b036020820160ff8516151581526040830190828660081c1682528660806060860195878960781c168752019660981c1686526040519788525115156020880152511660408601525116606084015251166080820152f35b5034610178576040366003190112610178576020906040610e7061194b565b91610e7961198e565b6001600160a01b03909316815260018452206001600160c01b0382165f9081529083526040908190205481519290911b67ffffffffffffffff1916178152f35b503461017857602036600319011261017857600435906001600160401b038211610178576101206003198336030112610178576020610efa83600401611ab3565b604051908152f35b503461017857604036600319011261017857610f1c61194b565b6024359033835282602052604083208054808411610fda5784808581958295610f46838597611a0a565b9055604080516001600160a01b03831681526020810184905233917fd1c19fbcd4551a5edfb66d43d2e337c04837afda3482b42bdf569a8fccdae5fb91a26001600160a01b03165af1610f97611a84565b5015610fa05780f35b60405162461bcd60e51b81526020600482015260126024820152716661696c656420746f20776974686472617760701b6044820152606490fd5b60405162461bcd60e51b815260206004820152601960248201527f576974686472617720616d6f756e7420746f6f206c61726765000000000000006044820152606490fd5b503461017857604036600319011261017857604061103b61194b565b9161104461198e565b9260018060a01b031681526001602052209060018060c01b03165f52602052602060405f2054604051908152f35b5034610178576020366003190112610178576004356001600160c01b0381168103610aa6573382526001602052604082209060018060c01b03165f5260205260405f206110bf8154611a76565b905580f35b5060203660031901126101785760043563ffffffff8116809103610aa65733825281602052604082209080156112ce57600182015463ffffffff8160781c16821061128957611120906001600160701b03349160081c16611a69565b91821561124f576001600160701b03831161121957546040516111e59161114682611873565b8152600160208083018281526001600160701b038716604080860191825260608601888152608087018b8152338c52948b9052908a209551865591519490930180549351915192516001600160c81b031990941660ff951515959095169490941760089190911b6effffffffffffffffffffffffffff00161760789190911b63ffffffff60781b161760989190911b65ffffffffffff60981b16179055565b60405191825260208201527fa5ae833d0bb1dcd632d98a8b70973e8516812898e19bf27b70071ebc8dc52c0160403392a280f35b60405162461bcd60e51b815260206004820152600e60248201526d7374616b65206f766572666c6f7760901b6044820152606490fd5b60405162461bcd60e51b81526020600482015260126024820152711b9bc81cdd185ad9481cdc1958da599a595960721b6044820152606490fd5b60405162461bcd60e51b815260206004820152601c60248201527f63616e6e6f7420646563726561736520756e7374616b652074696d65000000006044820152606490fd5b60405162461bcd60e51b815260206004820152601a60248201527f6d757374207370656369667920756e7374616b652064656c61790000000000006044820152606490fd5b50346101785760203660031901126101785760043563ffffffff60e01b8116809103610aa65760209063307e35b760e11b81149081156113a1575b8115611390575b811561137f575b811561136e575b506040519015158152f35b6301ffc9a760e01b14905082611363565b633e84f02160e01b8114915061135c565b63cf28ef9760e01b81149150611355565b63122a0e9b60e31b8114915061134e565b503461171f5761020036600319011261171f576004356001600160401b03811161171f573660238201121561171f576113f5903690602481600401359101611915565b9036602319016101c0811261171f576101406040519161141483611873565b1261171f57604051611425816118a2565b6024356001600160a01b038116810361171f57815260443560208201526064356040820152608435606082015260a435608082015260c43560a082015260e43560c0820152610104356001600160a01b038116810361171f5760e08201526101243561010082015261014435610120820152815260208101610164358152604082016101843581526101a435606084015260808301906101c43582526101e4356001600160401b03811161171f576114e1903690600401611961565b935a9030330361182e57865190606082015199603f5a0260061c61271060a08501518d01011161181f5780515f9b81611737575b50505050509061152d915a9003845101943691611915565b5a9285519461153b86612d4c565b60e087015190936001600160a01b03909116908161163657505085516001600160a01b0316945b5a9003019460a06060820151910151019051850390818111611622575b505083029051918183105f146115dd57505060038510156115c9576020946002036115ba57610efa92935080936115b581612e40565b612d76565b505063deadaa5160e01b825250fd5b634e487b7160e01b84526021600452602484fd5b816115ee9296939794970390612d29565b50600382101561160e57509282611609926020951590612ddb565b610efa565b634e487b7160e01b81526021600452602490fd5b6064919003600a0204909301925f8061157f565b819691968151611648575b5050611562565b60038c10156117235760028c03156116415760a089015191813b1561171f57611698928d5f8094604051809781968295637c627b2160e01b84526004840152608060248401526084830190611a2b565b8c8b0260448301528c60648301520393f1908161170a575b5061170357610b2a893d61080081116116fa575b60405191602082840101604052818352602083013e604051632b5e552f60e21b8152602060048201529182916024830190611a2b565b506108006116c4565b5f80611641565b611717919a505f906118d9565b5f985f6116b0565b5f80fd5b634e487b7160e01b5f52602160045260245ffd5b5f918291825a95602060018060a01b038a5116910192f19061176460018060a01b03855116915a90611a0a565b905f52600360205260405f2060025f5260205260405f20551561178a575b808080611515565b61152d939299503d906108008211611815575b604051916020818401016040528083525f602084013e81516117c8575b50505060019790915f611782565b7f1c4fada7374c0a9ee8841fc38afe82932dc0f8e69012e927f061a8bae611a201905191602060018060a01b0385511694015161180a60405192839283611a4f565b0390a35f80806117ba565b610800915061179d565b63deaddead60e01b5f5260205ffd5b60405162461bcd60e51b815260206004820152601760248201527f4141393220696e7465726e616c2063616c6c206f6e6c790000000000000000006044820152606490fd5b60a081019081106001600160401b0382111761188e57604052565b634e487b7160e01b5f52604160045260245ffd5b61014081019081106001600160401b0382111761188e57604052565b606081019081106001600160401b0382111761188e57604052565b90601f801991011681019081106001600160401b0382111761188e57604052565b6001600160401b03811161188e57601f01601f191660200190565b929192611921826118fa565b9161192f60405193846118d9565b82948184528183011161171f578281602093845f960137010152565b600435906001600160a01b038216820361171f57565b9181601f8401121561171f578235916001600160401b03831161171f576020838186019501011161171f57565b602435906001600160c01b038216820361171f57565b90604060031983011261171f576004356001600160401b03811161171f5760040182601f8201121561171f578035926001600160401b03841161171f576020808301928560051b01011161171f5791906024356001600160a01b038116810361171f5790565b91908203918211611a1757565b634e487b7160e01b5f52601160045260245ffd5b805180835260209291819084018484015e5f828201840152601f01601f1916010190565b604090611a66939281528160208201520190611a2b565b90565b91908201809211611a1757565b5f198114611a175760010190565b3d15611aae573d90611a95826118fa565b91611aa360405193846118d9565b82523d5f602084013e565b606090565b611ac06040820182611d82565b90816040519182372090611ad76060820182611d82565b9081604051918237209060c0611af060e0830183611d82565b9081604051918237209160405193602085019560018060a01b0383351687526020830135604087015260608601526080850152608081013560a085015260a081013582850152013560e08301526101008201526101008152611b54610120826118d9565b5190206040516020810191825230604082015246606082015260608152611b7c6080826118d9565b51902090565b6001600160401b03811161188e5760051b60200190565b90611ba382611b82565b611bb060405191826118d9565b8281528092611bc1601f1991611b82565b01905f5b828110611bd157505050565b602090604051611be081611873565b604051611bec816118a2565b5f81525f848201525f60408201525f60608201525f60808201525f60a08201525f60c08201525f60e08201525f6101008201525f61012082015281525f838201525f60408201525f60608201525f608082015282828501015201611bc5565b8051821015611c5f5760209160051b010190565b634e487b7160e01b5f52603260045260245ffd5b9190811015611c5f5760051b8101359061011e198136030182121561171f570190565b9081602091031261171f57516001600160a01b038116810361171f5790565b908060209392818452848401375f828201840152601f01601f1916010190565b7f2da466a7b24304f47e87fa2e1e5a81b9831ce54fec19055ce277ca2f39ba42c46020611d023484612d29565b6040519081526001600160a01b0390931692a2565b9190811015611c5f5760051b81013590605e198136030182121561171f570190565b903590601e198136030182121561171f57018035906001600160401b03821161171f57602001918160051b3603831361171f57565b356001600160a01b038116810361171f5790565b903590601e198136030182121561171f57018035906001600160401b03821161171f5760200191813603831361171f57565b9035601e198236030181121561171f5701602081359101916001600160401b03821161171f57813603831361171f57565b8035916001600160a01b038316830361171f576001600160a01b03909216825260208181013590830152611a6691611e9f611e93611e5a611e3f611e2c6040870187611db4565b6101206040880152610120870191611cb5565b611e4c6060870187611db4565b908683036060880152611cb5565b6080850135608085015260a085013560a085015260c085013560c0850152611e8560e0860186611db4565b9085830360e0870152611cb5565b92610100810190611db4565b91610100818503910152611cb5565b6002805414611ebd5760028055565b633ee5aeb560e01b5f5260045ffd5b929190915f905a928051853560018060a01b03811680910361171f5781526020810194602087013586526080870135916001600160801b038360801c9316604082019360608301918252845260a08901359360c0830185815260c08b0135906001600160801b038260801c92169161012086019061010087019384528152611f588d60e0810190611d82565b9081156128465760348210612801578160141161171f578035918060241161171f5760148201359060341161171f5760249190910135608090811c60a08a015290811c9088015260601c60e08701525b611fb18d611ab3565b9360208a0194855280519586845117815117916effffffffffffffffffffffffffffff60808a01938451179460a08b0195865117885117905117116127bc5751905101905101905101905101905102918a875160018060a01b038151169061201c6040840184611d82565b80612531575b505060e001516001600160a01b0316155f8161250d575b60205a9487519061205e60405194859384936306608bdf60e21b855260048501612e82565b03815f878af15f91816124d9575b506120eb578f3d9061080082116120e1575b604051916020818401016040528083525f602084013e610b2a6040519283926365c8fd4d60e01b8452600484015260606024840152600d60648401526c10504c8cc81c995d995c9d1959609a1b608484015260a0604484015260a4830190611a2b565b610800915061207e565b9e95969798999a9b9c9d9e925a9003825f52600360205260405f2060015f5260205260405f205561246f575b5085519b516001600160a01b03909c165f9081526001602090815260408083208f821c845290915290208054919c6001600160401b039161215784611a76565b90551603612423575a8603116123d75760e090930151606093906001600160a01b031661219c575b50508495969798506040608095015260608501525a900301910152565b9192509796505a9085519960018060a01b0360e08c01511690815f525f60205260405f20805486811061238b57915f60806121fe9d9e9f8296948a809703905501519551916040519d8e95869485936314add44b60e21b855260048501612e82565b039286f197885f915f9a61230c575b5061228b573d8b6108008211612281575b604051916020818401016040528083525f602084013e610b2a6040519283926365c8fd4d60e01b8452600484015260606024840152600d60648401526c10504cccc81c995d995c9d1959609a1b608484015260a0604484015260a4830190611a2b565b610800915061221e565b9991929394959697989998925a9003116122b05750879690959493929160805f61217f565b60a49060405190631101335b60e11b8252600482015260406024820152602760448201527f41413336206f766572207061796d6173746572566572696669636174696f6e47606482015266185cd31a5b5a5d60ca1b6084820152fd5b915098503d805f833e61231f81836118d9565b81019060408183031261171f5780516001600160401b03811161171f5781019082601f8301121561171f578151612355816118fa565b9361236360405195866118d9565b8185526020828501011161171f576020815f92828096018388015e850101520151985f61220d565b60848d60405190631101335b60e11b8252600482015260406024820152601e60448201527f41413331207061796d6173746572206465706f73697420746f6f206c6f7700006064820152fd5b60848260405190631101335b60e11b8252600482015260406024820152601e60448201527f41413236206f76657220766572696669636174696f6e4761734c696d697400006064820152fd5b60848360405190631101335b60e11b8252600482015260406024820152601a60448201527f4141323520696e76616c6964206163636f756e74206e6f6e63650000000000006064820152fd5b5f525f60205260405f20805480871161248d5786900390555f612117565b60848660405190631101335b60e11b8252600482015260406024820152601760448201527f41413231206469646e2774207061792070726566756e640000000000000000006064820152fd5b9091506020813d602011612505575b816124f5602093836118d9565b8101031261171f5751905f61206c565b3d91506124e8565b50815f525f60205260405f20548681115f1461252a57505f612039565b8603612039565b82519194506001600160a01b0390911690813b61276e575a60408d5101519060206040518093632b870d1b60e11b8252826004830152815f816125798d8a6024840191611cb5565b03927f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690f1918215612763575f9261273e575b506125c1905a90611a0a565b835f52600360205260405f205f805260205260405f205560018060a01b03811680156126ee57830361269f573b156126515760141161171f578a8f9460407fd51a9c61267aa6196961883ecf5ff2da6619c37dac0fa92122513fb32c032d2d913589519360e060018060a01b03915101511682519160018060a01b039060601c1682526020820152a35f80612022565b505060848f60405190631101335b60e11b8252600482015260406024820152602060448201527f4141313520696e6974436f6465206d757374206372656174652073656e6465726064820152fd5b50505060848f60405190631101335b60e11b8252600482015260406024820152602060448201527f4141313420696e6974436f6465206d7573742072657475726e2073656e6465726064820152fd5b5050505060848f60405190631101335b60e11b8252600482015260406024820152601b60448201527f4141313320696e6974436f6465206661696c6564206f72204f4f4700000000006064820152fd5b6125c191925061275c9060203d602011610a9257610a8481836118d9565b91906125b5565b6040513d5f823e3d90fd5b505060848f60405190631101335b60e11b8252600482015260406024820152601f60448201527f414131302073656e64657220616c726561647920636f6e7374727563746564006064820152fd5b60405162461bcd60e51b815260206004820152601860248201527f41413934206761732076616c756573206f766572666c6f7700000000000000006044820152606490fd5b60405162461bcd60e51b815260206004820152601d60248201527f4141393320696e76616c6964207061796d6173746572416e64446174610000006044820152606490fd5b50505f60e08701525f60808701525f60a0870152611fa8565b60806101a091610120815160018060a01b038151168652602081015160208701526040810151604087015260608101516060870152838101518487015260a081015160a087015260c081015160c087015260018060a01b0360e08201511660e087015261010081015161010087015201516101208501526020810151610140850152604081015161016085015260608101516101808501520151910152565b9092915a606082015160405195866129196060830183611d82565b5f60038211612c70575b6001600160e01b031916638dd7712f60e01b03612c0d575050505f6129af6129dd612974612988602095868a0151604051938492638dd7712f60e01b8a850152604060248501526064840190611de5565b90604483015203601f1981018352826118d9565b6129cf6040519384926242dc5360e01b888501526102006024850152610224840190611a2b565b6129bc604484018b61285f565b8281036023190161020484015287611a2b565b03601f1981018352826118d9565b828151910182305af15f5196604052156129f8575b50505050565b9091929394505f3d602014612c00575b63deaddead60e01b8103612a545760848560405190631101335b60e11b8252600482015260406024820152600f60448201526e41413935206f7574206f662067617360881b6064820152fd5b929350909163deadaa5160e01b03612a9e5750612a83612a78612a93925a90611a0a565b608084015190611a69565b6040830151836115b58295612e40565b905b5f8080806129f2565b90612b169060208401518451907ff62676f440ff169a3a9afdbf812e89e7f95975ee8e5c31214ffdef631c5f4792602060018060a01b038451169301513d906108008211612bf6575b604051916020818401016040528083525f602084013e612b0c60405192839283611a4f565b0390a35a90611a0a565b90612b276080840192835190611a69565b915a915f91855194612b3886612d4c565b60e08701519093906001600160a01b031680612be657505085516001600160a01b0316945b5a9003019460a06060820151910151019051850390818111612bd2575b505083026040850151928184105f14612bab5750508061160e57509081612ba592936115b581612e40565b90612a95565b612bbb9082849397950390612d29565b5061160e575090825f612bcd93612ddb565b612ba5565b6064919003600a0204909301925f80612b7a565b95905115612b5d575f9450612b5d565b6108009150612ae7565b5060205f803e5f51612a08565b6242dc5360e01b60208401526102006024840152612c679350612c5991612c3991610224850191611cb5565b612c46604484018861285f565b8281036023190161020484015284611a2b565b03601f1981018852876118d9565b60205f876129dd565b508135612923565b6001600160a01b03168015612ce4575f80809381935af1612c97611a84565b5015612c9f57565b60405162461bcd60e51b815260206004820152601f60248201527f41413931206661696c65642073656e6420746f2062656e6566696369617279006044820152606490fd5b60405162461bcd60e51b815260206004820152601860248201527f4141393020696e76616c69642062656e656669636961727900000000000000006044820152606490fd5b60018060a01b03165f525f602052612d4660405f20918254611a69565b80915590565b610120610100820151910151808214612d7257480180821015612d6d575090565b905090565b5090565b9190917f49628fd1471006c1482da88028e9ce4dbb080b815c9b0344d39e5a8e6ec1419f6080602083015192519460018060a01b0386511694602060018060a01b0360e089015116970151916040519283525f602084015260408301526060820152a4565b9060807f49628fd1471006c1482da88028e9ce4dbb080b815c9b0344d39e5a8e6ec1419f91602084015193519560018060a01b0387511695602060018060a01b0360e08a015116980151926040519384521515602084015260408301526060820152a4565b60208101519051907f67b4fa9642f42120bf031f3051d1824b0fe25627945b27b8a6a65d5761d5482e60208060018060a01b03855116940151604051908152a3565b612e9a60409295949395606083526060830190611de5565b9460208201520152565b8015612f31575f60408051612eb8816118be565b8281526020810183905201526001600160a01b0381169060a081901c65ffffffffffff16908115612f23575b60409060d01c9165ffffffffffff825191612efe836118be565b8583528460208401521691829101524211908115612f1b57509091565b905042109091565b65ffffffffffff9150612ee4565b505f905f9056fea164736f6c634300081a000a" as Hex;
export const EntryPoint = {
    abi,
    bytecode,
    deployedBytecode,
};
