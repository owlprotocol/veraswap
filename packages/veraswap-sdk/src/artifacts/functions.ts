export const functions = [
    {
        type: "function",
        name: "multicall",
        inputs: [{ name: "data", type: "bytes[]", internalType: "bytes[]" }],
        outputs: [{ name: "results", type: "bytes[]", internalType: "bytes[]" }],
        stateMutability: "payable",
    },
    {
        type: "function",
        name: "DOMAIN_SEPARATOR",
        inputs: [],
        outputs: [{ name: "", type: "bytes32", internalType: "bytes32" }],
        stateMutability: "view",
    },
    {
        type: "function",
        name: "allowance",
        inputs: [
            { name: "", type: "address", internalType: "address" },
            { name: "", type: "address", internalType: "address" },
        ],
        outputs: [{ name: "", type: "uint256", internalType: "uint256" }],
        stateMutability: "view",
    },
    {
        type: "function",
        name: "approve",
        inputs: [
            { name: "spender", type: "address", internalType: "address" },
            { name: "amount", type: "uint256", internalType: "uint256" },
        ],
        outputs: [{ name: "", type: "bool", internalType: "bool" }],
        stateMutability: "nonpayable",
    },
    {
        type: "function",
        name: "balanceOf",
        inputs: [{ name: "", type: "address", internalType: "address" }],
        outputs: [{ name: "", type: "uint256", internalType: "uint256" }],
        stateMutability: "view",
    },
    {
        type: "function",
        name: "burn",
        inputs: [
            { name: "from", type: "address", internalType: "address" },
            { name: "value", type: "uint256", internalType: "uint256" },
        ],
        outputs: [],
        stateMutability: "nonpayable",
    },
    {
        type: "function",
        name: "decimals",
        inputs: [],
        outputs: [{ name: "", type: "uint8", internalType: "uint8" }],
        stateMutability: "view",
    },
    {
        type: "function",
        name: "mint",
        inputs: [
            { name: "to", type: "address", internalType: "address" },
            { name: "value", type: "uint256", internalType: "uint256" },
        ],
        outputs: [],
        stateMutability: "nonpayable",
    },
    {
        type: "function",
        name: "name",
        inputs: [],
        outputs: [{ name: "", type: "string", internalType: "string" }],
        stateMutability: "view",
    },
    {
        type: "function",
        name: "nonces",
        inputs: [{ name: "", type: "address", internalType: "address" }],
        outputs: [{ name: "", type: "uint256", internalType: "uint256" }],
        stateMutability: "view",
    },
    {
        type: "function",
        name: "permit",
        inputs: [
            { name: "owner", type: "address", internalType: "address" },
            { name: "spender", type: "address", internalType: "address" },
            { name: "value", type: "uint256", internalType: "uint256" },
            { name: "deadline", type: "uint256", internalType: "uint256" },
            { name: "v", type: "uint8", internalType: "uint8" },
            { name: "r", type: "bytes32", internalType: "bytes32" },
            { name: "s", type: "bytes32", internalType: "bytes32" },
        ],
        outputs: [],
        stateMutability: "nonpayable",
    },
    {
        type: "function",
        name: "symbol",
        inputs: [],
        outputs: [{ name: "", type: "string", internalType: "string" }],
        stateMutability: "view",
    },
    {
        type: "function",
        name: "totalSupply",
        inputs: [],
        outputs: [{ name: "", type: "uint256", internalType: "uint256" }],
        stateMutability: "view",
    },
    {
        type: "function",
        name: "transfer",
        inputs: [
            { name: "to", type: "address", internalType: "address" },
            { name: "amount", type: "uint256", internalType: "uint256" },
        ],
        outputs: [{ name: "", type: "bool", internalType: "bool" }],
        stateMutability: "nonpayable",
    },
    {
        type: "function",
        name: "transferFrom",
        inputs: [
            { name: "from", type: "address", internalType: "address" },
            { name: "to", type: "address", internalType: "address" },
            { name: "amount", type: "uint256", internalType: "uint256" },
        ],
        outputs: [{ name: "", type: "bool", internalType: "bool" }],
        stateMutability: "nonpayable",
    },
    {
        type: "function",
        name: "allowance",
        inputs: [
            { name: "user", type: "address", internalType: "address" },
            { name: "token", type: "address", internalType: "address" },
            { name: "spender", type: "address", internalType: "address" },
        ],
        outputs: [
            { name: "amount", type: "uint160", internalType: "uint160" },
            { name: "expiration", type: "uint48", internalType: "uint48" },
            { name: "nonce", type: "uint48", internalType: "uint48" },
        ],
        stateMutability: "view",
    },
    {
        type: "function",
        name: "approve",
        inputs: [
            { name: "token", type: "address", internalType: "address" },
            { name: "spender", type: "address", internalType: "address" },
            { name: "amount", type: "uint160", internalType: "uint160" },
            { name: "expiration", type: "uint48", internalType: "uint48" },
        ],
        outputs: [],
        stateMutability: "nonpayable",
    },
    {
        type: "function",
        name: "invalidateNonces",
        inputs: [
            { name: "token", type: "address", internalType: "address" },
            { name: "spender", type: "address", internalType: "address" },
            { name: "newNonce", type: "uint48", internalType: "uint48" },
        ],
        outputs: [],
        stateMutability: "nonpayable",
    },
    {
        type: "function",
        name: "lockdown",
        inputs: [
            {
                name: "approvals",
                type: "tuple[]",
                internalType: "struct IAllowanceTransfer.TokenSpenderPair[]",
                components: [
                    { name: "token", type: "address", internalType: "address" },
                    { name: "spender", type: "address", internalType: "address" },
                ],
            },
        ],
        outputs: [],
        stateMutability: "nonpayable",
    },
    {
        type: "function",
        name: "permit",
        inputs: [
            { name: "owner", type: "address", internalType: "address" },
            {
                name: "permitBatch",
                type: "tuple",
                internalType: "struct IAllowanceTransfer.PermitBatch",
                components: [
                    {
                        name: "details",
                        type: "tuple[]",
                        internalType: "struct IAllowanceTransfer.PermitDetails[]",
                        components: [
                            { name: "token", type: "address", internalType: "address" },
                            { name: "amount", type: "uint160", internalType: "uint160" },
                            { name: "expiration", type: "uint48", internalType: "uint48" },
                            { name: "nonce", type: "uint48", internalType: "uint48" },
                        ],
                    },
                    { name: "spender", type: "address", internalType: "address" },
                    { name: "sigDeadline", type: "uint256", internalType: "uint256" },
                ],
            },
            { name: "signature", type: "bytes", internalType: "bytes" },
        ],
        outputs: [],
        stateMutability: "nonpayable",
    },
    {
        type: "function",
        name: "permit",
        inputs: [
            { name: "owner", type: "address", internalType: "address" },
            {
                name: "permitSingle",
                type: "tuple",
                internalType: "struct IAllowanceTransfer.PermitSingle",
                components: [
                    {
                        name: "details",
                        type: "tuple",
                        internalType: "struct IAllowanceTransfer.PermitDetails",
                        components: [
                            { name: "token", type: "address", internalType: "address" },
                            { name: "amount", type: "uint160", internalType: "uint160" },
                            { name: "expiration", type: "uint48", internalType: "uint48" },
                            { name: "nonce", type: "uint48", internalType: "uint48" },
                        ],
                    },
                    { name: "spender", type: "address", internalType: "address" },
                    { name: "sigDeadline", type: "uint256", internalType: "uint256" },
                ],
            },
            { name: "signature", type: "bytes", internalType: "bytes" },
        ],
        outputs: [],
        stateMutability: "nonpayable",
    },
    {
        type: "function",
        name: "transferFrom",
        inputs: [
            {
                name: "transferDetails",
                type: "tuple[]",
                internalType: "struct IAllowanceTransfer.AllowanceTransferDetails[]",
                components: [
                    { name: "from", type: "address", internalType: "address" },
                    { name: "to", type: "address", internalType: "address" },
                    { name: "amount", type: "uint160", internalType: "uint160" },
                    { name: "token", type: "address", internalType: "address" },
                ],
            },
        ],
        outputs: [],
        stateMutability: "nonpayable",
    },
    {
        type: "function",
        name: "transferFrom",
        inputs: [
            { name: "from", type: "address", internalType: "address" },
            { name: "to", type: "address", internalType: "address" },
            { name: "amount", type: "uint160", internalType: "uint160" },
            { name: "token", type: "address", internalType: "address" },
        ],
        outputs: [],
        stateMutability: "nonpayable",
    },
    {
        type: "function",
        name: "invalidateUnorderedNonces",
        inputs: [
            { name: "wordPos", type: "uint256", internalType: "uint256" },
            { name: "mask", type: "uint256", internalType: "uint256" },
        ],
        outputs: [],
        stateMutability: "nonpayable",
    },
    {
        type: "function",
        name: "nonceBitmap",
        inputs: [
            { name: "", type: "address", internalType: "address" },
            { name: "", type: "uint256", internalType: "uint256" },
        ],
        outputs: [{ name: "", type: "uint256", internalType: "uint256" }],
        stateMutability: "view",
    },
    {
        type: "function",
        name: "permitTransferFrom",
        inputs: [
            {
                name: "permit",
                type: "tuple",
                internalType: "struct ISignatureTransfer.PermitTransferFrom",
                components: [
                    {
                        name: "permitted",
                        type: "tuple",
                        internalType: "struct ISignatureTransfer.TokenPermissions",
                        components: [
                            { name: "token", type: "address", internalType: "address" },
                            { name: "amount", type: "uint256", internalType: "uint256" },
                        ],
                    },
                    { name: "nonce", type: "uint256", internalType: "uint256" },
                    { name: "deadline", type: "uint256", internalType: "uint256" },
                ],
            },
            {
                name: "transferDetails",
                type: "tuple",
                internalType: "struct ISignatureTransfer.SignatureTransferDetails",
                components: [
                    { name: "to", type: "address", internalType: "address" },
                    { name: "requestedAmount", type: "uint256", internalType: "uint256" },
                ],
            },
            { name: "owner", type: "address", internalType: "address" },
            { name: "signature", type: "bytes", internalType: "bytes" },
        ],
        outputs: [],
        stateMutability: "nonpayable",
    },
    {
        type: "function",
        name: "permitTransferFrom",
        inputs: [
            {
                name: "permit",
                type: "tuple",
                internalType: "struct ISignatureTransfer.PermitBatchTransferFrom",
                components: [
                    {
                        name: "permitted",
                        type: "tuple[]",
                        internalType: "struct ISignatureTransfer.TokenPermissions[]",
                        components: [
                            { name: "token", type: "address", internalType: "address" },
                            { name: "amount", type: "uint256", internalType: "uint256" },
                        ],
                    },
                    { name: "nonce", type: "uint256", internalType: "uint256" },
                    { name: "deadline", type: "uint256", internalType: "uint256" },
                ],
            },
            {
                name: "transferDetails",
                type: "tuple[]",
                internalType: "struct ISignatureTransfer.SignatureTransferDetails[]",
                components: [
                    { name: "to", type: "address", internalType: "address" },
                    { name: "requestedAmount", type: "uint256", internalType: "uint256" },
                ],
            },
            { name: "owner", type: "address", internalType: "address" },
            { name: "signature", type: "bytes", internalType: "bytes" },
        ],
        outputs: [],
        stateMutability: "nonpayable",
    },
    {
        type: "function",
        name: "permitWitnessTransferFrom",
        inputs: [
            {
                name: "permit",
                type: "tuple",
                internalType: "struct ISignatureTransfer.PermitTransferFrom",
                components: [
                    {
                        name: "permitted",
                        type: "tuple",
                        internalType: "struct ISignatureTransfer.TokenPermissions",
                        components: [
                            { name: "token", type: "address", internalType: "address" },
                            { name: "amount", type: "uint256", internalType: "uint256" },
                        ],
                    },
                    { name: "nonce", type: "uint256", internalType: "uint256" },
                    { name: "deadline", type: "uint256", internalType: "uint256" },
                ],
            },
            {
                name: "transferDetails",
                type: "tuple",
                internalType: "struct ISignatureTransfer.SignatureTransferDetails",
                components: [
                    { name: "to", type: "address", internalType: "address" },
                    { name: "requestedAmount", type: "uint256", internalType: "uint256" },
                ],
            },
            { name: "owner", type: "address", internalType: "address" },
            { name: "witness", type: "bytes32", internalType: "bytes32" },
            { name: "witnessTypeString", type: "string", internalType: "string" },
            { name: "signature", type: "bytes", internalType: "bytes" },
        ],
        outputs: [],
        stateMutability: "nonpayable",
    },
    {
        type: "function",
        name: "permitWitnessTransferFrom",
        inputs: [
            {
                name: "permit",
                type: "tuple",
                internalType: "struct ISignatureTransfer.PermitBatchTransferFrom",
                components: [
                    {
                        name: "permitted",
                        type: "tuple[]",
                        internalType: "struct ISignatureTransfer.TokenPermissions[]",
                        components: [
                            { name: "token", type: "address", internalType: "address" },
                            { name: "amount", type: "uint256", internalType: "uint256" },
                        ],
                    },
                    { name: "nonce", type: "uint256", internalType: "uint256" },
                    { name: "deadline", type: "uint256", internalType: "uint256" },
                ],
            },
            {
                name: "transferDetails",
                type: "tuple[]",
                internalType: "struct ISignatureTransfer.SignatureTransferDetails[]",
                components: [
                    { name: "to", type: "address", internalType: "address" },
                    { name: "requestedAmount", type: "uint256", internalType: "uint256" },
                ],
            },
            { name: "owner", type: "address", internalType: "address" },
            { name: "witness", type: "bytes32", internalType: "bytes32" },
            { name: "witnessTypeString", type: "string", internalType: "string" },
            { name: "signature", type: "bytes", internalType: "bytes" },
        ],
        outputs: [],
        stateMutability: "nonpayable",
    },
    {
        type: "function",
        name: "getPoolAndPositionInfo",
        inputs: [{ name: "tokenId", type: "uint256", internalType: "uint256" }],
        outputs: [
            {
                name: "",
                type: "tuple",
                internalType: "struct PoolKey",
                components: [
                    { name: "currency0", type: "address", internalType: "Currency" },
                    { name: "currency1", type: "address", internalType: "Currency" },
                    { name: "fee", type: "uint24", internalType: "uint24" },
                    { name: "tickSpacing", type: "int24", internalType: "int24" },
                    { name: "hooks", type: "address", internalType: "contract IHooks" },
                ],
            },
            { name: "", type: "uint256", internalType: "PositionInfo" },
        ],
        stateMutability: "view",
    },
    {
        type: "function",
        name: "getPositionLiquidity",
        inputs: [{ name: "tokenId", type: "uint256", internalType: "uint256" }],
        outputs: [{ name: "liquidity", type: "uint128", internalType: "uint128" }],
        stateMutability: "view",
    },
    {
        type: "function",
        name: "initializePool",
        inputs: [
            {
                name: "key",
                type: "tuple",
                internalType: "struct PoolKey",
                components: [
                    { name: "currency0", type: "address", internalType: "Currency" },
                    { name: "currency1", type: "address", internalType: "Currency" },
                    { name: "fee", type: "uint24", internalType: "uint24" },
                    { name: "tickSpacing", type: "int24", internalType: "int24" },
                    { name: "hooks", type: "address", internalType: "contract IHooks" },
                ],
            },
            { name: "sqrtPriceX96", type: "uint160", internalType: "uint160" },
        ],
        outputs: [{ name: "", type: "int24", internalType: "int24" }],
        stateMutability: "payable",
    },
    {
        type: "function",
        name: "modifyLiquidities",
        inputs: [
            { name: "unlockData", type: "bytes", internalType: "bytes" },
            { name: "deadline", type: "uint256", internalType: "uint256" },
        ],
        outputs: [],
        stateMutability: "payable",
    },
    {
        type: "function",
        name: "modifyLiquiditiesWithoutUnlock",
        inputs: [
            { name: "actions", type: "bytes", internalType: "bytes" },
            { name: "params", type: "bytes[]", internalType: "bytes[]" },
        ],
        outputs: [],
        stateMutability: "payable",
    },
    {
        type: "function",
        name: "nextTokenId",
        inputs: [],
        outputs: [{ name: "", type: "uint256", internalType: "uint256" }],
        stateMutability: "view",
    },
    {
        type: "function",
        name: "nonces",
        inputs: [
            { name: "owner", type: "address", internalType: "address" },
            { name: "word", type: "uint256", internalType: "uint256" },
        ],
        outputs: [{ name: "", type: "uint256", internalType: "uint256" }],
        stateMutability: "view",
    },
    {
        type: "function",
        name: "permit",
        inputs: [
            { name: "spender", type: "address", internalType: "address" },
            { name: "tokenId", type: "uint256", internalType: "uint256" },
            { name: "deadline", type: "uint256", internalType: "uint256" },
            { name: "nonce", type: "uint256", internalType: "uint256" },
            { name: "signature", type: "bytes", internalType: "bytes" },
        ],
        outputs: [],
        stateMutability: "payable",
    },
    {
        type: "function",
        name: "permitBatch",
        inputs: [
            { name: "owner", type: "address", internalType: "address" },
            {
                name: "_permitBatch",
                type: "tuple",
                internalType: "struct IAllowanceTransfer.PermitBatch",
                components: [
                    {
                        name: "details",
                        type: "tuple[]",
                        internalType: "struct IAllowanceTransfer.PermitDetails[]",
                        components: [
                            { name: "token", type: "address", internalType: "address" },
                            { name: "amount", type: "uint160", internalType: "uint160" },
                            { name: "expiration", type: "uint48", internalType: "uint48" },
                            { name: "nonce", type: "uint48", internalType: "uint48" },
                        ],
                    },
                    { name: "spender", type: "address", internalType: "address" },
                    { name: "sigDeadline", type: "uint256", internalType: "uint256" },
                ],
            },
            { name: "signature", type: "bytes", internalType: "bytes" },
        ],
        outputs: [{ name: "err", type: "bytes", internalType: "bytes" }],
        stateMutability: "payable",
    },
    {
        type: "function",
        name: "permitForAll",
        inputs: [
            { name: "owner", type: "address", internalType: "address" },
            { name: "operator", type: "address", internalType: "address" },
            { name: "approved", type: "bool", internalType: "bool" },
            { name: "deadline", type: "uint256", internalType: "uint256" },
            { name: "nonce", type: "uint256", internalType: "uint256" },
            { name: "signature", type: "bytes", internalType: "bytes" },
        ],
        outputs: [],
        stateMutability: "payable",
    },
    {
        type: "function",
        name: "poolManager",
        inputs: [],
        outputs: [{ name: "", type: "address", internalType: "contract IPoolManager" }],
        stateMutability: "view",
    },
    {
        type: "function",
        name: "positionInfo",
        inputs: [{ name: "tokenId", type: "uint256", internalType: "uint256" }],
        outputs: [{ name: "", type: "uint256", internalType: "PositionInfo" }],
        stateMutability: "view",
    },
    {
        type: "function",
        name: "revokeNonce",
        inputs: [{ name: "nonce", type: "uint256", internalType: "uint256" }],
        outputs: [],
        stateMutability: "payable",
    },
    {
        type: "function",
        name: "subscribe",
        inputs: [
            { name: "tokenId", type: "uint256", internalType: "uint256" },
            { name: "newSubscriber", type: "address", internalType: "address" },
            { name: "data", type: "bytes", internalType: "bytes" },
        ],
        outputs: [],
        stateMutability: "payable",
    },
    {
        type: "function",
        name: "subscriber",
        inputs: [{ name: "tokenId", type: "uint256", internalType: "uint256" }],
        outputs: [{ name: "subscriber", type: "address", internalType: "contract ISubscriber" }],
        stateMutability: "view",
    },
    {
        type: "function",
        name: "unsubscribe",
        inputs: [{ name: "tokenId", type: "uint256", internalType: "uint256" }],
        outputs: [],
        stateMutability: "payable",
    },
    {
        type: "function",
        name: "unsubscribeGasLimit",
        inputs: [],
        outputs: [{ name: "", type: "uint256", internalType: "uint256" }],
        stateMutability: "view",
    },
    {
        type: "function",
        name: "allowance",
        inputs: [
            { name: "owner", type: "address", internalType: "address" },
            { name: "spender", type: "address", internalType: "address" },
            { name: "id", type: "uint256", internalType: "uint256" },
        ],
        outputs: [{ name: "amount", type: "uint256", internalType: "uint256" }],
        stateMutability: "view",
    },
    {
        type: "function",
        name: "approve",
        inputs: [
            { name: "spender", type: "address", internalType: "address" },
            { name: "id", type: "uint256", internalType: "uint256" },
            { name: "amount", type: "uint256", internalType: "uint256" },
        ],
        outputs: [{ name: "", type: "bool", internalType: "bool" }],
        stateMutability: "nonpayable",
    },
    {
        type: "function",
        name: "balanceOf",
        inputs: [
            { name: "owner", type: "address", internalType: "address" },
            { name: "id", type: "uint256", internalType: "uint256" },
        ],
        outputs: [{ name: "amount", type: "uint256", internalType: "uint256" }],
        stateMutability: "view",
    },
    {
        type: "function",
        name: "burn",
        inputs: [
            { name: "from", type: "address", internalType: "address" },
            { name: "id", type: "uint256", internalType: "uint256" },
            { name: "amount", type: "uint256", internalType: "uint256" },
        ],
        outputs: [],
        stateMutability: "nonpayable",
    },
    {
        type: "function",
        name: "clear",
        inputs: [
            { name: "currency", type: "address", internalType: "Currency" },
            { name: "amount", type: "uint256", internalType: "uint256" },
        ],
        outputs: [],
        stateMutability: "nonpayable",
    },
    {
        type: "function",
        name: "collectProtocolFees",
        inputs: [
            { name: "recipient", type: "address", internalType: "address" },
            { name: "currency", type: "address", internalType: "Currency" },
            { name: "amount", type: "uint256", internalType: "uint256" },
        ],
        outputs: [{ name: "amountCollected", type: "uint256", internalType: "uint256" }],
        stateMutability: "nonpayable",
    },
    {
        type: "function",
        name: "donate",
        inputs: [
            {
                name: "key",
                type: "tuple",
                internalType: "struct PoolKey",
                components: [
                    { name: "currency0", type: "address", internalType: "Currency" },
                    { name: "currency1", type: "address", internalType: "Currency" },
                    { name: "fee", type: "uint24", internalType: "uint24" },
                    { name: "tickSpacing", type: "int24", internalType: "int24" },
                    { name: "hooks", type: "address", internalType: "contract IHooks" },
                ],
            },
            { name: "amount0", type: "uint256", internalType: "uint256" },
            { name: "amount1", type: "uint256", internalType: "uint256" },
            { name: "hookData", type: "bytes", internalType: "bytes" },
        ],
        outputs: [{ name: "", type: "int256", internalType: "BalanceDelta" }],
        stateMutability: "nonpayable",
    },
    {
        type: "function",
        name: "extsload",
        inputs: [{ name: "slot", type: "bytes32", internalType: "bytes32" }],
        outputs: [{ name: "value", type: "bytes32", internalType: "bytes32" }],
        stateMutability: "view",
    },
    {
        type: "function",
        name: "extsload",
        inputs: [
            { name: "startSlot", type: "bytes32", internalType: "bytes32" },
            { name: "nSlots", type: "uint256", internalType: "uint256" },
        ],
        outputs: [{ name: "values", type: "bytes32[]", internalType: "bytes32[]" }],
        stateMutability: "view",
    },
    {
        type: "function",
        name: "extsload",
        inputs: [{ name: "slots", type: "bytes32[]", internalType: "bytes32[]" }],
        outputs: [{ name: "values", type: "bytes32[]", internalType: "bytes32[]" }],
        stateMutability: "view",
    },
    {
        type: "function",
        name: "exttload",
        inputs: [{ name: "slots", type: "bytes32[]", internalType: "bytes32[]" }],
        outputs: [{ name: "values", type: "bytes32[]", internalType: "bytes32[]" }],
        stateMutability: "view",
    },
    {
        type: "function",
        name: "exttload",
        inputs: [{ name: "slot", type: "bytes32", internalType: "bytes32" }],
        outputs: [{ name: "value", type: "bytes32", internalType: "bytes32" }],
        stateMutability: "view",
    },
    {
        type: "function",
        name: "initialize",
        inputs: [
            {
                name: "key",
                type: "tuple",
                internalType: "struct PoolKey",
                components: [
                    { name: "currency0", type: "address", internalType: "Currency" },
                    { name: "currency1", type: "address", internalType: "Currency" },
                    { name: "fee", type: "uint24", internalType: "uint24" },
                    { name: "tickSpacing", type: "int24", internalType: "int24" },
                    { name: "hooks", type: "address", internalType: "contract IHooks" },
                ],
            },
            { name: "sqrtPriceX96", type: "uint160", internalType: "uint160" },
        ],
        outputs: [{ name: "tick", type: "int24", internalType: "int24" }],
        stateMutability: "nonpayable",
    },
    {
        type: "function",
        name: "isOperator",
        inputs: [
            { name: "owner", type: "address", internalType: "address" },
            { name: "spender", type: "address", internalType: "address" },
        ],
        outputs: [{ name: "approved", type: "bool", internalType: "bool" }],
        stateMutability: "view",
    },
    {
        type: "function",
        name: "mint",
        inputs: [
            { name: "to", type: "address", internalType: "address" },
            { name: "id", type: "uint256", internalType: "uint256" },
            { name: "amount", type: "uint256", internalType: "uint256" },
        ],
        outputs: [],
        stateMutability: "nonpayable",
    },
    {
        type: "function",
        name: "modifyLiquidity",
        inputs: [
            {
                name: "key",
                type: "tuple",
                internalType: "struct PoolKey",
                components: [
                    { name: "currency0", type: "address", internalType: "Currency" },
                    { name: "currency1", type: "address", internalType: "Currency" },
                    { name: "fee", type: "uint24", internalType: "uint24" },
                    { name: "tickSpacing", type: "int24", internalType: "int24" },
                    { name: "hooks", type: "address", internalType: "contract IHooks" },
                ],
            },
            {
                name: "params",
                type: "tuple",
                internalType: "struct IPoolManager.ModifyLiquidityParams",
                components: [
                    { name: "tickLower", type: "int24", internalType: "int24" },
                    { name: "tickUpper", type: "int24", internalType: "int24" },
                    { name: "liquidityDelta", type: "int256", internalType: "int256" },
                    { name: "salt", type: "bytes32", internalType: "bytes32" },
                ],
            },
            { name: "hookData", type: "bytes", internalType: "bytes" },
        ],
        outputs: [
            { name: "callerDelta", type: "int256", internalType: "BalanceDelta" },
            { name: "feesAccrued", type: "int256", internalType: "BalanceDelta" },
        ],
        stateMutability: "nonpayable",
    },
    {
        type: "function",
        name: "protocolFeeController",
        inputs: [],
        outputs: [{ name: "", type: "address", internalType: "address" }],
        stateMutability: "view",
    },
    {
        type: "function",
        name: "protocolFeesAccrued",
        inputs: [{ name: "currency", type: "address", internalType: "Currency" }],
        outputs: [{ name: "amount", type: "uint256", internalType: "uint256" }],
        stateMutability: "view",
    },
    {
        type: "function",
        name: "setOperator",
        inputs: [
            { name: "operator", type: "address", internalType: "address" },
            { name: "approved", type: "bool", internalType: "bool" },
        ],
        outputs: [{ name: "", type: "bool", internalType: "bool" }],
        stateMutability: "nonpayable",
    },
    {
        type: "function",
        name: "setProtocolFee",
        inputs: [
            {
                name: "key",
                type: "tuple",
                internalType: "struct PoolKey",
                components: [
                    { name: "currency0", type: "address", internalType: "Currency" },
                    { name: "currency1", type: "address", internalType: "Currency" },
                    { name: "fee", type: "uint24", internalType: "uint24" },
                    { name: "tickSpacing", type: "int24", internalType: "int24" },
                    { name: "hooks", type: "address", internalType: "contract IHooks" },
                ],
            },
            { name: "newProtocolFee", type: "uint24", internalType: "uint24" },
        ],
        outputs: [],
        stateMutability: "nonpayable",
    },
    {
        type: "function",
        name: "setProtocolFeeController",
        inputs: [{ name: "controller", type: "address", internalType: "address" }],
        outputs: [],
        stateMutability: "nonpayable",
    },
    {
        type: "function",
        name: "settle",
        inputs: [],
        outputs: [{ name: "paid", type: "uint256", internalType: "uint256" }],
        stateMutability: "payable",
    },
    {
        type: "function",
        name: "settleFor",
        inputs: [{ name: "recipient", type: "address", internalType: "address" }],
        outputs: [{ name: "paid", type: "uint256", internalType: "uint256" }],
        stateMutability: "payable",
    },
    {
        type: "function",
        name: "swap",
        inputs: [
            {
                name: "key",
                type: "tuple",
                internalType: "struct PoolKey",
                components: [
                    { name: "currency0", type: "address", internalType: "Currency" },
                    { name: "currency1", type: "address", internalType: "Currency" },
                    { name: "fee", type: "uint24", internalType: "uint24" },
                    { name: "tickSpacing", type: "int24", internalType: "int24" },
                    { name: "hooks", type: "address", internalType: "contract IHooks" },
                ],
            },
            {
                name: "params",
                type: "tuple",
                internalType: "struct IPoolManager.SwapParams",
                components: [
                    { name: "zeroForOne", type: "bool", internalType: "bool" },
                    { name: "amountSpecified", type: "int256", internalType: "int256" },
                    { name: "sqrtPriceLimitX96", type: "uint160", internalType: "uint160" },
                ],
            },
            { name: "hookData", type: "bytes", internalType: "bytes" },
        ],
        outputs: [{ name: "swapDelta", type: "int256", internalType: "BalanceDelta" }],
        stateMutability: "nonpayable",
    },
    {
        type: "function",
        name: "sync",
        inputs: [{ name: "currency", type: "address", internalType: "Currency" }],
        outputs: [],
        stateMutability: "nonpayable",
    },
    {
        type: "function",
        name: "take",
        inputs: [
            { name: "currency", type: "address", internalType: "Currency" },
            { name: "to", type: "address", internalType: "address" },
            { name: "amount", type: "uint256", internalType: "uint256" },
        ],
        outputs: [],
        stateMutability: "nonpayable",
    },
    {
        type: "function",
        name: "transfer",
        inputs: [
            { name: "receiver", type: "address", internalType: "address" },
            { name: "id", type: "uint256", internalType: "uint256" },
            { name: "amount", type: "uint256", internalType: "uint256" },
        ],
        outputs: [{ name: "", type: "bool", internalType: "bool" }],
        stateMutability: "nonpayable",
    },
    {
        type: "function",
        name: "transferFrom",
        inputs: [
            { name: "sender", type: "address", internalType: "address" },
            { name: "receiver", type: "address", internalType: "address" },
            { name: "id", type: "uint256", internalType: "uint256" },
            { name: "amount", type: "uint256", internalType: "uint256" },
        ],
        outputs: [{ name: "", type: "bool", internalType: "bool" }],
        stateMutability: "nonpayable",
    },
    {
        type: "function",
        name: "unlock",
        inputs: [{ name: "data", type: "bytes", internalType: "bytes" }],
        outputs: [{ name: "", type: "bytes", internalType: "bytes" }],
        stateMutability: "nonpayable",
    },
    {
        type: "function",
        name: "updateDynamicLPFee",
        inputs: [
            {
                name: "key",
                type: "tuple",
                internalType: "struct PoolKey",
                components: [
                    { name: "currency0", type: "address", internalType: "Currency" },
                    { name: "currency1", type: "address", internalType: "Currency" },
                    { name: "fee", type: "uint24", internalType: "uint24" },
                    { name: "tickSpacing", type: "int24", internalType: "int24" },
                    { name: "hooks", type: "address", internalType: "contract IHooks" },
                ],
            },
            { name: "newDynamicLPFee", type: "uint24", internalType: "uint24" },
        ],
        outputs: [],
        stateMutability: "nonpayable",
    },
    {
        type: "function",
        name: "owner",
        inputs: [],
        outputs: [{ name: "", type: "address", internalType: "address" }],
        stateMutability: "view",
    },
    {
        type: "function",
        name: "supportsInterface",
        inputs: [{ name: "interfaceId", type: "bytes4", internalType: "bytes4" }],
        outputs: [{ name: "", type: "bool", internalType: "bool" }],
        stateMutability: "view",
    },
    {
        type: "function",
        name: "transferOwnership",
        inputs: [{ name: "newOwner", type: "address", internalType: "address" }],
        outputs: [],
        stateMutability: "nonpayable",
    },
    {
        type: "function",
        name: "WETH9",
        inputs: [],
        outputs: [{ name: "", type: "address", internalType: "contract IWETH9" }],
        stateMutability: "view",
    },
    {
        type: "function",
        name: "getApproved",
        inputs: [{ name: "", type: "uint256", internalType: "uint256" }],
        outputs: [{ name: "", type: "address", internalType: "address" }],
        stateMutability: "view",
    },
    {
        type: "function",
        name: "isApprovedForAll",
        inputs: [
            { name: "", type: "address", internalType: "address" },
            { name: "", type: "address", internalType: "address" },
        ],
        outputs: [{ name: "", type: "bool", internalType: "bool" }],
        stateMutability: "view",
    },
    {
        type: "function",
        name: "msgSender",
        inputs: [],
        outputs: [{ name: "", type: "address", internalType: "address" }],
        stateMutability: "view",
    },
    {
        type: "function",
        name: "ownerOf",
        inputs: [{ name: "id", type: "uint256", internalType: "uint256" }],
        outputs: [{ name: "owner", type: "address", internalType: "address" }],
        stateMutability: "view",
    },
    {
        type: "function",
        name: "permit2",
        inputs: [],
        outputs: [{ name: "", type: "address", internalType: "contract IAllowanceTransfer" }],
        stateMutability: "view",
    },
    {
        type: "function",
        name: "poolKeys",
        inputs: [{ name: "poolId", type: "bytes25", internalType: "bytes25" }],
        outputs: [
            { name: "currency0", type: "address", internalType: "Currency" },
            { name: "currency1", type: "address", internalType: "Currency" },
            { name: "fee", type: "uint24", internalType: "uint24" },
            { name: "tickSpacing", type: "int24", internalType: "int24" },
            { name: "hooks", type: "address", internalType: "contract IHooks" },
        ],
        stateMutability: "view",
    },
    {
        type: "function",
        name: "safeTransferFrom",
        inputs: [
            { name: "from", type: "address", internalType: "address" },
            { name: "to", type: "address", internalType: "address" },
            { name: "id", type: "uint256", internalType: "uint256" },
        ],
        outputs: [],
        stateMutability: "nonpayable",
    },
    {
        type: "function",
        name: "safeTransferFrom",
        inputs: [
            { name: "from", type: "address", internalType: "address" },
            { name: "to", type: "address", internalType: "address" },
            { name: "id", type: "uint256", internalType: "uint256" },
            { name: "data", type: "bytes", internalType: "bytes" },
        ],
        outputs: [],
        stateMutability: "nonpayable",
    },
    {
        type: "function",
        name: "setApprovalForAll",
        inputs: [
            { name: "operator", type: "address", internalType: "address" },
            { name: "approved", type: "bool", internalType: "bool" },
        ],
        outputs: [],
        stateMutability: "nonpayable",
    },
    {
        type: "function",
        name: "tokenDescriptor",
        inputs: [],
        outputs: [{ name: "", type: "address", internalType: "contract IPositionDescriptor" }],
        stateMutability: "view",
    },
    {
        type: "function",
        name: "tokenURI",
        inputs: [{ name: "tokenId", type: "uint256", internalType: "uint256" }],
        outputs: [{ name: "", type: "string", internalType: "string" }],
        stateMutability: "view",
    },
    {
        type: "function",
        name: "unlockCallback",
        inputs: [{ name: "data", type: "bytes", internalType: "bytes" }],
        outputs: [{ name: "", type: "bytes", internalType: "bytes" }],
        stateMutability: "nonpayable",
    },
    {
        type: "function",
        name: "execute",
        inputs: [
            { name: "commands", type: "bytes", internalType: "bytes" },
            { name: "inputs", type: "bytes[]", internalType: "bytes[]" },
            { name: "deadline", type: "uint256", internalType: "uint256" },
        ],
        outputs: [],
        stateMutability: "payable",
    },
    {
        type: "function",
        name: "V3_POSITION_MANAGER",
        inputs: [],
        outputs: [{ name: "", type: "address", internalType: "contract INonfungiblePositionManager" }],
        stateMutability: "view",
    },
    {
        type: "function",
        name: "V4_POSITION_MANAGER",
        inputs: [],
        outputs: [{ name: "", type: "address", internalType: "contract IPositionManager" }],
        stateMutability: "view",
    },
    {
        type: "function",
        name: "execute",
        inputs: [
            { name: "commands", type: "bytes", internalType: "bytes" },
            { name: "inputs", type: "bytes[]", internalType: "bytes[]" },
        ],
        outputs: [],
        stateMutability: "payable",
    },
    {
        type: "function",
        name: "uniswapV3SwapCallback",
        inputs: [
            { name: "amount0Delta", type: "int256", internalType: "int256" },
            { name: "amount1Delta", type: "int256", internalType: "int256" },
            { name: "data", type: "bytes", internalType: "bytes" },
        ],
        outputs: [],
        stateMutability: "nonpayable",
    },
    {
        type: "function",
        name: "quoteExactInput",
        inputs: [
            {
                name: "params",
                type: "tuple",
                internalType: "struct IV4Quoter.QuoteExactParams",
                components: [
                    { name: "exactCurrency", type: "address", internalType: "Currency" },
                    {
                        name: "path",
                        type: "tuple[]",
                        internalType: "struct PathKey[]",
                        components: [
                            { name: "intermediateCurrency", type: "address", internalType: "Currency" },
                            { name: "fee", type: "uint24", internalType: "uint24" },
                            { name: "tickSpacing", type: "int24", internalType: "int24" },
                            { name: "hooks", type: "address", internalType: "contract IHooks" },
                            { name: "hookData", type: "bytes", internalType: "bytes" },
                        ],
                    },
                    { name: "exactAmount", type: "uint128", internalType: "uint128" },
                ],
            },
        ],
        outputs: [
            { name: "amountOut", type: "uint256", internalType: "uint256" },
            { name: "gasEstimate", type: "uint256", internalType: "uint256" },
        ],
        stateMutability: "nonpayable",
    },
    {
        type: "function",
        name: "quoteExactInputSingle",
        inputs: [
            {
                name: "params",
                type: "tuple",
                internalType: "struct IV4Quoter.QuoteExactSingleParams",
                components: [
                    {
                        name: "poolKey",
                        type: "tuple",
                        internalType: "struct PoolKey",
                        components: [
                            { name: "currency0", type: "address", internalType: "Currency" },
                            { name: "currency1", type: "address", internalType: "Currency" },
                            { name: "fee", type: "uint24", internalType: "uint24" },
                            { name: "tickSpacing", type: "int24", internalType: "int24" },
                            { name: "hooks", type: "address", internalType: "contract IHooks" },
                        ],
                    },
                    { name: "zeroForOne", type: "bool", internalType: "bool" },
                    { name: "exactAmount", type: "uint128", internalType: "uint128" },
                    { name: "hookData", type: "bytes", internalType: "bytes" },
                ],
            },
        ],
        outputs: [
            { name: "amountOut", type: "uint256", internalType: "uint256" },
            { name: "gasEstimate", type: "uint256", internalType: "uint256" },
        ],
        stateMutability: "nonpayable",
    },
    {
        type: "function",
        name: "quoteExactOutput",
        inputs: [
            {
                name: "params",
                type: "tuple",
                internalType: "struct IV4Quoter.QuoteExactParams",
                components: [
                    { name: "exactCurrency", type: "address", internalType: "Currency" },
                    {
                        name: "path",
                        type: "tuple[]",
                        internalType: "struct PathKey[]",
                        components: [
                            { name: "intermediateCurrency", type: "address", internalType: "Currency" },
                            { name: "fee", type: "uint24", internalType: "uint24" },
                            { name: "tickSpacing", type: "int24", internalType: "int24" },
                            { name: "hooks", type: "address", internalType: "contract IHooks" },
                            { name: "hookData", type: "bytes", internalType: "bytes" },
                        ],
                    },
                    { name: "exactAmount", type: "uint128", internalType: "uint128" },
                ],
            },
        ],
        outputs: [
            { name: "amountIn", type: "uint256", internalType: "uint256" },
            { name: "gasEstimate", type: "uint256", internalType: "uint256" },
        ],
        stateMutability: "nonpayable",
    },
    {
        type: "function",
        name: "quoteExactOutputSingle",
        inputs: [
            {
                name: "params",
                type: "tuple",
                internalType: "struct IV4Quoter.QuoteExactSingleParams",
                components: [
                    {
                        name: "poolKey",
                        type: "tuple",
                        internalType: "struct PoolKey",
                        components: [
                            { name: "currency0", type: "address", internalType: "Currency" },
                            { name: "currency1", type: "address", internalType: "Currency" },
                            { name: "fee", type: "uint24", internalType: "uint24" },
                            { name: "tickSpacing", type: "int24", internalType: "int24" },
                            { name: "hooks", type: "address", internalType: "contract IHooks" },
                        ],
                    },
                    { name: "zeroForOne", type: "bool", internalType: "bool" },
                    { name: "exactAmount", type: "uint128", internalType: "uint128" },
                    { name: "hookData", type: "bytes", internalType: "bytes" },
                ],
            },
        ],
        outputs: [
            { name: "amountIn", type: "uint256", internalType: "uint256" },
            { name: "gasEstimate", type: "uint256", internalType: "uint256" },
        ],
        stateMutability: "nonpayable",
    },
    {
        type: "function",
        name: "_quoteExactInput",
        inputs: [
            {
                name: "params",
                type: "tuple",
                internalType: "struct IV4Quoter.QuoteExactParams",
                components: [
                    { name: "exactCurrency", type: "address", internalType: "Currency" },
                    {
                        name: "path",
                        type: "tuple[]",
                        internalType: "struct PathKey[]",
                        components: [
                            { name: "intermediateCurrency", type: "address", internalType: "Currency" },
                            { name: "fee", type: "uint24", internalType: "uint24" },
                            { name: "tickSpacing", type: "int24", internalType: "int24" },
                            { name: "hooks", type: "address", internalType: "contract IHooks" },
                            { name: "hookData", type: "bytes", internalType: "bytes" },
                        ],
                    },
                    { name: "exactAmount", type: "uint128", internalType: "uint128" },
                ],
            },
        ],
        outputs: [{ name: "", type: "bytes", internalType: "bytes" }],
        stateMutability: "nonpayable",
    },
    {
        type: "function",
        name: "_quoteExactInputSingle",
        inputs: [
            {
                name: "params",
                type: "tuple",
                internalType: "struct IV4Quoter.QuoteExactSingleParams",
                components: [
                    {
                        name: "poolKey",
                        type: "tuple",
                        internalType: "struct PoolKey",
                        components: [
                            { name: "currency0", type: "address", internalType: "Currency" },
                            { name: "currency1", type: "address", internalType: "Currency" },
                            { name: "fee", type: "uint24", internalType: "uint24" },
                            { name: "tickSpacing", type: "int24", internalType: "int24" },
                            { name: "hooks", type: "address", internalType: "contract IHooks" },
                        ],
                    },
                    { name: "zeroForOne", type: "bool", internalType: "bool" },
                    { name: "exactAmount", type: "uint128", internalType: "uint128" },
                    { name: "hookData", type: "bytes", internalType: "bytes" },
                ],
            },
        ],
        outputs: [{ name: "", type: "bytes", internalType: "bytes" }],
        stateMutability: "nonpayable",
    },
    {
        type: "function",
        name: "_quoteExactOutput",
        inputs: [
            {
                name: "params",
                type: "tuple",
                internalType: "struct IV4Quoter.QuoteExactParams",
                components: [
                    { name: "exactCurrency", type: "address", internalType: "Currency" },
                    {
                        name: "path",
                        type: "tuple[]",
                        internalType: "struct PathKey[]",
                        components: [
                            { name: "intermediateCurrency", type: "address", internalType: "Currency" },
                            { name: "fee", type: "uint24", internalType: "uint24" },
                            { name: "tickSpacing", type: "int24", internalType: "int24" },
                            { name: "hooks", type: "address", internalType: "contract IHooks" },
                            { name: "hookData", type: "bytes", internalType: "bytes" },
                        ],
                    },
                    { name: "exactAmount", type: "uint128", internalType: "uint128" },
                ],
            },
        ],
        outputs: [{ name: "", type: "bytes", internalType: "bytes" }],
        stateMutability: "nonpayable",
    },
    {
        type: "function",
        name: "_quoteExactOutputSingle",
        inputs: [
            {
                name: "params",
                type: "tuple",
                internalType: "struct IV4Quoter.QuoteExactSingleParams",
                components: [
                    {
                        name: "poolKey",
                        type: "tuple",
                        internalType: "struct PoolKey",
                        components: [
                            { name: "currency0", type: "address", internalType: "Currency" },
                            { name: "currency1", type: "address", internalType: "Currency" },
                            { name: "fee", type: "uint24", internalType: "uint24" },
                            { name: "tickSpacing", type: "int24", internalType: "int24" },
                            { name: "hooks", type: "address", internalType: "contract IHooks" },
                        ],
                    },
                    { name: "zeroForOne", type: "bool", internalType: "bool" },
                    { name: "exactAmount", type: "uint128", internalType: "uint128" },
                    { name: "hookData", type: "bytes", internalType: "bytes" },
                ],
            },
        ],
        outputs: [{ name: "", type: "bytes", internalType: "bytes" }],
        stateMutability: "nonpayable",
    },
    {
        type: "function",
        name: "getFeeGrowthGlobals",
        inputs: [{ name: "poolId", type: "bytes32", internalType: "PoolId" }],
        outputs: [
            { name: "feeGrowthGlobal0", type: "uint256", internalType: "uint256" },
            { name: "feeGrowthGlobal1", type: "uint256", internalType: "uint256" },
        ],
        stateMutability: "view",
    },
    {
        type: "function",
        name: "getFeeGrowthInside",
        inputs: [
            { name: "poolId", type: "bytes32", internalType: "PoolId" },
            { name: "tickLower", type: "int24", internalType: "int24" },
            { name: "tickUpper", type: "int24", internalType: "int24" },
        ],
        outputs: [
            { name: "feeGrowthInside0X128", type: "uint256", internalType: "uint256" },
            { name: "feeGrowthInside1X128", type: "uint256", internalType: "uint256" },
        ],
        stateMutability: "view",
    },
    {
        type: "function",
        name: "getLiquidity",
        inputs: [{ name: "poolId", type: "bytes32", internalType: "PoolId" }],
        outputs: [{ name: "liquidity", type: "uint128", internalType: "uint128" }],
        stateMutability: "view",
    },
    {
        type: "function",
        name: "getPositionInfo",
        inputs: [
            { name: "poolId", type: "bytes32", internalType: "PoolId" },
            { name: "positionId", type: "bytes32", internalType: "bytes32" },
        ],
        outputs: [
            { name: "liquidity", type: "uint128", internalType: "uint128" },
            { name: "feeGrowthInside0LastX128", type: "uint256", internalType: "uint256" },
            { name: "feeGrowthInside1LastX128", type: "uint256", internalType: "uint256" },
        ],
        stateMutability: "view",
    },
    {
        type: "function",
        name: "getPositionInfo",
        inputs: [
            { name: "poolId", type: "bytes32", internalType: "PoolId" },
            { name: "owner", type: "address", internalType: "address" },
            { name: "tickLower", type: "int24", internalType: "int24" },
            { name: "tickUpper", type: "int24", internalType: "int24" },
            { name: "salt", type: "bytes32", internalType: "bytes32" },
        ],
        outputs: [
            { name: "liquidity", type: "uint128", internalType: "uint128" },
            { name: "feeGrowthInside0LastX128", type: "uint256", internalType: "uint256" },
            { name: "feeGrowthInside1LastX128", type: "uint256", internalType: "uint256" },
        ],
        stateMutability: "view",
    },
    {
        type: "function",
        name: "getPositionLiquidity",
        inputs: [
            { name: "poolId", type: "bytes32", internalType: "PoolId" },
            { name: "positionId", type: "bytes32", internalType: "bytes32" },
        ],
        outputs: [{ name: "liquidity", type: "uint128", internalType: "uint128" }],
        stateMutability: "view",
    },
    {
        type: "function",
        name: "getSlot0",
        inputs: [{ name: "poolId", type: "bytes32", internalType: "PoolId" }],
        outputs: [
            { name: "sqrtPriceX96", type: "uint160", internalType: "uint160" },
            { name: "tick", type: "int24", internalType: "int24" },
            { name: "protocolFee", type: "uint24", internalType: "uint24" },
            { name: "lpFee", type: "uint24", internalType: "uint24" },
        ],
        stateMutability: "view",
    },
    {
        type: "function",
        name: "getTickBitmap",
        inputs: [
            { name: "poolId", type: "bytes32", internalType: "PoolId" },
            { name: "tick", type: "int16", internalType: "int16" },
        ],
        outputs: [{ name: "tickBitmap", type: "uint256", internalType: "uint256" }],
        stateMutability: "view",
    },
    {
        type: "function",
        name: "getTickFeeGrowthOutside",
        inputs: [
            { name: "poolId", type: "bytes32", internalType: "PoolId" },
            { name: "tick", type: "int24", internalType: "int24" },
        ],
        outputs: [
            { name: "feeGrowthOutside0X128", type: "uint256", internalType: "uint256" },
            { name: "feeGrowthOutside1X128", type: "uint256", internalType: "uint256" },
        ],
        stateMutability: "view",
    },
    {
        type: "function",
        name: "getTickInfo",
        inputs: [
            { name: "poolId", type: "bytes32", internalType: "PoolId" },
            { name: "tick", type: "int24", internalType: "int24" },
        ],
        outputs: [
            { name: "liquidityGross", type: "uint128", internalType: "uint128" },
            { name: "liquidityNet", type: "int128", internalType: "int128" },
            { name: "feeGrowthOutside0X128", type: "uint256", internalType: "uint256" },
            { name: "feeGrowthOutside1X128", type: "uint256", internalType: "uint256" },
        ],
        stateMutability: "view",
    },
    {
        type: "function",
        name: "getTickLiquidity",
        inputs: [
            { name: "poolId", type: "bytes32", internalType: "PoolId" },
            { name: "tick", type: "int24", internalType: "int24" },
        ],
        outputs: [
            { name: "liquidityGross", type: "uint128", internalType: "uint128" },
            { name: "liquidityNet", type: "int128", internalType: "int128" },
        ],
        stateMutability: "view",
    },
] as const;
