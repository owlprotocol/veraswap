export const functions = [
    {
        type: "function",
        name: "multicall",
        inputs: [{ name: "data", type: "bytes[]", internalType: "bytes[]" }],
        outputs: [{ name: "results", type: "bytes[]", internalType: "bytes[]" }],
        stateMutability: "payable",
    },
    {
        type: "function",
        name: "DOMAIN_SEPARATOR",
        inputs: [],
        outputs: [{ name: "", type: "bytes32", internalType: "bytes32" }],
        stateMutability: "view",
    },
    {
        type: "function",
        name: "allowance",
        inputs: [
            { name: "", type: "address", internalType: "address" },
            { name: "", type: "address", internalType: "address" },
        ],
        outputs: [{ name: "", type: "uint256", internalType: "uint256" }],
        stateMutability: "view",
    },
    {
        type: "function",
        name: "approve",
        inputs: [
            { name: "spender", type: "address", internalType: "address" },
            { name: "amount", type: "uint256", internalType: "uint256" },
        ],
        outputs: [{ name: "", type: "bool", internalType: "bool" }],
        stateMutability: "nonpayable",
    },
    {
        type: "function",
        name: "balanceOf",
        inputs: [{ name: "", type: "address", internalType: "address" }],
        outputs: [{ name: "", type: "uint256", internalType: "uint256" }],
        stateMutability: "view",
    },
    {
        type: "function",
        name: "burn",
        inputs: [
            { name: "from", type: "address", internalType: "address" },
            { name: "value", type: "uint256", internalType: "uint256" },
        ],
        outputs: [],
        stateMutability: "nonpayable",
    },
    {
        type: "function",
        name: "decimals",
        inputs: [],
        outputs: [{ name: "", type: "uint8", internalType: "uint8" }],
        stateMutability: "view",
    },
    {
        type: "function",
        name: "mint",
        inputs: [
            { name: "to", type: "address", internalType: "address" },
            { name: "value", type: "uint256", internalType: "uint256" },
        ],
        outputs: [],
        stateMutability: "nonpayable",
    },
    {
        type: "function",
        name: "name",
        inputs: [],
        outputs: [{ name: "", type: "string", internalType: "string" }],
        stateMutability: "view",
    },
    {
        type: "function",
        name: "nonces",
        inputs: [{ name: "", type: "address", internalType: "address" }],
        outputs: [{ name: "", type: "uint256", internalType: "uint256" }],
        stateMutability: "view",
    },
    {
        type: "function",
        name: "permit",
        inputs: [
            { name: "owner", type: "address", internalType: "address" },
            { name: "spender", type: "address", internalType: "address" },
            { name: "value", type: "uint256", internalType: "uint256" },
            { name: "deadline", type: "uint256", internalType: "uint256" },
            { name: "v", type: "uint8", internalType: "uint8" },
            { name: "r", type: "bytes32", internalType: "bytes32" },
            { name: "s", type: "bytes32", internalType: "bytes32" },
        ],
        outputs: [],
        stateMutability: "nonpayable",
    },
    {
        type: "function",
        name: "symbol",
        inputs: [],
        outputs: [{ name: "", type: "string", internalType: "string" }],
        stateMutability: "view",
    },
    {
        type: "function",
        name: "totalSupply",
        inputs: [],
        outputs: [{ name: "", type: "uint256", internalType: "uint256" }],
        stateMutability: "view",
    },
    {
        type: "function",
        name: "transfer",
        inputs: [
            { name: "to", type: "address", internalType: "address" },
            { name: "amount", type: "uint256", internalType: "uint256" },
        ],
        outputs: [{ name: "", type: "bool", internalType: "bool" }],
        stateMutability: "nonpayable",
    },
    {
        type: "function",
        name: "transferFrom",
        inputs: [
            { name: "from", type: "address", internalType: "address" },
            { name: "to", type: "address", internalType: "address" },
            { name: "amount", type: "uint256", internalType: "uint256" },
        ],
        outputs: [{ name: "", type: "bool", internalType: "bool" }],
        stateMutability: "nonpayable",
    },
    {
        type: "function",
        name: "allowance",
        inputs: [
            { name: "user", type: "address", internalType: "address" },
            { name: "token", type: "address", internalType: "address" },
            { name: "spender", type: "address", internalType: "address" },
        ],
        outputs: [
            { name: "amount", type: "uint160", internalType: "uint160" },
            { name: "expiration", type: "uint48", internalType: "uint48" },
            { name: "nonce", type: "uint48", internalType: "uint48" },
        ],
        stateMutability: "view",
    },
    {
        type: "function",
        name: "approve",
        inputs: [
            { name: "token", type: "address", internalType: "address" },
            { name: "spender", type: "address", internalType: "address" },
            { name: "amount", type: "uint160", internalType: "uint160" },
            { name: "expiration", type: "uint48", internalType: "uint48" },
        ],
        outputs: [],
        stateMutability: "nonpayable",
    },
    {
        type: "function",
        name: "invalidateNonces",
        inputs: [
            { name: "token", type: "address", internalType: "address" },
            { name: "spender", type: "address", internalType: "address" },
            { name: "newNonce", type: "uint48", internalType: "uint48" },
        ],
        outputs: [],
        stateMutability: "nonpayable",
    },
    {
        type: "function",
        name: "lockdown",
        inputs: [
            {
                name: "approvals",
                type: "tuple[]",
                internalType: "struct IAllowanceTransfer.TokenSpenderPair[]",
                components: [
                    { name: "token", type: "address", internalType: "address" },
                    { name: "spender", type: "address", internalType: "address" },
                ],
            },
        ],
        outputs: [],
        stateMutability: "nonpayable",
    },
    {
        type: "function",
        name: "permit",
        inputs: [
            { name: "owner", type: "address", internalType: "address" },
            {
                name: "permitBatch",
                type: "tuple",
                internalType: "struct IAllowanceTransfer.PermitBatch",
                components: [
                    {
                        name: "details",
                        type: "tuple[]",
                        internalType: "struct IAllowanceTransfer.PermitDetails[]",
                        components: [
                            { name: "token", type: "address", internalType: "address" },
                            { name: "amount", type: "uint160", internalType: "uint160" },
                            { name: "expiration", type: "uint48", internalType: "uint48" },
                            { name: "nonce", type: "uint48", internalType: "uint48" },
                        ],
                    },
                    { name: "spender", type: "address", internalType: "address" },
                    { name: "sigDeadline", type: "uint256", internalType: "uint256" },
                ],
            },
            { name: "signature", type: "bytes", internalType: "bytes" },
        ],
        outputs: [],
        stateMutability: "nonpayable",
    },
    {
        type: "function",
        name: "permit",
        inputs: [
            { name: "owner", type: "address", internalType: "address" },
            {
                name: "permitSingle",
                type: "tuple",
                internalType: "struct IAllowanceTransfer.PermitSingle",
                components: [
                    {
                        name: "details",
                        type: "tuple",
                        internalType: "struct IAllowanceTransfer.PermitDetails",
                        components: [
                            { name: "token", type: "address", internalType: "address" },
                            { name: "amount", type: "uint160", internalType: "uint160" },
                            { name: "expiration", type: "uint48", internalType: "uint48" },
                            { name: "nonce", type: "uint48", internalType: "uint48" },
                        ],
                    },
                    { name: "spender", type: "address", internalType: "address" },
                    { name: "sigDeadline", type: "uint256", internalType: "uint256" },
                ],
            },
            { name: "signature", type: "bytes", internalType: "bytes" },
        ],
        outputs: [],
        stateMutability: "nonpayable",
    },
    {
        type: "function",
        name: "transferFrom",
        inputs: [
            {
                name: "transferDetails",
                type: "tuple[]",
                internalType: "struct IAllowanceTransfer.AllowanceTransferDetails[]",
                components: [
                    { name: "from", type: "address", internalType: "address" },
                    { name: "to", type: "address", internalType: "address" },
                    { name: "amount", type: "uint160", internalType: "uint160" },
                    { name: "token", type: "address", internalType: "address" },
                ],
            },
        ],
        outputs: [],
        stateMutability: "nonpayable",
    },
    {
        type: "function",
        name: "transferFrom",
        inputs: [
            { name: "from", type: "address", internalType: "address" },
            { name: "to", type: "address", internalType: "address" },
            { name: "amount", type: "uint160", internalType: "uint160" },
            { name: "token", type: "address", internalType: "address" },
        ],
        outputs: [],
        stateMutability: "nonpayable",
    },
    {
        type: "function",
        name: "invalidateUnorderedNonces",
        inputs: [
            { name: "wordPos", type: "uint256", internalType: "uint256" },
            { name: "mask", type: "uint256", internalType: "uint256" },
        ],
        outputs: [],
        stateMutability: "nonpayable",
    },
    {
        type: "function",
        name: "nonceBitmap",
        inputs: [
            { name: "", type: "address", internalType: "address" },
            { name: "", type: "uint256", internalType: "uint256" },
        ],
        outputs: [{ name: "", type: "uint256", internalType: "uint256" }],
        stateMutability: "view",
    },
    {
        type: "function",
        name: "permitTransferFrom",
        inputs: [
            {
                name: "permit",
                type: "tuple",
                internalType: "struct ISignatureTransfer.PermitTransferFrom",
                components: [
                    {
                        name: "permitted",
                        type: "tuple",
                        internalType: "struct ISignatureTransfer.TokenPermissions",
                        components: [
                            { name: "token", type: "address", internalType: "address" },
                            { name: "amount", type: "uint256", internalType: "uint256" },
                        ],
                    },
                    { name: "nonce", type: "uint256", internalType: "uint256" },
                    { name: "deadline", type: "uint256", internalType: "uint256" },
                ],
            },
            {
                name: "transferDetails",
                type: "tuple",
                internalType: "struct ISignatureTransfer.SignatureTransferDetails",
                components: [
                    { name: "to", type: "address", internalType: "address" },
                    { name: "requestedAmount", type: "uint256", internalType: "uint256" },
                ],
            },
            { name: "owner", type: "address", internalType: "address" },
            { name: "signature", type: "bytes", internalType: "bytes" },
        ],
        outputs: [],
        stateMutability: "nonpayable",
    },
    {
        type: "function",
        name: "permitTransferFrom",
        inputs: [
            {
                name: "permit",
                type: "tuple",
                internalType: "struct ISignatureTransfer.PermitBatchTransferFrom",
                components: [
                    {
                        name: "permitted",
                        type: "tuple[]",
                        internalType: "struct ISignatureTransfer.TokenPermissions[]",
                        components: [
                            { name: "token", type: "address", internalType: "address" },
                            { name: "amount", type: "uint256", internalType: "uint256" },
                        ],
                    },
                    { name: "nonce", type: "uint256", internalType: "uint256" },
                    { name: "deadline", type: "uint256", internalType: "uint256" },
                ],
            },
            {
                name: "transferDetails",
                type: "tuple[]",
                internalType: "struct ISignatureTransfer.SignatureTransferDetails[]",
                components: [
                    { name: "to", type: "address", internalType: "address" },
                    { name: "requestedAmount", type: "uint256", internalType: "uint256" },
                ],
            },
            { name: "owner", type: "address", internalType: "address" },
            { name: "signature", type: "bytes", internalType: "bytes" },
        ],
        outputs: [],
        stateMutability: "nonpayable",
    },
    {
        type: "function",
        name: "permitWitnessTransferFrom",
        inputs: [
            {
                name: "permit",
                type: "tuple",
                internalType: "struct ISignatureTransfer.PermitTransferFrom",
                components: [
                    {
                        name: "permitted",
                        type: "tuple",
                        internalType: "struct ISignatureTransfer.TokenPermissions",
                        components: [
                            { name: "token", type: "address", internalType: "address" },
                            { name: "amount", type: "uint256", internalType: "uint256" },
                        ],
                    },
                    { name: "nonce", type: "uint256", internalType: "uint256" },
                    { name: "deadline", type: "uint256", internalType: "uint256" },
                ],
            },
            {
                name: "transferDetails",
                type: "tuple",
                internalType: "struct ISignatureTransfer.SignatureTransferDetails",
                components: [
                    { name: "to", type: "address", internalType: "address" },
                    { name: "requestedAmount", type: "uint256", internalType: "uint256" },
                ],
            },
            { name: "owner", type: "address", internalType: "address" },
            { name: "witness", type: "bytes32", internalType: "bytes32" },
            { name: "witnessTypeString", type: "string", internalType: "string" },
            { name: "signature", type: "bytes", internalType: "bytes" },
        ],
        outputs: [],
        stateMutability: "nonpayable",
    },
    {
        type: "function",
        name: "permitWitnessTransferFrom",
        inputs: [
            {
                name: "permit",
                type: "tuple",
                internalType: "struct ISignatureTransfer.PermitBatchTransferFrom",
                components: [
                    {
                        name: "permitted",
                        type: "tuple[]",
                        internalType: "struct ISignatureTransfer.TokenPermissions[]",
                        components: [
                            { name: "token", type: "address", internalType: "address" },
                            { name: "amount", type: "uint256", internalType: "uint256" },
                        ],
                    },
                    { name: "nonce", type: "uint256", internalType: "uint256" },
                    { name: "deadline", type: "uint256", internalType: "uint256" },
                ],
            },
            {
                name: "transferDetails",
                type: "tuple[]",
                internalType: "struct ISignatureTransfer.SignatureTransferDetails[]",
                components: [
                    { name: "to", type: "address", internalType: "address" },
                    { name: "requestedAmount", type: "uint256", internalType: "uint256" },
                ],
            },
            { name: "owner", type: "address", internalType: "address" },
            { name: "witness", type: "bytes32", internalType: "bytes32" },
            { name: "witnessTypeString", type: "string", internalType: "string" },
            { name: "signature", type: "bytes", internalType: "bytes" },
        ],
        outputs: [],
        stateMutability: "nonpayable",
    },
    { type: "function", name: "deposit", inputs: [], outputs: [], stateMutability: "payable" },
    {
        type: "function",
        name: "withdraw",
        inputs: [{ name: "", type: "uint256", internalType: "uint256" }],
        outputs: [],
        stateMutability: "nonpayable",
    },
    {
        type: "function",
        name: "allPairs",
        inputs: [{ name: "", type: "uint256", internalType: "uint256" }],
        outputs: [{ name: "pair", type: "address", internalType: "address" }],
        stateMutability: "view",
    },
    {
        type: "function",
        name: "allPairsLength",
        inputs: [],
        outputs: [{ name: "", type: "uint256", internalType: "uint256" }],
        stateMutability: "view",
    },
    {
        type: "function",
        name: "createPair",
        inputs: [
            { name: "tokenA", type: "address", internalType: "address" },
            { name: "tokenB", type: "address", internalType: "address" },
        ],
        outputs: [{ name: "pair", type: "address", internalType: "address" }],
        stateMutability: "nonpayable",
    },
    {
        type: "function",
        name: "feeTo",
        inputs: [],
        outputs: [{ name: "", type: "address", internalType: "address" }],
        stateMutability: "view",
    },
    {
        type: "function",
        name: "feeToSetter",
        inputs: [],
        outputs: [{ name: "", type: "address", internalType: "address" }],
        stateMutability: "view",
    },
    {
        type: "function",
        name: "getPair",
        inputs: [
            { name: "tokenA", type: "address", internalType: "address" },
            { name: "tokenB", type: "address", internalType: "address" },
        ],
        outputs: [{ name: "pair", type: "address", internalType: "address" }],
        stateMutability: "view",
    },
    {
        type: "function",
        name: "setFeeTo",
        inputs: [{ name: "", type: "address", internalType: "address" }],
        outputs: [],
        stateMutability: "nonpayable",
    },
    {
        type: "function",
        name: "setFeeToSetter",
        inputs: [{ name: "", type: "address", internalType: "address" }],
        outputs: [],
        stateMutability: "nonpayable",
    },
    {
        type: "function",
        name: "MINIMUM_LIQUIDITY",
        inputs: [],
        outputs: [{ name: "", type: "uint256", internalType: "uint256" }],
        stateMutability: "pure",
    },
    {
        type: "function",
        name: "PERMIT_TYPEHASH",
        inputs: [],
        outputs: [{ name: "", type: "bytes32", internalType: "bytes32" }],
        stateMutability: "pure",
    },
    {
        type: "function",
        name: "burn",
        inputs: [{ name: "to", type: "address", internalType: "address" }],
        outputs: [
            { name: "amount0", type: "uint256", internalType: "uint256" },
            { name: "amount1", type: "uint256", internalType: "uint256" },
        ],
        stateMutability: "nonpayable",
    },
    {
        type: "function",
        name: "factory",
        inputs: [],
        outputs: [{ name: "", type: "address", internalType: "address" }],
        stateMutability: "view",
    },
    {
        type: "function",
        name: "getReserves",
        inputs: [],
        outputs: [
            { name: "reserve0", type: "uint112", internalType: "uint112" },
            { name: "reserve1", type: "uint112", internalType: "uint112" },
            { name: "blockTimestampLast", type: "uint32", internalType: "uint32" },
        ],
        stateMutability: "view",
    },
    {
        type: "function",
        name: "initialize",
        inputs: [
            { name: "", type: "address", internalType: "address" },
            { name: "", type: "address", internalType: "address" },
        ],
        outputs: [],
        stateMutability: "nonpayable",
    },
    {
        type: "function",
        name: "kLast",
        inputs: [],
        outputs: [{ name: "", type: "uint256", internalType: "uint256" }],
        stateMutability: "view",
    },
    {
        type: "function",
        name: "mint",
        inputs: [{ name: "to", type: "address", internalType: "address" }],
        outputs: [{ name: "liquidity", type: "uint256", internalType: "uint256" }],
        stateMutability: "nonpayable",
    },
    {
        type: "function",
        name: "price0CumulativeLast",
        inputs: [],
        outputs: [{ name: "", type: "uint256", internalType: "uint256" }],
        stateMutability: "view",
    },
    {
        type: "function",
        name: "price1CumulativeLast",
        inputs: [],
        outputs: [{ name: "", type: "uint256", internalType: "uint256" }],
        stateMutability: "view",
    },
    {
        type: "function",
        name: "skim",
        inputs: [{ name: "to", type: "address", internalType: "address" }],
        outputs: [],
        stateMutability: "nonpayable",
    },
    {
        type: "function",
        name: "swap",
        inputs: [
            { name: "amount0Out", type: "uint256", internalType: "uint256" },
            { name: "amount1Out", type: "uint256", internalType: "uint256" },
            { name: "to", type: "address", internalType: "address" },
            { name: "data", type: "bytes", internalType: "bytes" },
        ],
        outputs: [],
        stateMutability: "nonpayable",
    },
    { type: "function", name: "sync", inputs: [], outputs: [], stateMutability: "nonpayable" },
    {
        type: "function",
        name: "token0",
        inputs: [],
        outputs: [{ name: "", type: "address", internalType: "address" }],
        stateMutability: "view",
    },
    {
        type: "function",
        name: "token1",
        inputs: [],
        outputs: [{ name: "", type: "address", internalType: "address" }],
        stateMutability: "view",
    },
    {
        type: "function",
        name: "createPool",
        inputs: [
            { name: "tokenA", type: "address", internalType: "address" },
            { name: "tokenB", type: "address", internalType: "address" },
            { name: "fee", type: "uint24", internalType: "uint24" },
        ],
        outputs: [{ name: "pool", type: "address", internalType: "address" }],
        stateMutability: "nonpayable",
    },
    {
        type: "function",
        name: "enableFeeAmount",
        inputs: [
            { name: "fee", type: "uint24", internalType: "uint24" },
            { name: "tickSpacing", type: "int24", internalType: "int24" },
        ],
        outputs: [],
        stateMutability: "nonpayable",
    },
    {
        type: "function",
        name: "feeAmountTickSpacing",
        inputs: [{ name: "fee", type: "uint24", internalType: "uint24" }],
        outputs: [{ name: "", type: "int24", internalType: "int24" }],
        stateMutability: "view",
    },
    {
        type: "function",
        name: "getPool",
        inputs: [
            { name: "tokenA", type: "address", internalType: "address" },
            { name: "tokenB", type: "address", internalType: "address" },
            { name: "fee", type: "uint24", internalType: "uint24" },
        ],
        outputs: [{ name: "pool", type: "address", internalType: "address" }],
        stateMutability: "view",
    },
    {
        type: "function",
        name: "owner",
        inputs: [],
        outputs: [{ name: "", type: "address", internalType: "address" }],
        stateMutability: "view",
    },
    {
        type: "function",
        name: "setOwner",
        inputs: [{ name: "_owner", type: "address", internalType: "address" }],
        outputs: [],
        stateMutability: "nonpayable",
    },
    {
        type: "function",
        name: "parameters",
        inputs: [],
        outputs: [
            { name: "factory", type: "address", internalType: "address" },
            { name: "token0", type: "address", internalType: "address" },
            { name: "token1", type: "address", internalType: "address" },
            { name: "fee", type: "uint24", internalType: "uint24" },
            { name: "tickSpacing", type: "int24", internalType: "int24" },
        ],
        stateMutability: "view",
    },
    {
        type: "function",
        name: "burn",
        inputs: [
            { name: "tickLower", type: "int24", internalType: "int24" },
            { name: "tickUpper", type: "int24", internalType: "int24" },
            { name: "amount", type: "uint128", internalType: "uint128" },
        ],
        outputs: [
            { name: "amount0", type: "uint256", internalType: "uint256" },
            { name: "amount1", type: "uint256", internalType: "uint256" },
        ],
        stateMutability: "nonpayable",
    },
    {
        type: "function",
        name: "collect",
        inputs: [
            { name: "recipient", type: "address", internalType: "address" },
            { name: "tickLower", type: "int24", internalType: "int24" },
            { name: "tickUpper", type: "int24", internalType: "int24" },
            { name: "amount0Requested", type: "uint128", internalType: "uint128" },
            { name: "amount1Requested", type: "uint128", internalType: "uint128" },
        ],
        outputs: [
            { name: "amount0", type: "uint128", internalType: "uint128" },
            { name: "amount1", type: "uint128", internalType: "uint128" },
        ],
        stateMutability: "nonpayable",
    },
    {
        type: "function",
        name: "collectProtocol",
        inputs: [
            { name: "recipient", type: "address", internalType: "address" },
            { name: "amount0Requested", type: "uint128", internalType: "uint128" },
            { name: "amount1Requested", type: "uint128", internalType: "uint128" },
        ],
        outputs: [
            { name: "amount0", type: "uint128", internalType: "uint128" },
            { name: "amount1", type: "uint128", internalType: "uint128" },
        ],
        stateMutability: "nonpayable",
    },
    {
        type: "function",
        name: "fee",
        inputs: [],
        outputs: [{ name: "", type: "uint24", internalType: "uint24" }],
        stateMutability: "view",
    },
    {
        type: "function",
        name: "feeGrowthGlobal0X128",
        inputs: [],
        outputs: [{ name: "", type: "uint256", internalType: "uint256" }],
        stateMutability: "view",
    },
    {
        type: "function",
        name: "feeGrowthGlobal1X128",
        inputs: [],
        outputs: [{ name: "", type: "uint256", internalType: "uint256" }],
        stateMutability: "view",
    },
    {
        type: "function",
        name: "flash",
        inputs: [
            { name: "recipient", type: "address", internalType: "address" },
            { name: "amount0", type: "uint256", internalType: "uint256" },
            { name: "amount1", type: "uint256", internalType: "uint256" },
            { name: "data", type: "bytes", internalType: "bytes" },
        ],
        outputs: [],
        stateMutability: "nonpayable",
    },
    {
        type: "function",
        name: "increaseObservationCardinalityNext",
        inputs: [{ name: "observationCardinalityNext", type: "uint16", internalType: "uint16" }],
        outputs: [],
        stateMutability: "nonpayable",
    },
    {
        type: "function",
        name: "initialize",
        inputs: [{ name: "sqrtPriceX96", type: "uint160", internalType: "uint160" }],
        outputs: [],
        stateMutability: "nonpayable",
    },
    {
        type: "function",
        name: "liquidity",
        inputs: [],
        outputs: [{ name: "", type: "uint128", internalType: "uint128" }],
        stateMutability: "view",
    },
    {
        type: "function",
        name: "maxLiquidityPerTick",
        inputs: [],
        outputs: [{ name: "", type: "uint128", internalType: "uint128" }],
        stateMutability: "view",
    },
    {
        type: "function",
        name: "mint",
        inputs: [
            { name: "recipient", type: "address", internalType: "address" },
            { name: "tickLower", type: "int24", internalType: "int24" },
            { name: "tickUpper", type: "int24", internalType: "int24" },
            { name: "amount", type: "uint128", internalType: "uint128" },
            { name: "data", type: "bytes", internalType: "bytes" },
        ],
        outputs: [
            { name: "amount0", type: "uint256", internalType: "uint256" },
            { name: "amount1", type: "uint256", internalType: "uint256" },
        ],
        stateMutability: "nonpayable",
    },
    {
        type: "function",
        name: "observations",
        inputs: [{ name: "index", type: "uint256", internalType: "uint256" }],
        outputs: [
            { name: "blockTimestamp", type: "uint32", internalType: "uint32" },
            { name: "tickCumulative", type: "int56", internalType: "int56" },
            { name: "secondsPerLiquidityCumulativeX128", type: "uint160", internalType: "uint160" },
            { name: "initialized", type: "bool", internalType: "bool" },
        ],
        stateMutability: "view",
    },
    {
        type: "function",
        name: "observe",
        inputs: [{ name: "secondsAgos", type: "uint32[]", internalType: "uint32[]" }],
        outputs: [
            { name: "tickCumulatives", type: "int56[]", internalType: "int56[]" },
            { name: "secondsPerLiquidityCumulativeX128s", type: "uint160[]", internalType: "uint160[]" },
        ],
        stateMutability: "view",
    },
    {
        type: "function",
        name: "positions",
        inputs: [{ name: "key", type: "bytes32", internalType: "bytes32" }],
        outputs: [
            { name: "_liquidity", type: "uint128", internalType: "uint128" },
            { name: "feeGrowthInside0LastX128", type: "uint256", internalType: "uint256" },
            { name: "feeGrowthInside1LastX128", type: "uint256", internalType: "uint256" },
            { name: "tokensOwed0", type: "uint128", internalType: "uint128" },
            { name: "tokensOwed1", type: "uint128", internalType: "uint128" },
        ],
        stateMutability: "view",
    },
    {
        type: "function",
        name: "protocolFees",
        inputs: [],
        outputs: [
            { name: "token0", type: "uint128", internalType: "uint128" },
            { name: "token1", type: "uint128", internalType: "uint128" },
        ],
        stateMutability: "view",
    },
    {
        type: "function",
        name: "setFeeProtocol",
        inputs: [
            { name: "feeProtocol0", type: "uint8", internalType: "uint8" },
            { name: "feeProtocol1", type: "uint8", internalType: "uint8" },
        ],
        outputs: [],
        stateMutability: "nonpayable",
    },
    {
        type: "function",
        name: "slot0",
        inputs: [],
        outputs: [
            { name: "sqrtPriceX96", type: "uint160", internalType: "uint160" },
            { name: "tick", type: "int24", internalType: "int24" },
            { name: "observationIndex", type: "uint16", internalType: "uint16" },
            { name: "observationCardinality", type: "uint16", internalType: "uint16" },
            { name: "observationCardinalityNext", type: "uint16", internalType: "uint16" },
            { name: "feeProtocol", type: "uint8", internalType: "uint8" },
            { name: "unlocked", type: "bool", internalType: "bool" },
        ],
        stateMutability: "view",
    },
    {
        type: "function",
        name: "snapshotCumulativesInside",
        inputs: [
            { name: "tickLower", type: "int24", internalType: "int24" },
            { name: "tickUpper", type: "int24", internalType: "int24" },
        ],
        outputs: [
            { name: "tickCumulativeInside", type: "int56", internalType: "int56" },
            { name: "secondsPerLiquidityInsideX128", type: "uint160", internalType: "uint160" },
            { name: "secondsInside", type: "uint32", internalType: "uint32" },
        ],
        stateMutability: "view",
    },
    {
        type: "function",
        name: "swap",
        inputs: [
            { name: "recipient", type: "address", internalType: "address" },
            { name: "zeroForOne", type: "bool", internalType: "bool" },
            { name: "amountSpecified", type: "int256", internalType: "int256" },
            { name: "sqrtPriceLimitX96", type: "uint160", internalType: "uint160" },
            { name: "data", type: "bytes", internalType: "bytes" },
        ],
        outputs: [
            { name: "amount0", type: "int256", internalType: "int256" },
            { name: "amount1", type: "int256", internalType: "int256" },
        ],
        stateMutability: "nonpayable",
    },
    {
        type: "function",
        name: "tickBitmap",
        inputs: [{ name: "wordPosition", type: "int16", internalType: "int16" }],
        outputs: [{ name: "", type: "uint256", internalType: "uint256" }],
        stateMutability: "view",
    },
    {
        type: "function",
        name: "tickSpacing",
        inputs: [],
        outputs: [{ name: "", type: "int24", internalType: "int24" }],
        stateMutability: "view",
    },
    {
        type: "function",
        name: "ticks",
        inputs: [{ name: "tick", type: "int24", internalType: "int24" }],
        outputs: [
            { name: "liquidityGross", type: "uint128", internalType: "uint128" },
            { name: "liquidityNet", type: "int128", internalType: "int128" },
            { name: "feeGrowthOutside0X128", type: "uint256", internalType: "uint256" },
            { name: "feeGrowthOutside1X128", type: "uint256", internalType: "uint256" },
            { name: "tickCumulativeOutside", type: "int56", internalType: "int56" },
            { name: "secondsPerLiquidityOutsideX128", type: "uint160", internalType: "uint160" },
            { name: "secondsOutside", type: "uint32", internalType: "uint32" },
            { name: "initialized", type: "bool", internalType: "bool" },
        ],
        stateMutability: "view",
    },
    {
        type: "function",
        name: "getPoolAndPositionInfo",
        inputs: [{ name: "tokenId", type: "uint256", internalType: "uint256" }],
        outputs: [
            {
                name: "",
                type: "tuple",
                internalType: "struct PoolKey",
                components: [
                    { name: "currency0", type: "address", internalType: "Currency" },
                    { name: "currency1", type: "address", internalType: "Currency" },
                    { name: "fee", type: "uint24", internalType: "uint24" },
                    { name: "tickSpacing", type: "int24", internalType: "int24" },
                    { name: "hooks", type: "address", internalType: "contract IHooks" },
                ],
            },
            { name: "", type: "uint256", internalType: "PositionInfo" },
        ],
        stateMutability: "view",
    },
    {
        type: "function",
        name: "getPositionLiquidity",
        inputs: [{ name: "tokenId", type: "uint256", internalType: "uint256" }],
        outputs: [{ name: "liquidity", type: "uint128", internalType: "uint128" }],
        stateMutability: "view",
    },
    {
        type: "function",
        name: "initializePool",
        inputs: [
            {
                name: "key",
                type: "tuple",
                internalType: "struct PoolKey",
                components: [
                    { name: "currency0", type: "address", internalType: "Currency" },
                    { name: "currency1", type: "address", internalType: "Currency" },
                    { name: "fee", type: "uint24", internalType: "uint24" },
                    { name: "tickSpacing", type: "int24", internalType: "int24" },
                    { name: "hooks", type: "address", internalType: "contract IHooks" },
                ],
            },
            { name: "sqrtPriceX96", type: "uint160", internalType: "uint160" },
        ],
        outputs: [{ name: "", type: "int24", internalType: "int24" }],
        stateMutability: "payable",
    },
    {
        type: "function",
        name: "modifyLiquidities",
        inputs: [
            { name: "unlockData", type: "bytes", internalType: "bytes" },
            { name: "deadline", type: "uint256", internalType: "uint256" },
        ],
        outputs: [],
        stateMutability: "payable",
    },
    {
        type: "function",
        name: "modifyLiquiditiesWithoutUnlock",
        inputs: [
            { name: "actions", type: "bytes", internalType: "bytes" },
            { name: "params", type: "bytes[]", internalType: "bytes[]" },
        ],
        outputs: [],
        stateMutability: "payable",
    },
    {
        type: "function",
        name: "nextTokenId",
        inputs: [],
        outputs: [{ name: "", type: "uint256", internalType: "uint256" }],
        stateMutability: "view",
    },
    {
        type: "function",
        name: "nonces",
        inputs: [
            { name: "owner", type: "address", internalType: "address" },
            { name: "word", type: "uint256", internalType: "uint256" },
        ],
        outputs: [{ name: "", type: "uint256", internalType: "uint256" }],
        stateMutability: "view",
    },
    {
        type: "function",
        name: "permit",
        inputs: [
            { name: "spender", type: "address", internalType: "address" },
            { name: "tokenId", type: "uint256", internalType: "uint256" },
            { name: "deadline", type: "uint256", internalType: "uint256" },
            { name: "nonce", type: "uint256", internalType: "uint256" },
            { name: "signature", type: "bytes", internalType: "bytes" },
        ],
        outputs: [],
        stateMutability: "payable",
    },
    {
        type: "function",
        name: "permitBatch",
        inputs: [
            { name: "owner", type: "address", internalType: "address" },
            {
                name: "_permitBatch",
                type: "tuple",
                internalType: "struct IAllowanceTransfer.PermitBatch",
                components: [
                    {
                        name: "details",
                        type: "tuple[]",
                        internalType: "struct IAllowanceTransfer.PermitDetails[]",
                        components: [
                            { name: "token", type: "address", internalType: "address" },
                            { name: "amount", type: "uint160", internalType: "uint160" },
                            { name: "expiration", type: "uint48", internalType: "uint48" },
                            { name: "nonce", type: "uint48", internalType: "uint48" },
                        ],
                    },
                    { name: "spender", type: "address", internalType: "address" },
                    { name: "sigDeadline", type: "uint256", internalType: "uint256" },
                ],
            },
            { name: "signature", type: "bytes", internalType: "bytes" },
        ],
        outputs: [{ name: "err", type: "bytes", internalType: "bytes" }],
        stateMutability: "payable",
    },
    {
        type: "function",
        name: "permitForAll",
        inputs: [
            { name: "owner", type: "address", internalType: "address" },
            { name: "operator", type: "address", internalType: "address" },
            { name: "approved", type: "bool", internalType: "bool" },
            { name: "deadline", type: "uint256", internalType: "uint256" },
            { name: "nonce", type: "uint256", internalType: "uint256" },
            { name: "signature", type: "bytes", internalType: "bytes" },
        ],
        outputs: [],
        stateMutability: "payable",
    },
    {
        type: "function",
        name: "poolManager",
        inputs: [],
        outputs: [{ name: "", type: "address", internalType: "contract IPoolManager" }],
        stateMutability: "view",
    },
    {
        type: "function",
        name: "positionInfo",
        inputs: [{ name: "tokenId", type: "uint256", internalType: "uint256" }],
        outputs: [{ name: "", type: "uint256", internalType: "PositionInfo" }],
        stateMutability: "view",
    },
    {
        type: "function",
        name: "revokeNonce",
        inputs: [{ name: "nonce", type: "uint256", internalType: "uint256" }],
        outputs: [],
        stateMutability: "payable",
    },
    {
        type: "function",
        name: "subscribe",
        inputs: [
            { name: "tokenId", type: "uint256", internalType: "uint256" },
            { name: "newSubscriber", type: "address", internalType: "address" },
            { name: "data", type: "bytes", internalType: "bytes" },
        ],
        outputs: [],
        stateMutability: "payable",
    },
    {
        type: "function",
        name: "subscriber",
        inputs: [{ name: "tokenId", type: "uint256", internalType: "uint256" }],
        outputs: [{ name: "subscriber", type: "address", internalType: "contract ISubscriber" }],
        stateMutability: "view",
    },
    {
        type: "function",
        name: "unsubscribe",
        inputs: [{ name: "tokenId", type: "uint256", internalType: "uint256" }],
        outputs: [],
        stateMutability: "payable",
    },
    {
        type: "function",
        name: "unsubscribeGasLimit",
        inputs: [],
        outputs: [{ name: "", type: "uint256", internalType: "uint256" }],
        stateMutability: "view",
    },
    {
        type: "function",
        name: "allowance",
        inputs: [
            { name: "owner", type: "address", internalType: "address" },
            { name: "spender", type: "address", internalType: "address" },
            { name: "id", type: "uint256", internalType: "uint256" },
        ],
        outputs: [{ name: "amount", type: "uint256", internalType: "uint256" }],
        stateMutability: "view",
    },
    {
        type: "function",
        name: "approve",
        inputs: [
            { name: "spender", type: "address", internalType: "address" },
            { name: "id", type: "uint256", internalType: "uint256" },
            { name: "amount", type: "uint256", internalType: "uint256" },
        ],
        outputs: [{ name: "", type: "bool", internalType: "bool" }],
        stateMutability: "nonpayable",
    },
    {
        type: "function",
        name: "balanceOf",
        inputs: [
            { name: "owner", type: "address", internalType: "address" },
            { name: "id", type: "uint256", internalType: "uint256" },
        ],
        outputs: [{ name: "amount", type: "uint256", internalType: "uint256" }],
        stateMutability: "view",
    },
    {
        type: "function",
        name: "burn",
        inputs: [
            { name: "from", type: "address", internalType: "address" },
            { name: "id", type: "uint256", internalType: "uint256" },
            { name: "amount", type: "uint256", internalType: "uint256" },
        ],
        outputs: [],
        stateMutability: "nonpayable",
    },
    {
        type: "function",
        name: "clear",
        inputs: [
            { name: "currency", type: "address", internalType: "Currency" },
            { name: "amount", type: "uint256", internalType: "uint256" },
        ],
        outputs: [],
        stateMutability: "nonpayable",
    },
    {
        type: "function",
        name: "collectProtocolFees",
        inputs: [
            { name: "recipient", type: "address", internalType: "address" },
            { name: "currency", type: "address", internalType: "Currency" },
            { name: "amount", type: "uint256", internalType: "uint256" },
        ],
        outputs: [{ name: "amountCollected", type: "uint256", internalType: "uint256" }],
        stateMutability: "nonpayable",
    },
    {
        type: "function",
        name: "donate",
        inputs: [
            {
                name: "key",
                type: "tuple",
                internalType: "struct PoolKey",
                components: [
                    { name: "currency0", type: "address", internalType: "Currency" },
                    { name: "currency1", type: "address", internalType: "Currency" },
                    { name: "fee", type: "uint24", internalType: "uint24" },
                    { name: "tickSpacing", type: "int24", internalType: "int24" },
                    { name: "hooks", type: "address", internalType: "contract IHooks" },
                ],
            },
            { name: "amount0", type: "uint256", internalType: "uint256" },
            { name: "amount1", type: "uint256", internalType: "uint256" },
            { name: "hookData", type: "bytes", internalType: "bytes" },
        ],
        outputs: [{ name: "", type: "int256", internalType: "BalanceDelta" }],
        stateMutability: "nonpayable",
    },
    {
        type: "function",
        name: "extsload",
        inputs: [{ name: "slot", type: "bytes32", internalType: "bytes32" }],
        outputs: [{ name: "value", type: "bytes32", internalType: "bytes32" }],
        stateMutability: "view",
    },
    {
        type: "function",
        name: "extsload",
        inputs: [
            { name: "startSlot", type: "bytes32", internalType: "bytes32" },
            { name: "nSlots", type: "uint256", internalType: "uint256" },
        ],
        outputs: [{ name: "values", type: "bytes32[]", internalType: "bytes32[]" }],
        stateMutability: "view",
    },
    {
        type: "function",
        name: "extsload",
        inputs: [{ name: "slots", type: "bytes32[]", internalType: "bytes32[]" }],
        outputs: [{ name: "values", type: "bytes32[]", internalType: "bytes32[]" }],
        stateMutability: "view",
    },
    {
        type: "function",
        name: "exttload",
        inputs: [{ name: "slots", type: "bytes32[]", internalType: "bytes32[]" }],
        outputs: [{ name: "values", type: "bytes32[]", internalType: "bytes32[]" }],
        stateMutability: "view",
    },
    {
        type: "function",
        name: "exttload",
        inputs: [{ name: "slot", type: "bytes32", internalType: "bytes32" }],
        outputs: [{ name: "value", type: "bytes32", internalType: "bytes32" }],
        stateMutability: "view",
    },
    {
        type: "function",
        name: "initialize",
        inputs: [
            {
                name: "key",
                type: "tuple",
                internalType: "struct PoolKey",
                components: [
                    { name: "currency0", type: "address", internalType: "Currency" },
                    { name: "currency1", type: "address", internalType: "Currency" },
                    { name: "fee", type: "uint24", internalType: "uint24" },
                    { name: "tickSpacing", type: "int24", internalType: "int24" },
                    { name: "hooks", type: "address", internalType: "contract IHooks" },
                ],
            },
            { name: "sqrtPriceX96", type: "uint160", internalType: "uint160" },
        ],
        outputs: [{ name: "tick", type: "int24", internalType: "int24" }],
        stateMutability: "nonpayable",
    },
    {
        type: "function",
        name: "isOperator",
        inputs: [
            { name: "owner", type: "address", internalType: "address" },
            { name: "spender", type: "address", internalType: "address" },
        ],
        outputs: [{ name: "approved", type: "bool", internalType: "bool" }],
        stateMutability: "view",
    },
    {
        type: "function",
        name: "mint",
        inputs: [
            { name: "to", type: "address", internalType: "address" },
            { name: "id", type: "uint256", internalType: "uint256" },
            { name: "amount", type: "uint256", internalType: "uint256" },
        ],
        outputs: [],
        stateMutability: "nonpayable",
    },
    {
        type: "function",
        name: "modifyLiquidity",
        inputs: [
            {
                name: "key",
                type: "tuple",
                internalType: "struct PoolKey",
                components: [
                    { name: "currency0", type: "address", internalType: "Currency" },
                    { name: "currency1", type: "address", internalType: "Currency" },
                    { name: "fee", type: "uint24", internalType: "uint24" },
                    { name: "tickSpacing", type: "int24", internalType: "int24" },
                    { name: "hooks", type: "address", internalType: "contract IHooks" },
                ],
            },
            {
                name: "params",
                type: "tuple",
                internalType: "struct IPoolManager.ModifyLiquidityParams",
                components: [
                    { name: "tickLower", type: "int24", internalType: "int24" },
                    { name: "tickUpper", type: "int24", internalType: "int24" },
                    { name: "liquidityDelta", type: "int256", internalType: "int256" },
                    { name: "salt", type: "bytes32", internalType: "bytes32" },
                ],
            },
            { name: "hookData", type: "bytes", internalType: "bytes" },
        ],
        outputs: [
            { name: "callerDelta", type: "int256", internalType: "BalanceDelta" },
            { name: "feesAccrued", type: "int256", internalType: "BalanceDelta" },
        ],
        stateMutability: "nonpayable",
    },
    {
        type: "function",
        name: "protocolFeeController",
        inputs: [],
        outputs: [{ name: "", type: "address", internalType: "address" }],
        stateMutability: "view",
    },
    {
        type: "function",
        name: "protocolFeesAccrued",
        inputs: [{ name: "currency", type: "address", internalType: "Currency" }],
        outputs: [{ name: "amount", type: "uint256", internalType: "uint256" }],
        stateMutability: "view",
    },
    {
        type: "function",
        name: "setOperator",
        inputs: [
            { name: "operator", type: "address", internalType: "address" },
            { name: "approved", type: "bool", internalType: "bool" },
        ],
        outputs: [{ name: "", type: "bool", internalType: "bool" }],
        stateMutability: "nonpayable",
    },
    {
        type: "function",
        name: "setProtocolFee",
        inputs: [
            {
                name: "key",
                type: "tuple",
                internalType: "struct PoolKey",
                components: [
                    { name: "currency0", type: "address", internalType: "Currency" },
                    { name: "currency1", type: "address", internalType: "Currency" },
                    { name: "fee", type: "uint24", internalType: "uint24" },
                    { name: "tickSpacing", type: "int24", internalType: "int24" },
                    { name: "hooks", type: "address", internalType: "contract IHooks" },
                ],
            },
            { name: "newProtocolFee", type: "uint24", internalType: "uint24" },
        ],
        outputs: [],
        stateMutability: "nonpayable",
    },
    {
        type: "function",
        name: "setProtocolFeeController",
        inputs: [{ name: "controller", type: "address", internalType: "address" }],
        outputs: [],
        stateMutability: "nonpayable",
    },
    {
        type: "function",
        name: "settle",
        inputs: [],
        outputs: [{ name: "paid", type: "uint256", internalType: "uint256" }],
        stateMutability: "payable",
    },
    {
        type: "function",
        name: "settleFor",
        inputs: [{ name: "recipient", type: "address", internalType: "address" }],
        outputs: [{ name: "paid", type: "uint256", internalType: "uint256" }],
        stateMutability: "payable",
    },
    {
        type: "function",
        name: "swap",
        inputs: [
            {
                name: "key",
                type: "tuple",
                internalType: "struct PoolKey",
                components: [
                    { name: "currency0", type: "address", internalType: "Currency" },
                    { name: "currency1", type: "address", internalType: "Currency" },
                    { name: "fee", type: "uint24", internalType: "uint24" },
                    { name: "tickSpacing", type: "int24", internalType: "int24" },
                    { name: "hooks", type: "address", internalType: "contract IHooks" },
                ],
            },
            {
                name: "params",
                type: "tuple",
                internalType: "struct IPoolManager.SwapParams",
                components: [
                    { name: "zeroForOne", type: "bool", internalType: "bool" },
                    { name: "amountSpecified", type: "int256", internalType: "int256" },
                    { name: "sqrtPriceLimitX96", type: "uint160", internalType: "uint160" },
                ],
            },
            { name: "hookData", type: "bytes", internalType: "bytes" },
        ],
        outputs: [{ name: "swapDelta", type: "int256", internalType: "BalanceDelta" }],
        stateMutability: "nonpayable",
    },
    {
        type: "function",
        name: "sync",
        inputs: [{ name: "currency", type: "address", internalType: "Currency" }],
        outputs: [],
        stateMutability: "nonpayable",
    },
    {
        type: "function",
        name: "take",
        inputs: [
            { name: "currency", type: "address", internalType: "Currency" },
            { name: "to", type: "address", internalType: "address" },
            { name: "amount", type: "uint256", internalType: "uint256" },
        ],
        outputs: [],
        stateMutability: "nonpayable",
    },
    {
        type: "function",
        name: "transfer",
        inputs: [
            { name: "receiver", type: "address", internalType: "address" },
            { name: "id", type: "uint256", internalType: "uint256" },
            { name: "amount", type: "uint256", internalType: "uint256" },
        ],
        outputs: [{ name: "", type: "bool", internalType: "bool" }],
        stateMutability: "nonpayable",
    },
    {
        type: "function",
        name: "transferFrom",
        inputs: [
            { name: "sender", type: "address", internalType: "address" },
            { name: "receiver", type: "address", internalType: "address" },
            { name: "id", type: "uint256", internalType: "uint256" },
            { name: "amount", type: "uint256", internalType: "uint256" },
        ],
        outputs: [{ name: "", type: "bool", internalType: "bool" }],
        stateMutability: "nonpayable",
    },
    {
        type: "function",
        name: "unlock",
        inputs: [{ name: "data", type: "bytes", internalType: "bytes" }],
        outputs: [{ name: "", type: "bytes", internalType: "bytes" }],
        stateMutability: "nonpayable",
    },
    {
        type: "function",
        name: "updateDynamicLPFee",
        inputs: [
            {
                name: "key",
                type: "tuple",
                internalType: "struct PoolKey",
                components: [
                    { name: "currency0", type: "address", internalType: "Currency" },
                    { name: "currency1", type: "address", internalType: "Currency" },
                    { name: "fee", type: "uint24", internalType: "uint24" },
                    { name: "tickSpacing", type: "int24", internalType: "int24" },
                    { name: "hooks", type: "address", internalType: "contract IHooks" },
                ],
            },
            { name: "newDynamicLPFee", type: "uint24", internalType: "uint24" },
        ],
        outputs: [],
        stateMutability: "nonpayable",
    },
    {
        type: "function",
        name: "supportsInterface",
        inputs: [{ name: "interfaceId", type: "bytes4", internalType: "bytes4" }],
        outputs: [{ name: "", type: "bool", internalType: "bool" }],
        stateMutability: "view",
    },
    {
        type: "function",
        name: "transferOwnership",
        inputs: [{ name: "newOwner", type: "address", internalType: "address" }],
        outputs: [],
        stateMutability: "nonpayable",
    },
    {
        type: "function",
        name: "WETH9",
        inputs: [],
        outputs: [{ name: "", type: "address", internalType: "contract IWETH9" }],
        stateMutability: "view",
    },
    {
        type: "function",
        name: "getApproved",
        inputs: [{ name: "", type: "uint256", internalType: "uint256" }],
        outputs: [{ name: "", type: "address", internalType: "address" }],
        stateMutability: "view",
    },
    {
        type: "function",
        name: "isApprovedForAll",
        inputs: [
            { name: "", type: "address", internalType: "address" },
            { name: "", type: "address", internalType: "address" },
        ],
        outputs: [{ name: "", type: "bool", internalType: "bool" }],
        stateMutability: "view",
    },
    {
        type: "function",
        name: "msgSender",
        inputs: [],
        outputs: [{ name: "", type: "address", internalType: "address" }],
        stateMutability: "view",
    },
    {
        type: "function",
        name: "ownerOf",
        inputs: [{ name: "id", type: "uint256", internalType: "uint256" }],
        outputs: [{ name: "owner", type: "address", internalType: "address" }],
        stateMutability: "view",
    },
    {
        type: "function",
        name: "permit2",
        inputs: [],
        outputs: [{ name: "", type: "address", internalType: "contract IAllowanceTransfer" }],
        stateMutability: "view",
    },
    {
        type: "function",
        name: "poolKeys",
        inputs: [{ name: "poolId", type: "bytes25", internalType: "bytes25" }],
        outputs: [
            { name: "currency0", type: "address", internalType: "Currency" },
            { name: "currency1", type: "address", internalType: "Currency" },
            { name: "fee", type: "uint24", internalType: "uint24" },
            { name: "tickSpacing", type: "int24", internalType: "int24" },
            { name: "hooks", type: "address", internalType: "contract IHooks" },
        ],
        stateMutability: "view",
    },
    {
        type: "function",
        name: "safeTransferFrom",
        inputs: [
            { name: "from", type: "address", internalType: "address" },
            { name: "to", type: "address", internalType: "address" },
            { name: "id", type: "uint256", internalType: "uint256" },
        ],
        outputs: [],
        stateMutability: "nonpayable",
    },
    {
        type: "function",
        name: "safeTransferFrom",
        inputs: [
            { name: "from", type: "address", internalType: "address" },
            { name: "to", type: "address", internalType: "address" },
            { name: "id", type: "uint256", internalType: "uint256" },
            { name: "data", type: "bytes", internalType: "bytes" },
        ],
        outputs: [],
        stateMutability: "nonpayable",
    },
    {
        type: "function",
        name: "setApprovalForAll",
        inputs: [
            { name: "operator", type: "address", internalType: "address" },
            { name: "approved", type: "bool", internalType: "bool" },
        ],
        outputs: [],
        stateMutability: "nonpayable",
    },
    {
        type: "function",
        name: "tokenDescriptor",
        inputs: [],
        outputs: [{ name: "", type: "address", internalType: "contract IPositionDescriptor" }],
        stateMutability: "view",
    },
    {
        type: "function",
        name: "tokenURI",
        inputs: [{ name: "tokenId", type: "uint256", internalType: "uint256" }],
        outputs: [{ name: "", type: "string", internalType: "string" }],
        stateMutability: "view",
    },
    {
        type: "function",
        name: "unlockCallback",
        inputs: [{ name: "data", type: "bytes", internalType: "bytes" }],
        outputs: [{ name: "", type: "bytes", internalType: "bytes" }],
        stateMutability: "nonpayable",
    },
    {
        type: "function",
        name: "quoteExactInput",
        inputs: [
            {
                name: "params",
                type: "tuple",
                internalType: "struct IV4Quoter.QuoteExactParams",
                components: [
                    { name: "exactCurrency", type: "address", internalType: "Currency" },
                    {
                        name: "path",
                        type: "tuple[]",
                        internalType: "struct PathKey[]",
                        components: [
                            { name: "intermediateCurrency", type: "address", internalType: "Currency" },
                            { name: "fee", type: "uint24", internalType: "uint24" },
                            { name: "tickSpacing", type: "int24", internalType: "int24" },
                            { name: "hooks", type: "address", internalType: "contract IHooks" },
                            { name: "hookData", type: "bytes", internalType: "bytes" },
                        ],
                    },
                    { name: "exactAmount", type: "uint128", internalType: "uint128" },
                ],
            },
        ],
        outputs: [
            { name: "amountOut", type: "uint256", internalType: "uint256" },
            { name: "gasEstimate", type: "uint256", internalType: "uint256" },
        ],
        stateMutability: "nonpayable",
    },
    {
        type: "function",
        name: "quoteExactInputSingle",
        inputs: [
            {
                name: "params",
                type: "tuple",
                internalType: "struct IV4Quoter.QuoteExactSingleParams",
                components: [
                    {
                        name: "poolKey",
                        type: "tuple",
                        internalType: "struct PoolKey",
                        components: [
                            { name: "currency0", type: "address", internalType: "Currency" },
                            { name: "currency1", type: "address", internalType: "Currency" },
                            { name: "fee", type: "uint24", internalType: "uint24" },
                            { name: "tickSpacing", type: "int24", internalType: "int24" },
                            { name: "hooks", type: "address", internalType: "contract IHooks" },
                        ],
                    },
                    { name: "zeroForOne", type: "bool", internalType: "bool" },
                    { name: "exactAmount", type: "uint128", internalType: "uint128" },
                    { name: "hookData", type: "bytes", internalType: "bytes" },
                ],
            },
        ],
        outputs: [
            { name: "amountOut", type: "uint256", internalType: "uint256" },
            { name: "gasEstimate", type: "uint256", internalType: "uint256" },
        ],
        stateMutability: "nonpayable",
    },
    {
        type: "function",
        name: "quoteExactOutput",
        inputs: [
            {
                name: "params",
                type: "tuple",
                internalType: "struct IV4Quoter.QuoteExactParams",
                components: [
                    { name: "exactCurrency", type: "address", internalType: "Currency" },
                    {
                        name: "path",
                        type: "tuple[]",
                        internalType: "struct PathKey[]",
                        components: [
                            { name: "intermediateCurrency", type: "address", internalType: "Currency" },
                            { name: "fee", type: "uint24", internalType: "uint24" },
                            { name: "tickSpacing", type: "int24", internalType: "int24" },
                            { name: "hooks", type: "address", internalType: "contract IHooks" },
                            { name: "hookData", type: "bytes", internalType: "bytes" },
                        ],
                    },
                    { name: "exactAmount", type: "uint128", internalType: "uint128" },
                ],
            },
        ],
        outputs: [
            { name: "amountIn", type: "uint256", internalType: "uint256" },
            { name: "gasEstimate", type: "uint256", internalType: "uint256" },
        ],
        stateMutability: "nonpayable",
    },
    {
        type: "function",
        name: "quoteExactOutputSingle",
        inputs: [
            {
                name: "params",
                type: "tuple",
                internalType: "struct IV4Quoter.QuoteExactSingleParams",
                components: [
                    {
                        name: "poolKey",
                        type: "tuple",
                        internalType: "struct PoolKey",
                        components: [
                            { name: "currency0", type: "address", internalType: "Currency" },
                            { name: "currency1", type: "address", internalType: "Currency" },
                            { name: "fee", type: "uint24", internalType: "uint24" },
                            { name: "tickSpacing", type: "int24", internalType: "int24" },
                            { name: "hooks", type: "address", internalType: "contract IHooks" },
                        ],
                    },
                    { name: "zeroForOne", type: "bool", internalType: "bool" },
                    { name: "exactAmount", type: "uint128", internalType: "uint128" },
                    { name: "hookData", type: "bytes", internalType: "bytes" },
                ],
            },
        ],
        outputs: [
            { name: "amountIn", type: "uint256", internalType: "uint256" },
            { name: "gasEstimate", type: "uint256", internalType: "uint256" },
        ],
        stateMutability: "nonpayable",
    },
    {
        type: "function",
        name: "_quoteExactInput",
        inputs: [
            {
                name: "params",
                type: "tuple",
                internalType: "struct IV4Quoter.QuoteExactParams",
                components: [
                    { name: "exactCurrency", type: "address", internalType: "Currency" },
                    {
                        name: "path",
                        type: "tuple[]",
                        internalType: "struct PathKey[]",
                        components: [
                            { name: "intermediateCurrency", type: "address", internalType: "Currency" },
                            { name: "fee", type: "uint24", internalType: "uint24" },
                            { name: "tickSpacing", type: "int24", internalType: "int24" },
                            { name: "hooks", type: "address", internalType: "contract IHooks" },
                            { name: "hookData", type: "bytes", internalType: "bytes" },
                        ],
                    },
                    { name: "exactAmount", type: "uint128", internalType: "uint128" },
                ],
            },
        ],
        outputs: [{ name: "", type: "bytes", internalType: "bytes" }],
        stateMutability: "nonpayable",
    },
    {
        type: "function",
        name: "_quoteExactInputSingle",
        inputs: [
            {
                name: "params",
                type: "tuple",
                internalType: "struct IV4Quoter.QuoteExactSingleParams",
                components: [
                    {
                        name: "poolKey",
                        type: "tuple",
                        internalType: "struct PoolKey",
                        components: [
                            { name: "currency0", type: "address", internalType: "Currency" },
                            { name: "currency1", type: "address", internalType: "Currency" },
                            { name: "fee", type: "uint24", internalType: "uint24" },
                            { name: "tickSpacing", type: "int24", internalType: "int24" },
                            { name: "hooks", type: "address", internalType: "contract IHooks" },
                        ],
                    },
                    { name: "zeroForOne", type: "bool", internalType: "bool" },
                    { name: "exactAmount", type: "uint128", internalType: "uint128" },
                    { name: "hookData", type: "bytes", internalType: "bytes" },
                ],
            },
        ],
        outputs: [{ name: "", type: "bytes", internalType: "bytes" }],
        stateMutability: "nonpayable",
    },
    {
        type: "function",
        name: "_quoteExactOutput",
        inputs: [
            {
                name: "params",
                type: "tuple",
                internalType: "struct IV4Quoter.QuoteExactParams",
                components: [
                    { name: "exactCurrency", type: "address", internalType: "Currency" },
                    {
                        name: "path",
                        type: "tuple[]",
                        internalType: "struct PathKey[]",
                        components: [
                            { name: "intermediateCurrency", type: "address", internalType: "Currency" },
                            { name: "fee", type: "uint24", internalType: "uint24" },
                            { name: "tickSpacing", type: "int24", internalType: "int24" },
                            { name: "hooks", type: "address", internalType: "contract IHooks" },
                            { name: "hookData", type: "bytes", internalType: "bytes" },
                        ],
                    },
                    { name: "exactAmount", type: "uint128", internalType: "uint128" },
                ],
            },
        ],
        outputs: [{ name: "", type: "bytes", internalType: "bytes" }],
        stateMutability: "nonpayable",
    },
    {
        type: "function",
        name: "_quoteExactOutputSingle",
        inputs: [
            {
                name: "params",
                type: "tuple",
                internalType: "struct IV4Quoter.QuoteExactSingleParams",
                components: [
                    {
                        name: "poolKey",
                        type: "tuple",
                        internalType: "struct PoolKey",
                        components: [
                            { name: "currency0", type: "address", internalType: "Currency" },
                            { name: "currency1", type: "address", internalType: "Currency" },
                            { name: "fee", type: "uint24", internalType: "uint24" },
                            { name: "tickSpacing", type: "int24", internalType: "int24" },
                            { name: "hooks", type: "address", internalType: "contract IHooks" },
                        ],
                    },
                    { name: "zeroForOne", type: "bool", internalType: "bool" },
                    { name: "exactAmount", type: "uint128", internalType: "uint128" },
                    { name: "hookData", type: "bytes", internalType: "bytes" },
                ],
            },
        ],
        outputs: [{ name: "", type: "bytes", internalType: "bytes" }],
        stateMutability: "nonpayable",
    },
    {
        type: "function",
        name: "getFeeGrowthGlobals",
        inputs: [{ name: "poolId", type: "bytes32", internalType: "PoolId" }],
        outputs: [
            { name: "feeGrowthGlobal0", type: "uint256", internalType: "uint256" },
            { name: "feeGrowthGlobal1", type: "uint256", internalType: "uint256" },
        ],
        stateMutability: "view",
    },
    {
        type: "function",
        name: "getFeeGrowthInside",
        inputs: [
            { name: "poolId", type: "bytes32", internalType: "PoolId" },
            { name: "tickLower", type: "int24", internalType: "int24" },
            { name: "tickUpper", type: "int24", internalType: "int24" },
        ],
        outputs: [
            { name: "feeGrowthInside0X128", type: "uint256", internalType: "uint256" },
            { name: "feeGrowthInside1X128", type: "uint256", internalType: "uint256" },
        ],
        stateMutability: "view",
    },
    {
        type: "function",
        name: "getLiquidity",
        inputs: [{ name: "poolId", type: "bytes32", internalType: "PoolId" }],
        outputs: [{ name: "liquidity", type: "uint128", internalType: "uint128" }],
        stateMutability: "view",
    },
    {
        type: "function",
        name: "getPositionInfo",
        inputs: [
            { name: "poolId", type: "bytes32", internalType: "PoolId" },
            { name: "positionId", type: "bytes32", internalType: "bytes32" },
        ],
        outputs: [
            { name: "liquidity", type: "uint128", internalType: "uint128" },
            { name: "feeGrowthInside0LastX128", type: "uint256", internalType: "uint256" },
            { name: "feeGrowthInside1LastX128", type: "uint256", internalType: "uint256" },
        ],
        stateMutability: "view",
    },
    {
        type: "function",
        name: "getPositionInfo",
        inputs: [
            { name: "poolId", type: "bytes32", internalType: "PoolId" },
            { name: "owner", type: "address", internalType: "address" },
            { name: "tickLower", type: "int24", internalType: "int24" },
            { name: "tickUpper", type: "int24", internalType: "int24" },
            { name: "salt", type: "bytes32", internalType: "bytes32" },
        ],
        outputs: [
            { name: "liquidity", type: "uint128", internalType: "uint128" },
            { name: "feeGrowthInside0LastX128", type: "uint256", internalType: "uint256" },
            { name: "feeGrowthInside1LastX128", type: "uint256", internalType: "uint256" },
        ],
        stateMutability: "view",
    },
    {
        type: "function",
        name: "getPositionLiquidity",
        inputs: [
            { name: "poolId", type: "bytes32", internalType: "PoolId" },
            { name: "positionId", type: "bytes32", internalType: "bytes32" },
        ],
        outputs: [{ name: "liquidity", type: "uint128", internalType: "uint128" }],
        stateMutability: "view",
    },
    {
        type: "function",
        name: "getSlot0",
        inputs: [{ name: "poolId", type: "bytes32", internalType: "PoolId" }],
        outputs: [
            { name: "sqrtPriceX96", type: "uint160", internalType: "uint160" },
            { name: "tick", type: "int24", internalType: "int24" },
            { name: "protocolFee", type: "uint24", internalType: "uint24" },
            { name: "lpFee", type: "uint24", internalType: "uint24" },
        ],
        stateMutability: "view",
    },
    {
        type: "function",
        name: "getTickBitmap",
        inputs: [
            { name: "poolId", type: "bytes32", internalType: "PoolId" },
            { name: "tick", type: "int16", internalType: "int16" },
        ],
        outputs: [{ name: "tickBitmap", type: "uint256", internalType: "uint256" }],
        stateMutability: "view",
    },
    {
        type: "function",
        name: "getTickFeeGrowthOutside",
        inputs: [
            { name: "poolId", type: "bytes32", internalType: "PoolId" },
            { name: "tick", type: "int24", internalType: "int24" },
        ],
        outputs: [
            { name: "feeGrowthOutside0X128", type: "uint256", internalType: "uint256" },
            { name: "feeGrowthOutside1X128", type: "uint256", internalType: "uint256" },
        ],
        stateMutability: "view",
    },
    {
        type: "function",
        name: "getTickInfo",
        inputs: [
            { name: "poolId", type: "bytes32", internalType: "PoolId" },
            { name: "tick", type: "int24", internalType: "int24" },
        ],
        outputs: [
            { name: "liquidityGross", type: "uint128", internalType: "uint128" },
            { name: "liquidityNet", type: "int128", internalType: "int128" },
            { name: "feeGrowthOutside0X128", type: "uint256", internalType: "uint256" },
            { name: "feeGrowthOutside1X128", type: "uint256", internalType: "uint256" },
        ],
        stateMutability: "view",
    },
    {
        type: "function",
        name: "getTickLiquidity",
        inputs: [
            { name: "poolId", type: "bytes32", internalType: "PoolId" },
            { name: "tick", type: "int24", internalType: "int24" },
        ],
        outputs: [
            { name: "liquidityGross", type: "uint128", internalType: "uint128" },
            { name: "liquidityNet", type: "int128", internalType: "int128" },
        ],
        stateMutability: "view",
    },
    {
        type: "function",
        name: "metaQuoteExactInput",
        inputs: [
            {
                name: "params",
                type: "tuple",
                internalType: "struct IV4MetaQuoter.MetaQuoteExactParams",
                components: [
                    { name: "exactCurrency", type: "address", internalType: "Currency" },
                    { name: "variableCurrency", type: "address", internalType: "Currency" },
                    { name: "hopCurrencies", type: "address[]", internalType: "Currency[]" },
                    { name: "exactAmount", type: "uint128", internalType: "uint128" },
                    {
                        name: "poolKeyOptions",
                        type: "tuple[]",
                        internalType: "struct IV4MetaQuoter.PoolKeyOptions[]",
                        components: [
                            { name: "fee", type: "uint24", internalType: "uint24" },
                            { name: "tickSpacing", type: "int24", internalType: "int24" },
                            { name: "hooks", type: "address", internalType: "address" },
                        ],
                    },
                ],
            },
        ],
        outputs: [
            {
                name: "quotes",
                type: "tuple[]",
                internalType: "struct IV4MetaQuoter.MetaQuoteExactResult[]",
                components: [
                    {
                        name: "path",
                        type: "tuple[]",
                        internalType: "struct PathKey[]",
                        components: [
                            { name: "intermediateCurrency", type: "address", internalType: "Currency" },
                            { name: "fee", type: "uint24", internalType: "uint24" },
                            { name: "tickSpacing", type: "int24", internalType: "int24" },
                            { name: "hooks", type: "address", internalType: "contract IHooks" },
                            { name: "hookData", type: "bytes", internalType: "bytes" },
                        ],
                    },
                    { name: "variableAmount", type: "uint256", internalType: "uint256" },
                    { name: "gasEstimate", type: "uint256", internalType: "uint256" },
                ],
            },
        ],
        stateMutability: "nonpayable",
    },
    {
        type: "function",
        name: "metaQuoteExactInputBest",
        inputs: [
            {
                name: "params",
                type: "tuple",
                internalType: "struct IV4MetaQuoter.MetaQuoteExactParams",
                components: [
                    { name: "exactCurrency", type: "address", internalType: "Currency" },
                    { name: "variableCurrency", type: "address", internalType: "Currency" },
                    { name: "hopCurrencies", type: "address[]", internalType: "Currency[]" },
                    { name: "exactAmount", type: "uint128", internalType: "uint128" },
                    {
                        name: "poolKeyOptions",
                        type: "tuple[]",
                        internalType: "struct IV4MetaQuoter.PoolKeyOptions[]",
                        components: [
                            { name: "fee", type: "uint24", internalType: "uint24" },
                            { name: "tickSpacing", type: "int24", internalType: "int24" },
                            { name: "hooks", type: "address", internalType: "address" },
                        ],
                    },
                ],
            },
        ],
        outputs: [
            {
                name: "bestSingleSwap",
                type: "tuple",
                internalType: "struct IV4MetaQuoter.MetaQuoteExactSingleResult",
                components: [
                    {
                        name: "poolKey",
                        type: "tuple",
                        internalType: "struct PoolKey",
                        components: [
                            { name: "currency0", type: "address", internalType: "Currency" },
                            { name: "currency1", type: "address", internalType: "Currency" },
                            { name: "fee", type: "uint24", internalType: "uint24" },
                            { name: "tickSpacing", type: "int24", internalType: "int24" },
                            { name: "hooks", type: "address", internalType: "contract IHooks" },
                        ],
                    },
                    { name: "zeroForOne", type: "bool", internalType: "bool" },
                    { name: "hookData", type: "bytes", internalType: "bytes" },
                    { name: "variableAmount", type: "uint256", internalType: "uint256" },
                    { name: "gasEstimate", type: "uint256", internalType: "uint256" },
                ],
            },
            {
                name: "bestMultihopSwap",
                type: "tuple",
                internalType: "struct IV4MetaQuoter.MetaQuoteExactResult",
                components: [
                    {
                        name: "path",
                        type: "tuple[]",
                        internalType: "struct PathKey[]",
                        components: [
                            { name: "intermediateCurrency", type: "address", internalType: "Currency" },
                            { name: "fee", type: "uint24", internalType: "uint24" },
                            { name: "tickSpacing", type: "int24", internalType: "int24" },
                            { name: "hooks", type: "address", internalType: "contract IHooks" },
                            { name: "hookData", type: "bytes", internalType: "bytes" },
                        ],
                    },
                    { name: "variableAmount", type: "uint256", internalType: "uint256" },
                    { name: "gasEstimate", type: "uint256", internalType: "uint256" },
                ],
            },
            { name: "bestSwapType", type: "uint8", internalType: "enum IV4MetaQuoter.BestSwap" },
        ],
        stateMutability: "nonpayable",
    },
    {
        type: "function",
        name: "metaQuoteExactInputSingle",
        inputs: [
            {
                name: "params",
                type: "tuple",
                internalType: "struct IV4MetaQuoter.MetaQuoteExactSingleParams",
                components: [
                    { name: "exactCurrency", type: "address", internalType: "Currency" },
                    { name: "variableCurrency", type: "address", internalType: "Currency" },
                    { name: "exactAmount", type: "uint128", internalType: "uint128" },
                    {
                        name: "poolKeyOptions",
                        type: "tuple[]",
                        internalType: "struct IV4MetaQuoter.PoolKeyOptions[]",
                        components: [
                            { name: "fee", type: "uint24", internalType: "uint24" },
                            { name: "tickSpacing", type: "int24", internalType: "int24" },
                            { name: "hooks", type: "address", internalType: "address" },
                        ],
                    },
                ],
            },
        ],
        outputs: [
            {
                name: "quotes",
                type: "tuple[]",
                internalType: "struct IV4MetaQuoter.MetaQuoteExactSingleResult[]",
                components: [
                    {
                        name: "poolKey",
                        type: "tuple",
                        internalType: "struct PoolKey",
                        components: [
                            { name: "currency0", type: "address", internalType: "Currency" },
                            { name: "currency1", type: "address", internalType: "Currency" },
                            { name: "fee", type: "uint24", internalType: "uint24" },
                            { name: "tickSpacing", type: "int24", internalType: "int24" },
                            { name: "hooks", type: "address", internalType: "contract IHooks" },
                        ],
                    },
                    { name: "zeroForOne", type: "bool", internalType: "bool" },
                    { name: "hookData", type: "bytes", internalType: "bytes" },
                    { name: "variableAmount", type: "uint256", internalType: "uint256" },
                    { name: "gasEstimate", type: "uint256", internalType: "uint256" },
                ],
            },
        ],
        stateMutability: "nonpayable",
    },
    {
        type: "function",
        name: "metaQuoteExactOutput",
        inputs: [
            {
                name: "params",
                type: "tuple",
                internalType: "struct IV4MetaQuoter.MetaQuoteExactParams",
                components: [
                    { name: "exactCurrency", type: "address", internalType: "Currency" },
                    { name: "variableCurrency", type: "address", internalType: "Currency" },
                    { name: "hopCurrencies", type: "address[]", internalType: "Currency[]" },
                    { name: "exactAmount", type: "uint128", internalType: "uint128" },
                    {
                        name: "poolKeyOptions",
                        type: "tuple[]",
                        internalType: "struct IV4MetaQuoter.PoolKeyOptions[]",
                        components: [
                            { name: "fee", type: "uint24", internalType: "uint24" },
                            { name: "tickSpacing", type: "int24", internalType: "int24" },
                            { name: "hooks", type: "address", internalType: "address" },
                        ],
                    },
                ],
            },
        ],
        outputs: [
            {
                name: "quotes",
                type: "tuple[]",
                internalType: "struct IV4MetaQuoter.MetaQuoteExactResult[]",
                components: [
                    {
                        name: "path",
                        type: "tuple[]",
                        internalType: "struct PathKey[]",
                        components: [
                            { name: "intermediateCurrency", type: "address", internalType: "Currency" },
                            { name: "fee", type: "uint24", internalType: "uint24" },
                            { name: "tickSpacing", type: "int24", internalType: "int24" },
                            { name: "hooks", type: "address", internalType: "contract IHooks" },
                            { name: "hookData", type: "bytes", internalType: "bytes" },
                        ],
                    },
                    { name: "variableAmount", type: "uint256", internalType: "uint256" },
                    { name: "gasEstimate", type: "uint256", internalType: "uint256" },
                ],
            },
        ],
        stateMutability: "nonpayable",
    },
    {
        type: "function",
        name: "metaQuoteExactOutputBest",
        inputs: [
            {
                name: "params",
                type: "tuple",
                internalType: "struct IV4MetaQuoter.MetaQuoteExactParams",
                components: [
                    { name: "exactCurrency", type: "address", internalType: "Currency" },
                    { name: "variableCurrency", type: "address", internalType: "Currency" },
                    { name: "hopCurrencies", type: "address[]", internalType: "Currency[]" },
                    { name: "exactAmount", type: "uint128", internalType: "uint128" },
                    {
                        name: "poolKeyOptions",
                        type: "tuple[]",
                        internalType: "struct IV4MetaQuoter.PoolKeyOptions[]",
                        components: [
                            { name: "fee", type: "uint24", internalType: "uint24" },
                            { name: "tickSpacing", type: "int24", internalType: "int24" },
                            { name: "hooks", type: "address", internalType: "address" },
                        ],
                    },
                ],
            },
        ],
        outputs: [
            {
                name: "bestSingleSwap",
                type: "tuple",
                internalType: "struct IV4MetaQuoter.MetaQuoteExactSingleResult",
                components: [
                    {
                        name: "poolKey",
                        type: "tuple",
                        internalType: "struct PoolKey",
                        components: [
                            { name: "currency0", type: "address", internalType: "Currency" },
                            { name: "currency1", type: "address", internalType: "Currency" },
                            { name: "fee", type: "uint24", internalType: "uint24" },
                            { name: "tickSpacing", type: "int24", internalType: "int24" },
                            { name: "hooks", type: "address", internalType: "contract IHooks" },
                        ],
                    },
                    { name: "zeroForOne", type: "bool", internalType: "bool" },
                    { name: "hookData", type: "bytes", internalType: "bytes" },
                    { name: "variableAmount", type: "uint256", internalType: "uint256" },
                    { name: "gasEstimate", type: "uint256", internalType: "uint256" },
                ],
            },
            {
                name: "bestMultihopSwap",
                type: "tuple",
                internalType: "struct IV4MetaQuoter.MetaQuoteExactResult",
                components: [
                    {
                        name: "path",
                        type: "tuple[]",
                        internalType: "struct PathKey[]",
                        components: [
                            { name: "intermediateCurrency", type: "address", internalType: "Currency" },
                            { name: "fee", type: "uint24", internalType: "uint24" },
                            { name: "tickSpacing", type: "int24", internalType: "int24" },
                            { name: "hooks", type: "address", internalType: "contract IHooks" },
                            { name: "hookData", type: "bytes", internalType: "bytes" },
                        ],
                    },
                    { name: "variableAmount", type: "uint256", internalType: "uint256" },
                    { name: "gasEstimate", type: "uint256", internalType: "uint256" },
                ],
            },
            { name: "bestSwapType", type: "uint8", internalType: "enum IV4MetaQuoter.BestSwap" },
        ],
        stateMutability: "nonpayable",
    },
    {
        type: "function",
        name: "metaQuoteExactOutputSingle",
        inputs: [
            {
                name: "params",
                type: "tuple",
                internalType: "struct IV4MetaQuoter.MetaQuoteExactSingleParams",
                components: [
                    { name: "exactCurrency", type: "address", internalType: "Currency" },
                    { name: "variableCurrency", type: "address", internalType: "Currency" },
                    { name: "exactAmount", type: "uint128", internalType: "uint128" },
                    {
                        name: "poolKeyOptions",
                        type: "tuple[]",
                        internalType: "struct IV4MetaQuoter.PoolKeyOptions[]",
                        components: [
                            { name: "fee", type: "uint24", internalType: "uint24" },
                            { name: "tickSpacing", type: "int24", internalType: "int24" },
                            { name: "hooks", type: "address", internalType: "address" },
                        ],
                    },
                ],
            },
        ],
        outputs: [
            {
                name: "quotes",
                type: "tuple[]",
                internalType: "struct IV4MetaQuoter.MetaQuoteExactSingleResult[]",
                components: [
                    {
                        name: "poolKey",
                        type: "tuple",
                        internalType: "struct PoolKey",
                        components: [
                            { name: "currency0", type: "address", internalType: "Currency" },
                            { name: "currency1", type: "address", internalType: "Currency" },
                            { name: "fee", type: "uint24", internalType: "uint24" },
                            { name: "tickSpacing", type: "int24", internalType: "int24" },
                            { name: "hooks", type: "address", internalType: "contract IHooks" },
                        ],
                    },
                    { name: "zeroForOne", type: "bool", internalType: "bool" },
                    { name: "hookData", type: "bytes", internalType: "bytes" },
                    { name: "variableAmount", type: "uint256", internalType: "uint256" },
                    { name: "gasEstimate", type: "uint256", internalType: "uint256" },
                ],
            },
        ],
        stateMutability: "nonpayable",
    },
    {
        type: "function",
        name: "execute",
        inputs: [
            { name: "commands", type: "bytes", internalType: "bytes" },
            { name: "inputs", type: "bytes[]", internalType: "bytes[]" },
            { name: "deadline", type: "uint256", internalType: "uint256" },
        ],
        outputs: [],
        stateMutability: "payable",
    },
    {
        type: "function",
        name: "V3_POSITION_MANAGER",
        inputs: [],
        outputs: [{ name: "", type: "address", internalType: "contract INonfungiblePositionManager" }],
        stateMutability: "view",
    },
    {
        type: "function",
        name: "V4_POSITION_MANAGER",
        inputs: [],
        outputs: [{ name: "", type: "address", internalType: "contract IPositionManager" }],
        stateMutability: "view",
    },
    {
        type: "function",
        name: "execute",
        inputs: [
            { name: "commands", type: "bytes", internalType: "bytes" },
            { name: "inputs", type: "bytes[]", internalType: "bytes[]" },
        ],
        outputs: [],
        stateMutability: "payable",
    },
    {
        type: "function",
        name: "uniswapV3SwapCallback",
        inputs: [
            { name: "amount0Delta", type: "int256", internalType: "int256" },
            { name: "amount1Delta", type: "int256", internalType: "int256" },
            { name: "data", type: "bytes", internalType: "bytes" },
        ],
        outputs: [],
        stateMutability: "nonpayable",
    },
    {
        type: "function",
        name: "quoteV2ExactInputSingle",
        inputs: [
            {
                name: "params",
                type: "tuple",
                internalType: "struct IV2Quoter.QuoteExactSingleParams",
                components: [
                    {
                        name: "poolKey",
                        type: "tuple",
                        internalType: "struct V2PoolKey",
                        components: [
                            { name: "currency0", type: "address", internalType: "Currency" },
                            { name: "currency1", type: "address", internalType: "Currency" },
                        ],
                    },
                    { name: "zeroForOne", type: "bool", internalType: "bool" },
                    { name: "exactAmount", type: "uint128", internalType: "uint128" },
                ],
            },
        ],
        outputs: [{ name: "amountOut", type: "uint256", internalType: "uint256" }],
        stateMutability: "view",
    },
    {
        type: "function",
        name: "quoteV2ExactOutputSingle",
        inputs: [
            {
                name: "params",
                type: "tuple",
                internalType: "struct IV2Quoter.QuoteExactSingleParams",
                components: [
                    {
                        name: "poolKey",
                        type: "tuple",
                        internalType: "struct V2PoolKey",
                        components: [
                            { name: "currency0", type: "address", internalType: "Currency" },
                            { name: "currency1", type: "address", internalType: "Currency" },
                        ],
                    },
                    { name: "zeroForOne", type: "bool", internalType: "bool" },
                    { name: "exactAmount", type: "uint128", internalType: "uint128" },
                ],
            },
        ],
        outputs: [{ name: "amountIn", type: "uint256", internalType: "uint256" }],
        stateMutability: "view",
    },
    {
        type: "function",
        name: "v2Factory",
        inputs: [],
        outputs: [{ name: "", type: "address", internalType: "address" }],
        stateMutability: "view",
    },
    {
        type: "function",
        name: "v2PoolInitCodeHash",
        inputs: [],
        outputs: [{ name: "", type: "bytes32", internalType: "bytes32" }],
        stateMutability: "view",
    },
    {
        type: "function",
        name: "v3Factory",
        inputs: [],
        outputs: [{ name: "", type: "address", internalType: "address" }],
        stateMutability: "view",
    },
    {
        type: "function",
        name: "v3PoolInitCodeHash",
        inputs: [],
        outputs: [{ name: "", type: "bytes32", internalType: "bytes32" }],
        stateMutability: "view",
    },
    {
        type: "function",
        name: "weth9",
        inputs: [],
        outputs: [{ name: "", type: "address", internalType: "address" }],
        stateMutability: "view",
    },
    {
        type: "function",
        name: "PACKAGE_VERSION",
        inputs: [],
        outputs: [{ name: "", type: "string", internalType: "string" }],
        stateMutability: "view",
    },
    {
        type: "function",
        name: "decreaseAllowance",
        inputs: [
            { name: "spender", type: "address", internalType: "address" },
            { name: "subtractedValue", type: "uint256", internalType: "uint256" },
        ],
        outputs: [{ name: "", type: "bool", internalType: "bool" }],
        stateMutability: "nonpayable",
    },
    {
        type: "function",
        name: "destinationGas",
        inputs: [{ name: "", type: "uint32", internalType: "uint32" }],
        outputs: [{ name: "", type: "uint256", internalType: "uint256" }],
        stateMutability: "view",
    },
    {
        type: "function",
        name: "domains",
        inputs: [],
        outputs: [{ name: "", type: "uint32[]", internalType: "uint32[]" }],
        stateMutability: "view",
    },
    {
        type: "function",
        name: "enrollRemoteRouter",
        inputs: [
            { name: "_domain", type: "uint32", internalType: "uint32" },
            { name: "_router", type: "bytes32", internalType: "bytes32" },
        ],
        outputs: [],
        stateMutability: "nonpayable",
    },
    {
        type: "function",
        name: "enrollRemoteRouters",
        inputs: [
            { name: "_domains", type: "uint32[]", internalType: "uint32[]" },
            { name: "_addresses", type: "bytes32[]", internalType: "bytes32[]" },
        ],
        outputs: [],
        stateMutability: "nonpayable",
    },
    {
        type: "function",
        name: "handle",
        inputs: [
            { name: "_origin", type: "uint32", internalType: "uint32" },
            { name: "_sender", type: "bytes32", internalType: "bytes32" },
            { name: "_message", type: "bytes", internalType: "bytes" },
        ],
        outputs: [],
        stateMutability: "payable",
    },
    {
        type: "function",
        name: "hook",
        inputs: [],
        outputs: [{ name: "", type: "address", internalType: "contract IPostDispatchHook" }],
        stateMutability: "view",
    },
    {
        type: "function",
        name: "increaseAllowance",
        inputs: [
            { name: "spender", type: "address", internalType: "address" },
            { name: "addedValue", type: "uint256", internalType: "uint256" },
        ],
        outputs: [{ name: "", type: "bool", internalType: "bool" }],
        stateMutability: "nonpayable",
    },
    {
        type: "function",
        name: "initialize",
        inputs: [
            { name: "_totalSupply", type: "uint256", internalType: "uint256" },
            { name: "_name", type: "string", internalType: "string" },
            { name: "_symbol", type: "string", internalType: "string" },
            { name: "_hook", type: "address", internalType: "address" },
            { name: "_interchainSecurityModule", type: "address", internalType: "address" },
            { name: "_owner", type: "address", internalType: "address" },
        ],
        outputs: [],
        stateMutability: "nonpayable",
    },
    {
        type: "function",
        name: "interchainSecurityModule",
        inputs: [],
        outputs: [{ name: "", type: "address", internalType: "contract IInterchainSecurityModule" }],
        stateMutability: "view",
    },
    {
        type: "function",
        name: "localDomain",
        inputs: [],
        outputs: [{ name: "", type: "uint32", internalType: "uint32" }],
        stateMutability: "view",
    },
    {
        type: "function",
        name: "mailbox",
        inputs: [],
        outputs: [{ name: "", type: "address", internalType: "contract IMailbox" }],
        stateMutability: "view",
    },
    {
        type: "function",
        name: "quoteGasPayment",
        inputs: [{ name: "_destinationDomain", type: "uint32", internalType: "uint32" }],
        outputs: [{ name: "", type: "uint256", internalType: "uint256" }],
        stateMutability: "view",
    },
    { type: "function", name: "renounceOwnership", inputs: [], outputs: [], stateMutability: "nonpayable" },
    {
        type: "function",
        name: "routers",
        inputs: [{ name: "_domain", type: "uint32", internalType: "uint32" }],
        outputs: [{ name: "", type: "bytes32", internalType: "bytes32" }],
        stateMutability: "view",
    },
    {
        type: "function",
        name: "setDestinationGas",
        inputs: [
            { name: "domain", type: "uint32", internalType: "uint32" },
            { name: "gas", type: "uint256", internalType: "uint256" },
        ],
        outputs: [],
        stateMutability: "nonpayable",
    },
    {
        type: "function",
        name: "setDestinationGas",
        inputs: [
            {
                name: "gasConfigs",
                type: "tuple[]",
                internalType: "struct GasRouter.GasRouterConfig[]",
                components: [
                    { name: "domain", type: "uint32", internalType: "uint32" },
                    { name: "gas", type: "uint256", internalType: "uint256" },
                ],
            },
        ],
        outputs: [],
        stateMutability: "nonpayable",
    },
    {
        type: "function",
        name: "setHook",
        inputs: [{ name: "_hook", type: "address", internalType: "address" }],
        outputs: [],
        stateMutability: "nonpayable",
    },
    {
        type: "function",
        name: "setInterchainSecurityModule",
        inputs: [{ name: "_module", type: "address", internalType: "address" }],
        outputs: [],
        stateMutability: "nonpayable",
    },
    {
        type: "function",
        name: "transferRemote",
        inputs: [
            { name: "_destination", type: "uint32", internalType: "uint32" },
            { name: "_recipient", type: "bytes32", internalType: "bytes32" },
            { name: "_amountOrId", type: "uint256", internalType: "uint256" },
            { name: "_hookMetadata", type: "bytes", internalType: "bytes" },
            { name: "_hook", type: "address", internalType: "address" },
        ],
        outputs: [{ name: "messageId", type: "bytes32", internalType: "bytes32" }],
        stateMutability: "payable",
    },
    {
        type: "function",
        name: "transferRemote",
        inputs: [
            { name: "_destination", type: "uint32", internalType: "uint32" },
            { name: "_recipient", type: "bytes32", internalType: "bytes32" },
            { name: "_amountOrId", type: "uint256", internalType: "uint256" },
        ],
        outputs: [{ name: "messageId", type: "bytes32", internalType: "bytes32" }],
        stateMutability: "payable",
    },
    {
        type: "function",
        name: "unenrollRemoteRouter",
        inputs: [{ name: "_domain", type: "uint32", internalType: "uint32" }],
        outputs: [],
        stateMutability: "nonpayable",
    },
    {
        type: "function",
        name: "unenrollRemoteRouters",
        inputs: [{ name: "_domains", type: "uint32[]", internalType: "uint32[]" }],
        outputs: [],
        stateMutability: "nonpayable",
    },
    {
        type: "function",
        name: "initialize",
        inputs: [
            { name: "_hook", type: "address", internalType: "address" },
            { name: "_interchainSecurityModule", type: "address", internalType: "address" },
            { name: "_owner", type: "address", internalType: "address" },
        ],
        outputs: [],
        stateMutability: "nonpayable",
    },
    {
        type: "function",
        name: "wrappedToken",
        inputs: [],
        outputs: [{ name: "", type: "address", internalType: "contract IERC20" }],
        stateMutability: "view",
    },
    {
        type: "function",
        name: "VERSION",
        inputs: [],
        outputs: [{ name: "", type: "uint8", internalType: "uint8" }],
        stateMutability: "view",
    },
    {
        type: "function",
        name: "defaultHook",
        inputs: [],
        outputs: [{ name: "", type: "address", internalType: "contract IPostDispatchHook" }],
        stateMutability: "view",
    },
    {
        type: "function",
        name: "defaultIsm",
        inputs: [],
        outputs: [{ name: "", type: "address", internalType: "contract IInterchainSecurityModule" }],
        stateMutability: "view",
    },
    {
        type: "function",
        name: "delivered",
        inputs: [{ name: "_id", type: "bytes32", internalType: "bytes32" }],
        outputs: [{ name: "", type: "bool", internalType: "bool" }],
        stateMutability: "view",
    },
    {
        type: "function",
        name: "deployedBlock",
        inputs: [],
        outputs: [{ name: "", type: "uint256", internalType: "uint256" }],
        stateMutability: "view",
    },
    {
        type: "function",
        name: "dispatch",
        inputs: [
            { name: "destinationDomain", type: "uint32", internalType: "uint32" },
            { name: "recipientAddress", type: "bytes32", internalType: "bytes32" },
            { name: "messageBody", type: "bytes", internalType: "bytes" },
            { name: "metadata", type: "bytes", internalType: "bytes" },
            { name: "hook", type: "address", internalType: "contract IPostDispatchHook" },
        ],
        outputs: [{ name: "", type: "bytes32", internalType: "bytes32" }],
        stateMutability: "payable",
    },
    {
        type: "function",
        name: "dispatch",
        inputs: [
            { name: "destinationDomain", type: "uint32", internalType: "uint32" },
            { name: "recipientAddress", type: "bytes32", internalType: "bytes32" },
            { name: "messageBody", type: "bytes", internalType: "bytes" },
            { name: "hookMetadata", type: "bytes", internalType: "bytes" },
        ],
        outputs: [{ name: "", type: "bytes32", internalType: "bytes32" }],
        stateMutability: "payable",
    },
    {
        type: "function",
        name: "dispatch",
        inputs: [
            { name: "_destinationDomain", type: "uint32", internalType: "uint32" },
            { name: "_recipientAddress", type: "bytes32", internalType: "bytes32" },
            { name: "_messageBody", type: "bytes", internalType: "bytes" },
        ],
        outputs: [{ name: "", type: "bytes32", internalType: "bytes32" }],
        stateMutability: "payable",
    },
    {
        type: "function",
        name: "initialize",
        inputs: [
            { name: "_owner", type: "address", internalType: "address" },
            { name: "_defaultIsm", type: "address", internalType: "address" },
            { name: "_defaultHook", type: "address", internalType: "address" },
            { name: "_requiredHook", type: "address", internalType: "address" },
        ],
        outputs: [],
        stateMutability: "nonpayable",
    },
    {
        type: "function",
        name: "latestDispatchedId",
        inputs: [],
        outputs: [{ name: "", type: "bytes32", internalType: "bytes32" }],
        stateMutability: "view",
    },
    {
        type: "function",
        name: "nonce",
        inputs: [],
        outputs: [{ name: "", type: "uint32", internalType: "uint32" }],
        stateMutability: "view",
    },
    {
        type: "function",
        name: "process",
        inputs: [
            { name: "_metadata", type: "bytes", internalType: "bytes" },
            { name: "_message", type: "bytes", internalType: "bytes" },
        ],
        outputs: [],
        stateMutability: "payable",
    },
    {
        type: "function",
        name: "processedAt",
        inputs: [{ name: "_id", type: "bytes32", internalType: "bytes32" }],
        outputs: [{ name: "", type: "uint48", internalType: "uint48" }],
        stateMutability: "view",
    },
    {
        type: "function",
        name: "processor",
        inputs: [{ name: "_id", type: "bytes32", internalType: "bytes32" }],
        outputs: [{ name: "", type: "address", internalType: "address" }],
        stateMutability: "view",
    },
    {
        type: "function",
        name: "quoteDispatch",
        inputs: [
            { name: "destinationDomain", type: "uint32", internalType: "uint32" },
            { name: "recipientAddress", type: "bytes32", internalType: "bytes32" },
            { name: "messageBody", type: "bytes", internalType: "bytes" },
            { name: "metadata", type: "bytes", internalType: "bytes" },
            { name: "hook", type: "address", internalType: "contract IPostDispatchHook" },
        ],
        outputs: [{ name: "fee", type: "uint256", internalType: "uint256" }],
        stateMutability: "view",
    },
    {
        type: "function",
        name: "quoteDispatch",
        inputs: [
            { name: "destinationDomain", type: "uint32", internalType: "uint32" },
            { name: "recipientAddress", type: "bytes32", internalType: "bytes32" },
            { name: "messageBody", type: "bytes", internalType: "bytes" },
        ],
        outputs: [{ name: "fee", type: "uint256", internalType: "uint256" }],
        stateMutability: "view",
    },
    {
        type: "function",
        name: "quoteDispatch",
        inputs: [
            { name: "destinationDomain", type: "uint32", internalType: "uint32" },
            { name: "recipientAddress", type: "bytes32", internalType: "bytes32" },
            { name: "messageBody", type: "bytes", internalType: "bytes" },
            { name: "defaultHookMetadata", type: "bytes", internalType: "bytes" },
        ],
        outputs: [{ name: "fee", type: "uint256", internalType: "uint256" }],
        stateMutability: "view",
    },
    {
        type: "function",
        name: "recipientIsm",
        inputs: [{ name: "_recipient", type: "address", internalType: "address" }],
        outputs: [{ name: "", type: "address", internalType: "contract IInterchainSecurityModule" }],
        stateMutability: "view",
    },
    {
        type: "function",
        name: "requiredHook",
        inputs: [],
        outputs: [{ name: "", type: "address", internalType: "contract IPostDispatchHook" }],
        stateMutability: "view",
    },
    {
        type: "function",
        name: "setDefaultHook",
        inputs: [{ name: "_hook", type: "address", internalType: "address" }],
        outputs: [],
        stateMutability: "nonpayable",
    },
    {
        type: "function",
        name: "setDefaultIsm",
        inputs: [{ name: "_module", type: "address", internalType: "address" }],
        outputs: [],
        stateMutability: "nonpayable",
    },
    {
        type: "function",
        name: "setRequiredHook",
        inputs: [{ name: "_hook", type: "address", internalType: "address" }],
        outputs: [],
        stateMutability: "nonpayable",
    },
    {
        type: "function",
        name: "addInboundMessage",
        inputs: [{ name: "message", type: "bytes", internalType: "bytes" }],
        outputs: [],
        stateMutability: "nonpayable",
    },
    {
        type: "function",
        name: "addRemoteMailbox",
        inputs: [
            { name: "_domain", type: "uint32", internalType: "uint32" },
            { name: "_mailbox", type: "address", internalType: "contract MockMailbox" },
        ],
        outputs: [],
        stateMutability: "nonpayable",
    },
    {
        type: "function",
        name: "inboundMessages",
        inputs: [{ name: "", type: "uint256", internalType: "uint256" }],
        outputs: [{ name: "", type: "bytes", internalType: "bytes" }],
        stateMutability: "view",
    },
    {
        type: "function",
        name: "inboundProcessedNonce",
        inputs: [],
        outputs: [{ name: "", type: "uint32", internalType: "uint32" }],
        stateMutability: "view",
    },
    {
        type: "function",
        name: "inboundUnprocessedNonce",
        inputs: [],
        outputs: [{ name: "", type: "uint32", internalType: "uint32" }],
        stateMutability: "view",
    },
    {
        type: "function",
        name: "processInboundMessage",
        inputs: [{ name: "_nonce", type: "uint32", internalType: "uint32" }],
        outputs: [],
        stateMutability: "payable",
    },
    { type: "function", name: "processNextInboundMessage", inputs: [], outputs: [], stateMutability: "payable" },
    {
        type: "function",
        name: "remoteMailboxes",
        inputs: [{ name: "", type: "uint32", internalType: "uint32" }],
        outputs: [{ name: "", type: "address", internalType: "contract MockMailbox" }],
        stateMutability: "view",
    },
    {
        type: "function",
        name: "moduleType",
        inputs: [],
        outputs: [{ name: "", type: "uint8", internalType: "uint8" }],
        stateMutability: "view",
    },
    {
        type: "function",
        name: "verify",
        inputs: [
            { name: "", type: "bytes", internalType: "bytes" },
            { name: "", type: "bytes", internalType: "bytes" },
        ],
        outputs: [{ name: "", type: "bool", internalType: "bool" }],
        stateMutability: "pure",
    },
    {
        type: "function",
        name: "hookType",
        inputs: [],
        outputs: [{ name: "", type: "uint8", internalType: "uint8" }],
        stateMutability: "pure",
    },
    { type: "function", name: "pause", inputs: [], outputs: [], stateMutability: "nonpayable" },
    {
        type: "function",
        name: "paused",
        inputs: [],
        outputs: [{ name: "", type: "bool", internalType: "bool" }],
        stateMutability: "view",
    },
    {
        type: "function",
        name: "postDispatch",
        inputs: [
            { name: "metadata", type: "bytes", internalType: "bytes" },
            { name: "message", type: "bytes", internalType: "bytes" },
        ],
        outputs: [],
        stateMutability: "payable",
    },
    {
        type: "function",
        name: "quoteDispatch",
        inputs: [
            { name: "metadata", type: "bytes", internalType: "bytes" },
            { name: "message", type: "bytes", internalType: "bytes" },
        ],
        outputs: [{ name: "", type: "uint256", internalType: "uint256" }],
        stateMutability: "view",
    },
    {
        type: "function",
        name: "supportsMetadata",
        inputs: [{ name: "metadata", type: "bytes", internalType: "bytes" }],
        outputs: [{ name: "", type: "bool", internalType: "bool" }],
        stateMutability: "pure",
    },
    { type: "function", name: "unpause", inputs: [], outputs: [], stateMutability: "nonpayable" },
    {
        type: "function",
        name: "transferRemoteLock",
        inputs: [],
        outputs: [{ name: "balanceCurrent", type: "uint256", internalType: "uint256" }],
        stateMutability: "nonpayable",
    },
    {
        type: "function",
        name: "transferRemoteUnlock",
        inputs: [
            { name: "_destination", type: "uint32", internalType: "uint32" },
            { name: "_recipient", type: "bytes32", internalType: "bytes32" },
        ],
        outputs: [{ name: "messageId", type: "bytes32", internalType: "bytes32" }],
        stateMutability: "payable",
    },
    {
        type: "function",
        name: "approveAll",
        inputs: [
            { name: "token", type: "address", internalType: "address" },
            { name: "spender", type: "address", internalType: "address" },
        ],
        outputs: [{ name: "", type: "bool", internalType: "bool" }],
        stateMutability: "nonpayable",
    },
    {
        type: "function",
        name: "transferRemote",
        inputs: [
            { name: "router", type: "address", internalType: "address" },
            { name: "destination", type: "uint32", internalType: "uint32" },
            { name: "recipient", type: "bytes32", internalType: "bytes32" },
            { name: "bridgePayment", type: "uint256", internalType: "uint256" },
            { name: "hookMetadata", type: "bytes", internalType: "bytes" },
            { name: "hook", type: "address", internalType: "address" },
        ],
        outputs: [{ name: "messageId", type: "bytes32", internalType: "bytes32" }],
        stateMutability: "payable",
    },
    {
        type: "function",
        name: "transferRemote",
        inputs: [
            { name: "router", type: "address", internalType: "address" },
            { name: "destination", type: "uint32", internalType: "uint32" },
            { name: "recipient", type: "bytes32", internalType: "bytes32" },
            { name: "bridgePayment", type: "uint256", internalType: "uint256" },
        ],
        outputs: [{ name: "messageId", type: "bytes32", internalType: "bytes32" }],
        stateMutability: "payable",
    },
    {
        type: "function",
        name: "callRemote",
        inputs: [
            { name: "destination", type: "uint32", internalType: "uint32" },
            { name: "router", type: "address", internalType: "address" },
            { name: "account", type: "address", internalType: "address" },
            { name: "initData", type: "bytes", internalType: "bytes" },
            { name: "initSalt", type: "bytes32", internalType: "bytes32" },
            { name: "executionMode", type: "uint8", internalType: "enum ERC7579ExecutorMessage.ExecutionMode" },
            { name: "callData", type: "bytes", internalType: "bytes" },
            { name: "nonce", type: "uint256", internalType: "uint256" },
            { name: "validAfter", type: "uint48", internalType: "uint48" },
            { name: "validUntil", type: "uint48", internalType: "uint48" },
            { name: "signature", type: "bytes", internalType: "bytes" },
            { name: "hookMetadata", type: "bytes", internalType: "bytes" },
            { name: "hook", type: "address", internalType: "address" },
        ],
        outputs: [{ name: "", type: "bytes32", internalType: "bytes32" }],
        stateMutability: "payable",
    },
    {
        type: "function",
        name: "owners",
        inputs: [
            { name: "account", type: "address", internalType: "address" },
            { name: "domain", type: "uint32", internalType: "uint32" },
            { name: "router", type: "address", internalType: "address" },
            { name: "owner", type: "address", internalType: "address" },
        ],
        outputs: [{ name: "", type: "bool", internalType: "bool" }],
        stateMutability: "view",
    },
    {
        type: "function",
        name: "setAccountOwners",
        inputs: [
            {
                name: "_owners",
                type: "tuple[]",
                internalType: "struct ERC7579ExecutorRouter.RemoteRouterOwner[]",
                components: [
                    { name: "domain", type: "uint32", internalType: "uint32" },
                    { name: "router", type: "address", internalType: "address" },
                    { name: "owner", type: "address", internalType: "address" },
                    { name: "enabled", type: "bool", internalType: "bool" },
                ],
            },
        ],
        outputs: [],
        stateMutability: "nonpayable",
    },
    {
        type: "function",
        name: "FIXED_GAS_PRICE",
        inputs: [],
        outputs: [{ name: "", type: "uint256", internalType: "uint256" }],
        stateMutability: "view",
    },
    {
        type: "function",
        name: "destinationGasLimit",
        inputs: [
            { name: "_destinationDomain", type: "uint32", internalType: "uint32" },
            { name: "_gasAmount", type: "uint256", internalType: "uint256" },
        ],
        outputs: [{ name: "", type: "uint256", internalType: "uint256" }],
        stateMutability: "pure",
    },
    {
        type: "function",
        name: "payForGas",
        inputs: [
            { name: "_messageId", type: "bytes32", internalType: "bytes32" },
            { name: "_destinationDomain", type: "uint32", internalType: "uint32" },
            { name: "_gasAmount", type: "uint256", internalType: "uint256" },
            { name: "_refundAddress", type: "address", internalType: "address" },
        ],
        outputs: [],
        stateMutability: "payable",
    },
    {
        type: "function",
        name: "quoteGasPayment",
        inputs: [
            { name: "_destinationDomain", type: "uint32", internalType: "uint32" },
            { name: "_gasAmount", type: "uint256", internalType: "uint256" },
        ],
        outputs: [{ name: "", type: "uint256", internalType: "uint256" }],
        stateMutability: "pure",
    },
    {
        type: "function",
        name: "beneficiary",
        inputs: [],
        outputs: [{ name: "", type: "address", internalType: "address" }],
        stateMutability: "view",
    },
    { type: "function", name: "claim", inputs: [], outputs: [], stateMutability: "nonpayable" },
    {
        type: "function",
        name: "destinationGasConfigs",
        inputs: [{ name: "", type: "uint32", internalType: "uint32" }],
        outputs: [
            { name: "gasOracle", type: "address", internalType: "contract IGasOracle" },
            { name: "gasOverhead", type: "uint96", internalType: "uint96" },
        ],
        stateMutability: "view",
    },
    {
        type: "function",
        name: "getExchangeRateAndGasPrice",
        inputs: [{ name: "_destinationDomain", type: "uint32", internalType: "uint32" }],
        outputs: [
            { name: "tokenExchangeRate", type: "uint128", internalType: "uint128" },
            { name: "gasPrice", type: "uint128", internalType: "uint128" },
        ],
        stateMutability: "view",
    },
    {
        type: "function",
        name: "setBeneficiary",
        inputs: [{ name: "_beneficiary", type: "address", internalType: "address" }],
        outputs: [],
        stateMutability: "nonpayable",
    },
    {
        type: "function",
        name: "setDestinationGasConfigs",
        inputs: [
            {
                name: "_configs",
                type: "tuple[]",
                internalType: "struct InterchainGasPaymaster.GasParam[]",
                components: [
                    { name: "remoteDomain", type: "uint32", internalType: "uint32" },
                    {
                        name: "config",
                        type: "tuple",
                        internalType: "struct InterchainGasPaymaster.DomainGasConfig",
                        components: [
                            { name: "gasOracle", type: "address", internalType: "contract IGasOracle" },
                            { name: "gasOverhead", type: "uint96", internalType: "uint96" },
                        ],
                    },
                ],
            },
        ],
        outputs: [],
        stateMutability: "nonpayable",
    },
    { type: "function", name: "__constructor__", inputs: [], outputs: [], stateMutability: "nonpayable" },
    {
        type: "function",
        name: "crossDomainMessageContext",
        inputs: [],
        outputs: [
            { name: "sender_", type: "address", internalType: "address" },
            { name: "source_", type: "uint256", internalType: "uint256" },
        ],
        stateMutability: "view",
    },
    {
        type: "function",
        name: "crossDomainMessageSender",
        inputs: [],
        outputs: [{ name: "sender_", type: "address", internalType: "address" }],
        stateMutability: "view",
    },
    {
        type: "function",
        name: "crossDomainMessageSource",
        inputs: [],
        outputs: [{ name: "source_", type: "uint256", internalType: "uint256" }],
        stateMutability: "view",
    },
    {
        type: "function",
        name: "messageNonce",
        inputs: [],
        outputs: [{ name: "", type: "uint256", internalType: "uint256" }],
        stateMutability: "view",
    },
    {
        type: "function",
        name: "messageVersion",
        inputs: [],
        outputs: [{ name: "", type: "uint16", internalType: "uint16" }],
        stateMutability: "view",
    },
    {
        type: "function",
        name: "relayMessage",
        inputs: [
            {
                name: "_id",
                type: "tuple",
                internalType: "struct Identifier",
                components: [
                    { name: "origin", type: "address", internalType: "address" },
                    { name: "blockNumber", type: "uint256", internalType: "uint256" },
                    { name: "logIndex", type: "uint256", internalType: "uint256" },
                    { name: "timestamp", type: "uint256", internalType: "uint256" },
                    { name: "chainId", type: "uint256", internalType: "uint256" },
                ],
            },
            { name: "_sentMessage", type: "bytes", internalType: "bytes" },
        ],
        outputs: [{ name: "returnData_", type: "bytes", internalType: "bytes" }],
        stateMutability: "payable",
    },
    {
        type: "function",
        name: "sendMessage",
        inputs: [
            { name: "_destination", type: "uint256", internalType: "uint256" },
            { name: "_target", type: "address", internalType: "address" },
            { name: "_message", type: "bytes", internalType: "bytes" },
        ],
        outputs: [{ name: "", type: "bytes32", internalType: "bytes32" }],
        stateMutability: "nonpayable",
    },
    {
        type: "function",
        name: "successfulMessages",
        inputs: [{ name: "", type: "bytes32", internalType: "bytes32" }],
        outputs: [{ name: "", type: "bool", internalType: "bool" }],
        stateMutability: "view",
    },
    {
        type: "function",
        name: "version",
        inputs: [],
        outputs: [{ name: "", type: "string", internalType: "string" }],
        stateMutability: "view",
    },
    {
        type: "function",
        name: "relayERC20",
        inputs: [
            { name: "_token", type: "address", internalType: "address" },
            { name: "_from", type: "address", internalType: "address" },
            { name: "_to", type: "address", internalType: "address" },
            { name: "_amount", type: "uint256", internalType: "uint256" },
        ],
        outputs: [],
        stateMutability: "nonpayable",
    },
    {
        type: "function",
        name: "sendERC20",
        inputs: [
            { name: "_token", type: "address", internalType: "address" },
            { name: "_to", type: "address", internalType: "address" },
            { name: "_amount", type: "uint256", internalType: "uint256" },
            { name: "_chainId", type: "uint256", internalType: "uint256" },
        ],
        outputs: [{ name: "msgHash_", type: "bytes32", internalType: "bytes32" }],
        stateMutability: "nonpayable",
    },
    {
        type: "function",
        name: "sendAllERC20",
        inputs: [
            { name: "_token", type: "address", internalType: "address" },
            { name: "_to", type: "address", internalType: "address" },
            { name: "_chainId", type: "uint256", internalType: "uint256" },
        ],
        outputs: [{ name: "msgHash_", type: "bytes32", internalType: "bytes32" }],
        stateMutability: "nonpayable",
    },
    {
        type: "function",
        name: "crosschainBurn",
        inputs: [
            { name: "_from", type: "address", internalType: "address" },
            { name: "_amount", type: "uint256", internalType: "uint256" },
        ],
        outputs: [],
        stateMutability: "nonpayable",
    },
    {
        type: "function",
        name: "crosschainMint",
        inputs: [
            { name: "_to", type: "address", internalType: "address" },
            { name: "_amount", type: "uint256", internalType: "uint256" },
        ],
        outputs: [],
        stateMutability: "nonpayable",
    },
    {
        type: "function",
        name: "callRemote",
        inputs: [
            { name: "destination", type: "uint256", internalType: "uint256" },
            { name: "account", type: "address", internalType: "address" },
            { name: "initData", type: "bytes", internalType: "bytes" },
            { name: "initSalt", type: "bytes32", internalType: "bytes32" },
            { name: "executionMode", type: "uint8", internalType: "enum ERC7579ExecutorMessage.ExecutionMode" },
            { name: "callData", type: "bytes", internalType: "bytes" },
            { name: "nonce", type: "uint256", internalType: "uint256" },
            { name: "validAfter", type: "uint48", internalType: "uint48" },
            { name: "validUntil", type: "uint48", internalType: "uint48" },
            { name: "signature", type: "bytes", internalType: "bytes" },
        ],
        outputs: [{ name: "", type: "bytes32", internalType: "bytes32" }],
        stateMutability: "payable",
    },
    {
        type: "function",
        name: "handle",
        inputs: [
            { name: "owner", type: "address", internalType: "address" },
            { name: "account", type: "address", internalType: "address" },
            { name: "initData", type: "bytes", internalType: "bytes" },
            { name: "initSalt", type: "bytes32", internalType: "bytes32" },
            { name: "executionMode", type: "uint8", internalType: "enum ERC7579ExecutorMessage.ExecutionMode" },
            { name: "callData", type: "bytes", internalType: "bytes" },
            { name: "nonce", type: "uint256", internalType: "uint256" },
            { name: "validAfter", type: "uint48", internalType: "uint48" },
            { name: "validUntil", type: "uint48", internalType: "uint48" },
            { name: "signature", type: "bytes", internalType: "bytes" },
        ],
        outputs: [],
        stateMutability: "payable",
    },
    {
        type: "function",
        name: "owners",
        inputs: [
            { name: "account", type: "address", internalType: "address" },
            { name: "origin", type: "uint256", internalType: "uint256" },
            { name: "owner", type: "address", internalType: "address" },
        ],
        outputs: [{ name: "", type: "bool", internalType: "bool" }],
        stateMutability: "view",
    },
    {
        type: "function",
        name: "setAccountOwners",
        inputs: [
            {
                name: "_owners",
                type: "tuple[]",
                internalType: "struct SuperchainERC7579ExecutorRouter.RemoteRouterOwner[]",
                components: [
                    { name: "domain", type: "uint256", internalType: "uint256" },
                    { name: "owner", type: "address", internalType: "address" },
                    { name: "enabled", type: "bool", internalType: "bool" },
                ],
            },
        ],
        outputs: [],
        stateMutability: "nonpayable",
    },
    {
        type: "function",
        name: "bridgeAllETH",
        inputs: [
            { name: "to", type: "address", internalType: "address payable" },
            {
                name: "bridgeParams",
                type: "tuple",
                internalType: "struct StargateBridgeSweep.BridgeParams",
                components: [
                    { name: "recipient", type: "address", internalType: "address" },
                    { name: "recipientPadded", type: "bytes32", internalType: "bytes32" },
                    { name: "dstEid", type: "uint32", internalType: "uint32" },
                    { name: "extraOptions", type: "bytes", internalType: "bytes" },
                    { name: "composeMsg", type: "bytes", internalType: "bytes" },
                    { name: "oftCmd", type: "bytes", internalType: "bytes" },
                ],
            },
        ],
        outputs: [],
        stateMutability: "nonpayable",
    },
    {
        type: "function",
        name: "bridgeAllToken",
        inputs: [
            { name: "to", type: "address", internalType: "address payable" },
            { name: "inputToken", type: "address", internalType: "address" },
            {
                name: "bridgeParams",
                type: "tuple",
                internalType: "struct StargateBridgeSweep.BridgeParams",
                components: [
                    { name: "recipient", type: "address", internalType: "address" },
                    { name: "recipientPadded", type: "bytes32", internalType: "bytes32" },
                    { name: "dstEid", type: "uint32", internalType: "uint32" },
                    { name: "extraOptions", type: "bytes", internalType: "bytes" },
                    { name: "composeMsg", type: "bytes", internalType: "bytes" },
                    { name: "oftCmd", type: "bytes", internalType: "bytes" },
                ],
            },
        ],
        outputs: [],
        stateMutability: "payable",
    },
    {
        type: "function",
        name: "accountId",
        inputs: [],
        outputs: [{ name: "accountImplementationId", type: "string", internalType: "string" }],
        stateMutability: "pure",
    },
    {
        type: "function",
        name: "changeRootValidator",
        inputs: [
            { name: "_rootValidator", type: "bytes21", internalType: "ValidationId" },
            { name: "hook", type: "address", internalType: "contract IHook" },
            { name: "validatorData", type: "bytes", internalType: "bytes" },
            { name: "hookData", type: "bytes", internalType: "bytes" },
        ],
        outputs: [],
        stateMutability: "payable",
    },
    {
        type: "function",
        name: "currentNonce",
        inputs: [],
        outputs: [{ name: "", type: "uint32", internalType: "uint32" }],
        stateMutability: "view",
    },
    {
        type: "function",
        name: "eip712Domain",
        inputs: [],
        outputs: [
            { name: "fields", type: "bytes1", internalType: "bytes1" },
            { name: "name", type: "string", internalType: "string" },
            { name: "version", type: "string", internalType: "string" },
            { name: "chainId", type: "uint256", internalType: "uint256" },
            { name: "verifyingContract", type: "address", internalType: "address" },
            { name: "salt", type: "bytes32", internalType: "bytes32" },
            { name: "extensions", type: "uint256[]", internalType: "uint256[]" },
        ],
        stateMutability: "view",
    },
    {
        type: "function",
        name: "entrypoint",
        inputs: [],
        outputs: [{ name: "", type: "address", internalType: "contract IEntryPoint" }],
        stateMutability: "view",
    },
    {
        type: "function",
        name: "execute",
        inputs: [
            { name: "execMode", type: "bytes32", internalType: "ExecMode" },
            { name: "executionCalldata", type: "bytes", internalType: "bytes" },
        ],
        outputs: [],
        stateMutability: "payable",
    },
    {
        type: "function",
        name: "executeFromExecutor",
        inputs: [
            { name: "execMode", type: "bytes32", internalType: "ExecMode" },
            { name: "executionCalldata", type: "bytes", internalType: "bytes" },
        ],
        outputs: [{ name: "returnData", type: "bytes[]", internalType: "bytes[]" }],
        stateMutability: "payable",
    },
    {
        type: "function",
        name: "executeUserOp",
        inputs: [
            {
                name: "userOp",
                type: "tuple",
                internalType: "struct PackedUserOperation",
                components: [
                    { name: "sender", type: "address", internalType: "address" },
                    { name: "nonce", type: "uint256", internalType: "uint256" },
                    { name: "initCode", type: "bytes", internalType: "bytes" },
                    { name: "callData", type: "bytes", internalType: "bytes" },
                    { name: "accountGasLimits", type: "bytes32", internalType: "bytes32" },
                    { name: "preVerificationGas", type: "uint256", internalType: "uint256" },
                    { name: "gasFees", type: "bytes32", internalType: "bytes32" },
                    { name: "paymasterAndData", type: "bytes", internalType: "bytes" },
                    { name: "signature", type: "bytes", internalType: "bytes" },
                ],
            },
            { name: "userOpHash", type: "bytes32", internalType: "bytes32" },
        ],
        outputs: [],
        stateMutability: "payable",
    },
    {
        type: "function",
        name: "executorConfig",
        inputs: [{ name: "executor", type: "address", internalType: "contract IExecutor" }],
        outputs: [
            {
                name: "",
                type: "tuple",
                internalType: "struct ExecutorManager.ExecutorConfig",
                components: [{ name: "hook", type: "address", internalType: "contract IHook" }],
            },
        ],
        stateMutability: "view",
    },
    {
        type: "function",
        name: "initialize",
        inputs: [
            { name: "_rootValidator", type: "bytes21", internalType: "ValidationId" },
            { name: "hook", type: "address", internalType: "contract IHook" },
            { name: "validatorData", type: "bytes", internalType: "bytes" },
            { name: "hookData", type: "bytes", internalType: "bytes" },
            { name: "initConfig", type: "bytes[]", internalType: "bytes[]" },
        ],
        outputs: [],
        stateMutability: "nonpayable",
    },
    {
        type: "function",
        name: "installModule",
        inputs: [
            { name: "moduleType", type: "uint256", internalType: "uint256" },
            { name: "module", type: "address", internalType: "address" },
            { name: "initData", type: "bytes", internalType: "bytes" },
        ],
        outputs: [],
        stateMutability: "payable",
    },
    {
        type: "function",
        name: "installValidations",
        inputs: [
            { name: "vIds", type: "bytes21[]", internalType: "ValidationId[]" },
            {
                name: "configs",
                type: "tuple[]",
                internalType: "struct ValidationManager.ValidationConfig[]",
                components: [
                    { name: "nonce", type: "uint32", internalType: "uint32" },
                    { name: "hook", type: "address", internalType: "contract IHook" },
                ],
            },
            { name: "validationData", type: "bytes[]", internalType: "bytes[]" },
            { name: "hookData", type: "bytes[]", internalType: "bytes[]" },
        ],
        outputs: [],
        stateMutability: "payable",
    },
    {
        type: "function",
        name: "invalidateNonce",
        inputs: [{ name: "nonce", type: "uint32", internalType: "uint32" }],
        outputs: [],
        stateMutability: "payable",
    },
    {
        type: "function",
        name: "isAllowedSelector",
        inputs: [
            { name: "vId", type: "bytes21", internalType: "ValidationId" },
            { name: "selector", type: "bytes4", internalType: "bytes4" },
        ],
        outputs: [{ name: "", type: "bool", internalType: "bool" }],
        stateMutability: "view",
    },
    {
        type: "function",
        name: "isModuleInstalled",
        inputs: [
            { name: "moduleType", type: "uint256", internalType: "uint256" },
            { name: "module", type: "address", internalType: "address" },
            { name: "additionalContext", type: "bytes", internalType: "bytes" },
        ],
        outputs: [{ name: "", type: "bool", internalType: "bool" }],
        stateMutability: "view",
    },
    {
        type: "function",
        name: "isValidSignature",
        inputs: [
            { name: "hash", type: "bytes32", internalType: "bytes32" },
            { name: "signature", type: "bytes", internalType: "bytes" },
        ],
        outputs: [{ name: "", type: "bytes4", internalType: "bytes4" }],
        stateMutability: "view",
    },
    {
        type: "function",
        name: "onERC1155BatchReceived",
        inputs: [
            { name: "", type: "address", internalType: "address" },
            { name: "", type: "address", internalType: "address" },
            { name: "", type: "uint256[]", internalType: "uint256[]" },
            { name: "", type: "uint256[]", internalType: "uint256[]" },
            { name: "", type: "bytes", internalType: "bytes" },
        ],
        outputs: [{ name: "", type: "bytes4", internalType: "bytes4" }],
        stateMutability: "pure",
    },
    {
        type: "function",
        name: "onERC1155Received",
        inputs: [
            { name: "", type: "address", internalType: "address" },
            { name: "", type: "address", internalType: "address" },
            { name: "", type: "uint256", internalType: "uint256" },
            { name: "", type: "uint256", internalType: "uint256" },
            { name: "", type: "bytes", internalType: "bytes" },
        ],
        outputs: [{ name: "", type: "bytes4", internalType: "bytes4" }],
        stateMutability: "pure",
    },
    {
        type: "function",
        name: "onERC721Received",
        inputs: [
            { name: "", type: "address", internalType: "address" },
            { name: "", type: "address", internalType: "address" },
            { name: "", type: "uint256", internalType: "uint256" },
            { name: "", type: "bytes", internalType: "bytes" },
        ],
        outputs: [{ name: "", type: "bytes4", internalType: "bytes4" }],
        stateMutability: "pure",
    },
    {
        type: "function",
        name: "permissionConfig",
        inputs: [{ name: "pId", type: "bytes4", internalType: "PermissionId" }],
        outputs: [
            {
                name: "",
                type: "tuple",
                internalType: "struct ValidationManager.PermissionConfig",
                components: [
                    { name: "permissionFlag", type: "bytes2", internalType: "PassFlag" },
                    { name: "signer", type: "address", internalType: "contract ISigner" },
                    { name: "policyData", type: "bytes22[]", internalType: "PolicyData[]" },
                ],
            },
        ],
        stateMutability: "view",
    },
    {
        type: "function",
        name: "rootValidator",
        inputs: [],
        outputs: [{ name: "", type: "bytes21", internalType: "ValidationId" }],
        stateMutability: "view",
    },
    {
        type: "function",
        name: "selectorConfig",
        inputs: [{ name: "selector", type: "bytes4", internalType: "bytes4" }],
        outputs: [
            {
                name: "",
                type: "tuple",
                internalType: "struct SelectorManager.SelectorConfig",
                components: [
                    { name: "hook", type: "address", internalType: "contract IHook" },
                    { name: "target", type: "address", internalType: "address" },
                    { name: "callType", type: "bytes1", internalType: "CallType" },
                ],
            },
        ],
        stateMutability: "view",
    },
    {
        type: "function",
        name: "supportsExecutionMode",
        inputs: [{ name: "mode", type: "bytes32", internalType: "ExecMode" }],
        outputs: [{ name: "", type: "bool", internalType: "bool" }],
        stateMutability: "pure",
    },
    {
        type: "function",
        name: "supportsModule",
        inputs: [{ name: "moduleTypeId", type: "uint256", internalType: "uint256" }],
        outputs: [{ name: "", type: "bool", internalType: "bool" }],
        stateMutability: "pure",
    },
    {
        type: "function",
        name: "uninstallModule",
        inputs: [
            { name: "moduleType", type: "uint256", internalType: "uint256" },
            { name: "module", type: "address", internalType: "address" },
            { name: "deInitData", type: "bytes", internalType: "bytes" },
        ],
        outputs: [],
        stateMutability: "payable",
    },
    {
        type: "function",
        name: "uninstallValidation",
        inputs: [
            { name: "vId", type: "bytes21", internalType: "ValidationId" },
            { name: "deinitData", type: "bytes", internalType: "bytes" },
            { name: "hookDeinitData", type: "bytes", internalType: "bytes" },
        ],
        outputs: [],
        stateMutability: "payable",
    },
    {
        type: "function",
        name: "upgradeTo",
        inputs: [{ name: "_newImplementation", type: "address", internalType: "address" }],
        outputs: [],
        stateMutability: "payable",
    },
    {
        type: "function",
        name: "validNonceFrom",
        inputs: [],
        outputs: [{ name: "", type: "uint32", internalType: "uint32" }],
        stateMutability: "view",
    },
    {
        type: "function",
        name: "validateUserOp",
        inputs: [
            {
                name: "userOp",
                type: "tuple",
                internalType: "struct PackedUserOperation",
                components: [
                    { name: "sender", type: "address", internalType: "address" },
                    { name: "nonce", type: "uint256", internalType: "uint256" },
                    { name: "initCode", type: "bytes", internalType: "bytes" },
                    { name: "callData", type: "bytes", internalType: "bytes" },
                    { name: "accountGasLimits", type: "bytes32", internalType: "bytes32" },
                    { name: "preVerificationGas", type: "uint256", internalType: "uint256" },
                    { name: "gasFees", type: "bytes32", internalType: "bytes32" },
                    { name: "paymasterAndData", type: "bytes", internalType: "bytes" },
                    { name: "signature", type: "bytes", internalType: "bytes" },
                ],
            },
            { name: "userOpHash", type: "bytes32", internalType: "bytes32" },
            { name: "missingAccountFunds", type: "uint256", internalType: "uint256" },
        ],
        outputs: [{ name: "validationData", type: "uint256", internalType: "ValidationData" }],
        stateMutability: "payable",
    },
    {
        type: "function",
        name: "validationConfig",
        inputs: [{ name: "vId", type: "bytes21", internalType: "ValidationId" }],
        outputs: [
            {
                name: "",
                type: "tuple",
                internalType: "struct ValidationManager.ValidationConfig",
                components: [
                    { name: "nonce", type: "uint32", internalType: "uint32" },
                    { name: "hook", type: "address", internalType: "contract IHook" },
                ],
            },
        ],
        stateMutability: "view",
    },
    {
        type: "function",
        name: "createAccount",
        inputs: [
            { name: "data", type: "bytes", internalType: "bytes" },
            { name: "salt", type: "bytes32", internalType: "bytes32" },
        ],
        outputs: [{ name: "", type: "address", internalType: "address" }],
        stateMutability: "payable",
    },
    {
        type: "function",
        name: "getAddress",
        inputs: [
            { name: "data", type: "bytes", internalType: "bytes" },
            { name: "salt", type: "bytes32", internalType: "bytes32" },
        ],
        outputs: [{ name: "", type: "address", internalType: "address" }],
        stateMutability: "view",
    },
    {
        type: "function",
        name: "implementation",
        inputs: [],
        outputs: [{ name: "", type: "address", internalType: "address" }],
        stateMutability: "view",
    },
    {
        type: "function",
        name: "ecdsaValidatorStorage",
        inputs: [{ name: "", type: "address", internalType: "address" }],
        outputs: [{ name: "owner", type: "address", internalType: "address" }],
        stateMutability: "view",
    },
    {
        type: "function",
        name: "isInitialized",
        inputs: [{ name: "smartAccount", type: "address", internalType: "address" }],
        outputs: [{ name: "", type: "bool", internalType: "bool" }],
        stateMutability: "view",
    },
    {
        type: "function",
        name: "isModuleType",
        inputs: [{ name: "typeID", type: "uint256", internalType: "uint256" }],
        outputs: [{ name: "", type: "bool", internalType: "bool" }],
        stateMutability: "pure",
    },
    {
        type: "function",
        name: "isValidSignatureWithSender",
        inputs: [
            { name: "", type: "address", internalType: "address" },
            { name: "hash", type: "bytes32", internalType: "bytes32" },
            { name: "sig", type: "bytes", internalType: "bytes" },
        ],
        outputs: [{ name: "", type: "bytes4", internalType: "bytes4" }],
        stateMutability: "view",
    },
    {
        type: "function",
        name: "onInstall",
        inputs: [{ name: "_data", type: "bytes", internalType: "bytes" }],
        outputs: [],
        stateMutability: "payable",
    },
    {
        type: "function",
        name: "onUninstall",
        inputs: [{ name: "", type: "bytes", internalType: "bytes" }],
        outputs: [],
        stateMutability: "payable",
    },
    {
        type: "function",
        name: "postCheck",
        inputs: [{ name: "hookData", type: "bytes", internalType: "bytes" }],
        outputs: [],
        stateMutability: "payable",
    },
    {
        type: "function",
        name: "preCheck",
        inputs: [
            { name: "msgSender", type: "address", internalType: "address" },
            { name: "value", type: "uint256", internalType: "uint256" },
            { name: "", type: "bytes", internalType: "bytes" },
        ],
        outputs: [{ name: "", type: "bytes", internalType: "bytes" }],
        stateMutability: "payable",
    },
    {
        type: "function",
        name: "validateUserOp",
        inputs: [
            {
                name: "userOp",
                type: "tuple",
                internalType: "struct PackedUserOperation",
                components: [
                    { name: "sender", type: "address", internalType: "address" },
                    { name: "nonce", type: "uint256", internalType: "uint256" },
                    { name: "initCode", type: "bytes", internalType: "bytes" },
                    { name: "callData", type: "bytes", internalType: "bytes" },
                    { name: "accountGasLimits", type: "bytes32", internalType: "bytes32" },
                    { name: "preVerificationGas", type: "uint256", internalType: "uint256" },
                    { name: "gasFees", type: "bytes32", internalType: "bytes32" },
                    { name: "paymasterAndData", type: "bytes", internalType: "bytes" },
                    { name: "signature", type: "bytes", internalType: "bytes" },
                ],
            },
            { name: "userOpHash", type: "bytes32", internalType: "bytes32" },
        ],
        outputs: [{ name: "", type: "uint256", internalType: "uint256" }],
        stateMutability: "payable",
    },
    {
        type: "function",
        name: "addOwner",
        inputs: [{ name: "owner", type: "address", internalType: "address" }],
        outputs: [],
        stateMutability: "nonpayable",
    },
    {
        type: "function",
        name: "executeBatchOnOwnedAccount",
        inputs: [
            { name: "ownedAccount", type: "address", internalType: "address" },
            { name: "callData", type: "bytes", internalType: "bytes" },
        ],
        outputs: [],
        stateMutability: "payable",
    },
    {
        type: "function",
        name: "executeBatchOnOwnedAccountWithSignature",
        inputs: [
            {
                name: "signatureExecution",
                type: "tuple",
                internalType: "struct SignatureExecutionLib.SignatureExecution",
                components: [
                    { name: "account", type: "address", internalType: "address" },
                    { name: "nonce", type: "uint256", internalType: "uint256" },
                    { name: "validAfter", type: "uint48", internalType: "uint48" },
                    { name: "validUntil", type: "uint48", internalType: "uint48" },
                    { name: "value", type: "uint256", internalType: "uint256" },
                    { name: "callData", type: "bytes", internalType: "bytes" },
                ],
            },
            { name: "signature", type: "bytes", internalType: "bytes" },
        ],
        outputs: [],
        stateMutability: "payable",
    },
    {
        type: "function",
        name: "executeOnOwnedAccount",
        inputs: [
            { name: "ownedAccount", type: "address", internalType: "address" },
            { name: "callData", type: "bytes", internalType: "bytes" },
        ],
        outputs: [],
        stateMutability: "payable",
    },
    {
        type: "function",
        name: "executeOnOwnedAccountWithSignature",
        inputs: [
            {
                name: "signatureExecution",
                type: "tuple",
                internalType: "struct SignatureExecutionLib.SignatureExecution",
                components: [
                    { name: "account", type: "address", internalType: "address" },
                    { name: "nonce", type: "uint256", internalType: "uint256" },
                    { name: "validAfter", type: "uint48", internalType: "uint48" },
                    { name: "validUntil", type: "uint48", internalType: "uint48" },
                    { name: "value", type: "uint256", internalType: "uint256" },
                    { name: "callData", type: "bytes", internalType: "bytes" },
                ],
            },
            { name: "signature", type: "bytes", internalType: "bytes" },
        ],
        outputs: [],
        stateMutability: "payable",
    },
    {
        type: "function",
        name: "getNonce",
        inputs: [
            { name: "sender", type: "address", internalType: "address" },
            { name: "key", type: "uint192", internalType: "uint192" },
        ],
        outputs: [{ name: "nonce", type: "uint256", internalType: "uint256" }],
        stateMutability: "view",
    },
    {
        type: "function",
        name: "getOwners",
        inputs: [{ name: "account", type: "address", internalType: "address" }],
        outputs: [{ name: "ownersArray", type: "address[]", internalType: "address[]" }],
        stateMutability: "view",
    },
    {
        type: "function",
        name: "incrementNonce",
        inputs: [{ name: "key", type: "uint192", internalType: "uint192" }],
        outputs: [],
        stateMutability: "nonpayable",
    },
    {
        type: "function",
        name: "nonceSequenceNumber",
        inputs: [
            { name: "", type: "address", internalType: "address" },
            { name: "", type: "uint192", internalType: "uint192" },
        ],
        outputs: [{ name: "", type: "uint256", internalType: "uint256" }],
        stateMutability: "view",
    },
    {
        type: "function",
        name: "ownerCount",
        inputs: [{ name: "", type: "address", internalType: "address" }],
        outputs: [{ name: "", type: "uint256", internalType: "uint256" }],
        stateMutability: "view",
    },
    {
        type: "function",
        name: "removeOwner",
        inputs: [
            { name: "prevOwner", type: "address", internalType: "address" },
            { name: "owner", type: "address", internalType: "address" },
        ],
        outputs: [],
        stateMutability: "nonpayable",
    },
    {
        type: "function",
        name: "accountImplementation",
        inputs: [],
        outputs: [{ name: "", type: "address", internalType: "contract SimpleAccount" }],
        stateMutability: "view",
    },
    {
        type: "function",
        name: "createAccount",
        inputs: [
            { name: "owner", type: "address", internalType: "address" },
            { name: "salt", type: "uint256", internalType: "uint256" },
        ],
        outputs: [{ name: "ret", type: "address", internalType: "contract SimpleAccount" }],
        stateMutability: "nonpayable",
    },
    {
        type: "function",
        name: "getAddress",
        inputs: [
            { name: "owner", type: "address", internalType: "address" },
            { name: "salt", type: "uint256", internalType: "uint256" },
        ],
        outputs: [{ name: "", type: "address", internalType: "address" }],
        stateMutability: "view",
    },
    {
        type: "function",
        name: "addStake",
        inputs: [{ name: "_unstakeDelaySec", type: "uint32", internalType: "uint32" }],
        outputs: [],
        stateMutability: "payable",
    },
    {
        type: "function",
        name: "delegateAndRevert",
        inputs: [
            { name: "target", type: "address", internalType: "address" },
            { name: "data", type: "bytes", internalType: "bytes" },
        ],
        outputs: [],
        stateMutability: "nonpayable",
    },
    {
        type: "function",
        name: "depositTo",
        inputs: [{ name: "account", type: "address", internalType: "address" }],
        outputs: [],
        stateMutability: "payable",
    },
    {
        type: "function",
        name: "getDepositInfo",
        inputs: [{ name: "account", type: "address", internalType: "address" }],
        outputs: [
            {
                name: "info",
                type: "tuple",
                internalType: "struct IStakeManager.DepositInfo",
                components: [
                    { name: "deposit", type: "uint256", internalType: "uint256" },
                    { name: "staked", type: "bool", internalType: "bool" },
                    { name: "stake", type: "uint112", internalType: "uint112" },
                    { name: "unstakeDelaySec", type: "uint32", internalType: "uint32" },
                    { name: "withdrawTime", type: "uint48", internalType: "uint48" },
                ],
            },
        ],
        stateMutability: "view",
    },
    {
        type: "function",
        name: "getSenderAddress",
        inputs: [{ name: "initCode", type: "bytes", internalType: "bytes" }],
        outputs: [],
        stateMutability: "nonpayable",
    },
    {
        type: "function",
        name: "getUserOpHash",
        inputs: [
            {
                name: "userOp",
                type: "tuple",
                internalType: "struct PackedUserOperation",
                components: [
                    { name: "sender", type: "address", internalType: "address" },
                    { name: "nonce", type: "uint256", internalType: "uint256" },
                    { name: "initCode", type: "bytes", internalType: "bytes" },
                    { name: "callData", type: "bytes", internalType: "bytes" },
                    { name: "accountGasLimits", type: "bytes32", internalType: "bytes32" },
                    { name: "preVerificationGas", type: "uint256", internalType: "uint256" },
                    { name: "gasFees", type: "bytes32", internalType: "bytes32" },
                    { name: "paymasterAndData", type: "bytes", internalType: "bytes" },
                    { name: "signature", type: "bytes", internalType: "bytes" },
                ],
            },
        ],
        outputs: [{ name: "", type: "bytes32", internalType: "bytes32" }],
        stateMutability: "view",
    },
    {
        type: "function",
        name: "handleAggregatedOps",
        inputs: [
            {
                name: "opsPerAggregator",
                type: "tuple[]",
                internalType: "struct IEntryPoint.UserOpsPerAggregator[]",
                components: [
                    {
                        name: "userOps",
                        type: "tuple[]",
                        internalType: "struct PackedUserOperation[]",
                        components: [
                            { name: "sender", type: "address", internalType: "address" },
                            { name: "nonce", type: "uint256", internalType: "uint256" },
                            { name: "initCode", type: "bytes", internalType: "bytes" },
                            { name: "callData", type: "bytes", internalType: "bytes" },
                            { name: "accountGasLimits", type: "bytes32", internalType: "bytes32" },
                            { name: "preVerificationGas", type: "uint256", internalType: "uint256" },
                            { name: "gasFees", type: "bytes32", internalType: "bytes32" },
                            { name: "paymasterAndData", type: "bytes", internalType: "bytes" },
                            { name: "signature", type: "bytes", internalType: "bytes" },
                        ],
                    },
                    { name: "aggregator", type: "address", internalType: "contract IAggregator" },
                    { name: "signature", type: "bytes", internalType: "bytes" },
                ],
            },
            { name: "beneficiary", type: "address", internalType: "address payable" },
        ],
        outputs: [],
        stateMutability: "nonpayable",
    },
    {
        type: "function",
        name: "handleOps",
        inputs: [
            {
                name: "ops",
                type: "tuple[]",
                internalType: "struct PackedUserOperation[]",
                components: [
                    { name: "sender", type: "address", internalType: "address" },
                    { name: "nonce", type: "uint256", internalType: "uint256" },
                    { name: "initCode", type: "bytes", internalType: "bytes" },
                    { name: "callData", type: "bytes", internalType: "bytes" },
                    { name: "accountGasLimits", type: "bytes32", internalType: "bytes32" },
                    { name: "preVerificationGas", type: "uint256", internalType: "uint256" },
                    { name: "gasFees", type: "bytes32", internalType: "bytes32" },
                    { name: "paymasterAndData", type: "bytes", internalType: "bytes" },
                    { name: "signature", type: "bytes", internalType: "bytes" },
                ],
            },
            { name: "beneficiary", type: "address", internalType: "address payable" },
        ],
        outputs: [],
        stateMutability: "nonpayable",
    },
    { type: "function", name: "unlockStake", inputs: [], outputs: [], stateMutability: "nonpayable" },
    {
        type: "function",
        name: "withdrawStake",
        inputs: [{ name: "withdrawAddress", type: "address", internalType: "address payable" }],
        outputs: [],
        stateMutability: "nonpayable",
    },
    {
        type: "function",
        name: "withdrawTo",
        inputs: [
            { name: "withdrawAddress", type: "address", internalType: "address payable" },
            { name: "withdrawAmount", type: "uint256", internalType: "uint256" },
        ],
        outputs: [],
        stateMutability: "nonpayable",
    },
    {
        type: "function",
        name: "deposits",
        inputs: [{ name: "", type: "address", internalType: "address" }],
        outputs: [
            { name: "deposit", type: "uint256", internalType: "uint256" },
            { name: "staked", type: "bool", internalType: "bool" },
            { name: "stake", type: "uint112", internalType: "uint112" },
            { name: "unstakeDelaySec", type: "uint32", internalType: "uint32" },
            { name: "withdrawTime", type: "uint48", internalType: "uint48" },
        ],
        stateMutability: "view",
    },
    {
        type: "function",
        name: "getGasConsumed",
        inputs: [
            { name: "account", type: "address", internalType: "address" },
            { name: "phase", type: "uint256", internalType: "uint256" },
        ],
        outputs: [{ name: "", type: "uint256", internalType: "uint256" }],
        stateMutability: "view",
    },
    {
        type: "function",
        name: "innerHandleOp",
        inputs: [
            { name: "callData", type: "bytes", internalType: "bytes" },
            {
                name: "opInfo",
                type: "tuple",
                internalType: "struct EntryPoint.UserOpInfo",
                components: [
                    {
                        name: "mUserOp",
                        type: "tuple",
                        internalType: "struct EntryPoint.MemoryUserOp",
                        components: [
                            { name: "sender", type: "address", internalType: "address" },
                            { name: "nonce", type: "uint256", internalType: "uint256" },
                            { name: "verificationGasLimit", type: "uint256", internalType: "uint256" },
                            { name: "callGasLimit", type: "uint256", internalType: "uint256" },
                            { name: "paymasterVerificationGasLimit", type: "uint256", internalType: "uint256" },
                            { name: "paymasterPostOpGasLimit", type: "uint256", internalType: "uint256" },
                            { name: "preVerificationGas", type: "uint256", internalType: "uint256" },
                            { name: "paymaster", type: "address", internalType: "address" },
                            { name: "maxFeePerGas", type: "uint256", internalType: "uint256" },
                            { name: "maxPriorityFeePerGas", type: "uint256", internalType: "uint256" },
                        ],
                    },
                    { name: "userOpHash", type: "bytes32", internalType: "bytes32" },
                    { name: "prefund", type: "uint256", internalType: "uint256" },
                    { name: "contextOffset", type: "uint256", internalType: "uint256" },
                    { name: "preOpGas", type: "uint256", internalType: "uint256" },
                ],
            },
            { name: "context", type: "bytes", internalType: "bytes" },
        ],
        outputs: [{ name: "actualGasCost", type: "uint256", internalType: "uint256" }],
        stateMutability: "nonpayable",
    },
    {
        type: "function",
        name: "entryPoint",
        inputs: [],
        outputs: [{ name: "", type: "address", internalType: "contract IEntryPoint" }],
        stateMutability: "view",
    },
    {
        type: "function",
        name: "getDeposit",
        inputs: [],
        outputs: [{ name: "", type: "uint256", internalType: "uint256" }],
        stateMutability: "view",
    },
    {
        type: "function",
        name: "postOp",
        inputs: [
            { name: "mode", type: "uint8", internalType: "enum IPaymaster.PostOpMode" },
            { name: "context", type: "bytes", internalType: "bytes" },
            { name: "actualGasCost", type: "uint256", internalType: "uint256" },
            { name: "actualUserOpFeePerGas", type: "uint256", internalType: "uint256" },
        ],
        outputs: [],
        stateMutability: "nonpayable",
    },
    {
        type: "function",
        name: "validatePaymasterUserOp",
        inputs: [
            {
                name: "userOp",
                type: "tuple",
                internalType: "struct PackedUserOperation",
                components: [
                    { name: "sender", type: "address", internalType: "address" },
                    { name: "nonce", type: "uint256", internalType: "uint256" },
                    { name: "initCode", type: "bytes", internalType: "bytes" },
                    { name: "callData", type: "bytes", internalType: "bytes" },
                    { name: "accountGasLimits", type: "bytes32", internalType: "bytes32" },
                    { name: "preVerificationGas", type: "uint256", internalType: "uint256" },
                    { name: "gasFees", type: "bytes32", internalType: "bytes32" },
                    { name: "paymasterAndData", type: "bytes", internalType: "bytes" },
                    { name: "signature", type: "bytes", internalType: "bytes" },
                ],
            },
            { name: "userOpHash", type: "bytes32", internalType: "bytes32" },
            { name: "maxCost", type: "uint256", internalType: "uint256" },
        ],
        outputs: [
            { name: "context", type: "bytes", internalType: "bytes" },
            { name: "validationData", type: "uint256", internalType: "uint256" },
        ],
        stateMutability: "nonpayable",
    },
    {
        type: "function",
        name: "payUserOp",
        inputs: [
            { name: "sender", type: "address", internalType: "address" },
            { name: "nonce", type: "uint256", internalType: "uint256" },
        ],
        outputs: [],
        stateMutability: "payable",
    },
    {
        type: "function",
        name: "burn",
        inputs: [{ name: "amount", type: "uint256", internalType: "uint256" }],
        outputs: [],
        stateMutability: "nonpayable",
    },
    {
        type: "function",
        name: "getBasket",
        inputs: [],
        outputs: [
            {
                name: "",
                type: "tuple[]",
                internalType: "struct BasketFixedUnits.BasketToken[]",
                components: [
                    { name: "addr", type: "address", internalType: "address" },
                    { name: "units", type: "uint256", internalType: "uint256" },
                ],
            },
        ],
        stateMutability: "view",
    },
    {
        type: "function",
        name: "getMintUnits",
        inputs: [{ name: "amount", type: "uint256", internalType: "uint256" }],
        outputs: [
            {
                name: "mintUnits",
                type: "tuple[]",
                internalType: "struct BasketFixedUnits.BasketToken[]",
                components: [
                    { name: "addr", type: "address", internalType: "address" },
                    { name: "units", type: "uint256", internalType: "uint256" },
                ],
            },
        ],
        stateMutability: "view",
    },
    {
        type: "function",
        name: "mint",
        inputs: [
            { name: "amount", type: "uint256", internalType: "uint256" },
            { name: "receiver", type: "address", internalType: "address" },
            { name: "referrer", type: "address", internalType: "address" },
        ],
        outputs: [],
        stateMutability: "payable",
    },
    {
        type: "function",
        name: "mintFeeCentiBips",
        inputs: [],
        outputs: [{ name: "", type: "uint256", internalType: "uint256" }],
        stateMutability: "view",
    },
    {
        type: "function",
        name: "execute",
        inputs: [
            { name: "target", type: "address", internalType: "address" },
            { name: "data", type: "bytes", internalType: "bytes" },
            { name: "value", type: "uint256", internalType: "uint256" },
        ],
        outputs: [{ name: "", type: "bytes", internalType: "bytes" }],
        stateMutability: "payable",
    },
    {
        type: "function",
        name: "approvalRequired",
        inputs: [],
        outputs: [{ name: "", type: "bool", internalType: "bool" }],
        stateMutability: "view",
    },
    {
        type: "function",
        name: "oftVersion",
        inputs: [],
        outputs: [
            { name: "interfaceId", type: "bytes4", internalType: "bytes4" },
            { name: "version", type: "uint64", internalType: "uint64" },
        ],
        stateMutability: "view",
    },
    {
        type: "function",
        name: "quoteOFT",
        inputs: [
            {
                name: "_sendParam",
                type: "tuple",
                internalType: "struct SendParam",
                components: [
                    { name: "dstEid", type: "uint32", internalType: "uint32" },
                    { name: "to", type: "bytes32", internalType: "bytes32" },
                    { name: "amountLD", type: "uint256", internalType: "uint256" },
                    { name: "minAmountLD", type: "uint256", internalType: "uint256" },
                    { name: "extraOptions", type: "bytes", internalType: "bytes" },
                    { name: "composeMsg", type: "bytes", internalType: "bytes" },
                    { name: "oftCmd", type: "bytes", internalType: "bytes" },
                ],
            },
        ],
        outputs: [
            {
                name: "",
                type: "tuple",
                internalType: "struct OFTLimit",
                components: [
                    { name: "minAmountLD", type: "uint256", internalType: "uint256" },
                    { name: "maxAmountLD", type: "uint256", internalType: "uint256" },
                ],
            },
            {
                name: "oftFeeDetails",
                type: "tuple[]",
                internalType: "struct OFTFeeDetail[]",
                components: [
                    { name: "feeAmountLD", type: "int256", internalType: "int256" },
                    { name: "description", type: "string", internalType: "string" },
                ],
            },
            {
                name: "",
                type: "tuple",
                internalType: "struct OFTReceipt",
                components: [
                    { name: "amountSentLD", type: "uint256", internalType: "uint256" },
                    { name: "amountReceivedLD", type: "uint256", internalType: "uint256" },
                ],
            },
        ],
        stateMutability: "view",
    },
    {
        type: "function",
        name: "quoteSend",
        inputs: [
            {
                name: "_sendParam",
                type: "tuple",
                internalType: "struct SendParam",
                components: [
                    { name: "dstEid", type: "uint32", internalType: "uint32" },
                    { name: "to", type: "bytes32", internalType: "bytes32" },
                    { name: "amountLD", type: "uint256", internalType: "uint256" },
                    { name: "minAmountLD", type: "uint256", internalType: "uint256" },
                    { name: "extraOptions", type: "bytes", internalType: "bytes" },
                    { name: "composeMsg", type: "bytes", internalType: "bytes" },
                    { name: "oftCmd", type: "bytes", internalType: "bytes" },
                ],
            },
            { name: "_payInLzToken", type: "bool", internalType: "bool" },
        ],
        outputs: [
            {
                name: "",
                type: "tuple",
                internalType: "struct MessagingFee",
                components: [
                    { name: "nativeFee", type: "uint256", internalType: "uint256" },
                    { name: "lzTokenFee", type: "uint256", internalType: "uint256" },
                ],
            },
        ],
        stateMutability: "view",
    },
    {
        type: "function",
        name: "send",
        inputs: [
            {
                name: "_sendParam",
                type: "tuple",
                internalType: "struct SendParam",
                components: [
                    { name: "dstEid", type: "uint32", internalType: "uint32" },
                    { name: "to", type: "bytes32", internalType: "bytes32" },
                    { name: "amountLD", type: "uint256", internalType: "uint256" },
                    { name: "minAmountLD", type: "uint256", internalType: "uint256" },
                    { name: "extraOptions", type: "bytes", internalType: "bytes" },
                    { name: "composeMsg", type: "bytes", internalType: "bytes" },
                    { name: "oftCmd", type: "bytes", internalType: "bytes" },
                ],
            },
            {
                name: "_fee",
                type: "tuple",
                internalType: "struct MessagingFee",
                components: [
                    { name: "nativeFee", type: "uint256", internalType: "uint256" },
                    { name: "lzTokenFee", type: "uint256", internalType: "uint256" },
                ],
            },
            { name: "_refundAddress", type: "address", internalType: "address" },
        ],
        outputs: [
            {
                name: "",
                type: "tuple",
                internalType: "struct MessagingReceipt",
                components: [
                    { name: "guid", type: "bytes32", internalType: "bytes32" },
                    { name: "nonce", type: "uint64", internalType: "uint64" },
                    {
                        name: "fee",
                        type: "tuple",
                        internalType: "struct MessagingFee",
                        components: [
                            { name: "nativeFee", type: "uint256", internalType: "uint256" },
                            { name: "lzTokenFee", type: "uint256", internalType: "uint256" },
                        ],
                    },
                ],
            },
            {
                name: "",
                type: "tuple",
                internalType: "struct OFTReceipt",
                components: [
                    { name: "amountSentLD", type: "uint256", internalType: "uint256" },
                    { name: "amountReceivedLD", type: "uint256", internalType: "uint256" },
                ],
            },
        ],
        stateMutability: "payable",
    },
    {
        type: "function",
        name: "sendToken",
        inputs: [
            {
                name: "_sendParam",
                type: "tuple",
                internalType: "struct SendParam",
                components: [
                    { name: "dstEid", type: "uint32", internalType: "uint32" },
                    { name: "to", type: "bytes32", internalType: "bytes32" },
                    { name: "amountLD", type: "uint256", internalType: "uint256" },
                    { name: "minAmountLD", type: "uint256", internalType: "uint256" },
                    { name: "extraOptions", type: "bytes", internalType: "bytes" },
                    { name: "composeMsg", type: "bytes", internalType: "bytes" },
                    { name: "oftCmd", type: "bytes", internalType: "bytes" },
                ],
            },
            {
                name: "_fee",
                type: "tuple",
                internalType: "struct MessagingFee",
                components: [
                    { name: "nativeFee", type: "uint256", internalType: "uint256" },
                    { name: "lzTokenFee", type: "uint256", internalType: "uint256" },
                ],
            },
            { name: "_refundAddress", type: "address", internalType: "address" },
        ],
        outputs: [
            {
                name: "msgReceipt",
                type: "tuple",
                internalType: "struct MessagingReceipt",
                components: [
                    { name: "guid", type: "bytes32", internalType: "bytes32" },
                    { name: "nonce", type: "uint64", internalType: "uint64" },
                    {
                        name: "fee",
                        type: "tuple",
                        internalType: "struct MessagingFee",
                        components: [
                            { name: "nativeFee", type: "uint256", internalType: "uint256" },
                            { name: "lzTokenFee", type: "uint256", internalType: "uint256" },
                        ],
                    },
                ],
            },
            {
                name: "oftReceipt",
                type: "tuple",
                internalType: "struct OFTReceipt",
                components: [
                    { name: "amountSentLD", type: "uint256", internalType: "uint256" },
                    { name: "amountReceivedLD", type: "uint256", internalType: "uint256" },
                ],
            },
            {
                name: "ticket",
                type: "tuple",
                internalType: "struct Ticket",
                components: [
                    { name: "ticketId", type: "uint72", internalType: "uint72" },
                    { name: "passengerBytes", type: "bytes", internalType: "bytes" },
                ],
            },
        ],
        stateMutability: "payable",
    },
    {
        type: "function",
        name: "sharedDecimals",
        inputs: [],
        outputs: [{ name: "", type: "uint8", internalType: "uint8" }],
        stateMutability: "view",
    },
    {
        type: "function",
        name: "stargateType",
        inputs: [],
        outputs: [{ name: "", type: "uint8", internalType: "enum StargateType" }],
        stateMutability: "pure",
    },
    {
        type: "function",
        name: "token",
        inputs: [],
        outputs: [{ name: "", type: "address", internalType: "address" }],
        stateMutability: "view",
    },
] as const;
