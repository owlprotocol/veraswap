import { Hex } from "viem";

export const _constructor = {
    type: "constructor",
    inputs: [
        { name: "erc20", type: "address", internalType: "address" },
        { name: "_mailbox", type: "address", internalType: "address" },
    ],
    stateMutability: "nonpayable",
} as const;
export const PACKAGE_VERSION = {
    type: "function",
    name: "PACKAGE_VERSION",
    inputs: [],
    outputs: [{ name: "", type: "string", internalType: "string" }],
    stateMutability: "view",
} as const;
export const balanceOf = {
    type: "function",
    name: "balanceOf",
    inputs: [{ name: "_account", type: "address", internalType: "address" }],
    outputs: [{ name: "", type: "uint256", internalType: "uint256" }],
    stateMutability: "view",
} as const;
export const destinationGas = {
    type: "function",
    name: "destinationGas",
    inputs: [{ name: "", type: "uint32", internalType: "uint32" }],
    outputs: [{ name: "", type: "uint256", internalType: "uint256" }],
    stateMutability: "view",
} as const;
export const domains = {
    type: "function",
    name: "domains",
    inputs: [],
    outputs: [{ name: "", type: "uint32[]", internalType: "uint32[]" }],
    stateMutability: "view",
} as const;
export const enrollRemoteRouter = {
    type: "function",
    name: "enrollRemoteRouter",
    inputs: [
        { name: "_domain", type: "uint32", internalType: "uint32" },
        { name: "_router", type: "bytes32", internalType: "bytes32" },
    ],
    outputs: [],
    stateMutability: "nonpayable",
} as const;
export const enrollRemoteRouters = {
    type: "function",
    name: "enrollRemoteRouters",
    inputs: [
        { name: "_domains", type: "uint32[]", internalType: "uint32[]" },
        { name: "_addresses", type: "bytes32[]", internalType: "bytes32[]" },
    ],
    outputs: [],
    stateMutability: "nonpayable",
} as const;
export const handle = {
    type: "function",
    name: "handle",
    inputs: [
        { name: "_origin", type: "uint32", internalType: "uint32" },
        { name: "_sender", type: "bytes32", internalType: "bytes32" },
        { name: "_message", type: "bytes", internalType: "bytes" },
    ],
    outputs: [],
    stateMutability: "payable",
} as const;
export const hook = {
    type: "function",
    name: "hook",
    inputs: [],
    outputs: [{ name: "", type: "address", internalType: "contract IPostDispatchHook" }],
    stateMutability: "view",
} as const;
export const initialize = {
    type: "function",
    name: "initialize",
    inputs: [
        { name: "_hook", type: "address", internalType: "address" },
        { name: "_interchainSecurityModule", type: "address", internalType: "address" },
        { name: "_owner", type: "address", internalType: "address" },
    ],
    outputs: [],
    stateMutability: "nonpayable",
} as const;
export const interchainSecurityModule = {
    type: "function",
    name: "interchainSecurityModule",
    inputs: [],
    outputs: [{ name: "", type: "address", internalType: "contract IInterchainSecurityModule" }],
    stateMutability: "view",
} as const;
export const localDomain = {
    type: "function",
    name: "localDomain",
    inputs: [],
    outputs: [{ name: "", type: "uint32", internalType: "uint32" }],
    stateMutability: "view",
} as const;
export const mailbox = {
    type: "function",
    name: "mailbox",
    inputs: [],
    outputs: [{ name: "", type: "address", internalType: "contract IMailbox" }],
    stateMutability: "view",
} as const;
export const owner = {
    type: "function",
    name: "owner",
    inputs: [],
    outputs: [{ name: "", type: "address", internalType: "address" }],
    stateMutability: "view",
} as const;
export const quoteGasPayment = {
    type: "function",
    name: "quoteGasPayment",
    inputs: [{ name: "_destinationDomain", type: "uint32", internalType: "uint32" }],
    outputs: [{ name: "", type: "uint256", internalType: "uint256" }],
    stateMutability: "view",
} as const;
export const renounceOwnership = {
    type: "function",
    name: "renounceOwnership",
    inputs: [],
    outputs: [],
    stateMutability: "nonpayable",
} as const;
export const routers = {
    type: "function",
    name: "routers",
    inputs: [{ name: "_domain", type: "uint32", internalType: "uint32" }],
    outputs: [{ name: "", type: "bytes32", internalType: "bytes32" }],
    stateMutability: "view",
} as const;
export const setDestinationGas = {
    type: "function",
    name: "setDestinationGas",
    inputs: [
        { name: "domain", type: "uint32", internalType: "uint32" },
        { name: "gas", type: "uint256", internalType: "uint256" },
    ],
    outputs: [],
    stateMutability: "nonpayable",
} as const;
export const setDestinationGas__uint32_uint256_array = {
    type: "function",
    name: "setDestinationGas",
    inputs: [
        {
            name: "gasConfigs",
            type: "tuple[]",
            internalType: "struct GasRouter.GasRouterConfig[]",
            components: [
                { name: "domain", type: "uint32", internalType: "uint32" },
                { name: "gas", type: "uint256", internalType: "uint256" },
            ],
        },
    ],
    outputs: [],
    stateMutability: "nonpayable",
} as const;
export const setHook = {
    type: "function",
    name: "setHook",
    inputs: [{ name: "_hook", type: "address", internalType: "address" }],
    outputs: [],
    stateMutability: "nonpayable",
} as const;
export const setInterchainSecurityModule = {
    type: "function",
    name: "setInterchainSecurityModule",
    inputs: [{ name: "_module", type: "address", internalType: "address" }],
    outputs: [],
    stateMutability: "nonpayable",
} as const;
export const transferOwnership = {
    type: "function",
    name: "transferOwnership",
    inputs: [{ name: "newOwner", type: "address", internalType: "address" }],
    outputs: [],
    stateMutability: "nonpayable",
} as const;
export const transferRemote = {
    type: "function",
    name: "transferRemote",
    inputs: [
        { name: "_destination", type: "uint32", internalType: "uint32" },
        { name: "_recipient", type: "bytes32", internalType: "bytes32" },
        { name: "_amountOrId", type: "uint256", internalType: "uint256" },
        { name: "_hookMetadata", type: "bytes", internalType: "bytes" },
        { name: "_hook", type: "address", internalType: "address" },
    ],
    outputs: [{ name: "messageId", type: "bytes32", internalType: "bytes32" }],
    stateMutability: "payable",
} as const;
export const transferRemote_uint32_bytes32_uint256 = {
    type: "function",
    name: "transferRemote",
    inputs: [
        { name: "_destination", type: "uint32", internalType: "uint32" },
        { name: "_recipient", type: "bytes32", internalType: "bytes32" },
        { name: "_amountOrId", type: "uint256", internalType: "uint256" },
    ],
    outputs: [{ name: "messageId", type: "bytes32", internalType: "bytes32" }],
    stateMutability: "payable",
} as const;
export const unenrollRemoteRouter = {
    type: "function",
    name: "unenrollRemoteRouter",
    inputs: [{ name: "_domain", type: "uint32", internalType: "uint32" }],
    outputs: [],
    stateMutability: "nonpayable",
} as const;
export const unenrollRemoteRouters = {
    type: "function",
    name: "unenrollRemoteRouters",
    inputs: [{ name: "_domains", type: "uint32[]", internalType: "uint32[]" }],
    outputs: [],
    stateMutability: "nonpayable",
} as const;
export const wrappedToken = {
    type: "function",
    name: "wrappedToken",
    inputs: [],
    outputs: [{ name: "", type: "address", internalType: "contract IERC20" }],
    stateMutability: "view",
} as const;
export const GasSet = {
    type: "event",
    name: "GasSet",
    inputs: [
        { name: "domain", type: "uint32", indexed: false, internalType: "uint32" },
        { name: "gas", type: "uint256", indexed: false, internalType: "uint256" },
    ],
    anonymous: false,
} as const;
export const HookSet = {
    type: "event",
    name: "HookSet",
    inputs: [{ name: "_hook", type: "address", indexed: false, internalType: "address" }],
    anonymous: false,
} as const;
export const Initialized = {
    type: "event",
    name: "Initialized",
    inputs: [{ name: "version", type: "uint8", indexed: false, internalType: "uint8" }],
    anonymous: false,
} as const;
export const IsmSet = {
    type: "event",
    name: "IsmSet",
    inputs: [{ name: "_ism", type: "address", indexed: false, internalType: "address" }],
    anonymous: false,
} as const;
export const OwnershipTransferred = {
    type: "event",
    name: "OwnershipTransferred",
    inputs: [
        { name: "previousOwner", type: "address", indexed: true, internalType: "address" },
        { name: "newOwner", type: "address", indexed: true, internalType: "address" },
    ],
    anonymous: false,
} as const;
export const ReceivedTransferRemote = {
    type: "event",
    name: "ReceivedTransferRemote",
    inputs: [
        { name: "origin", type: "uint32", indexed: true, internalType: "uint32" },
        { name: "recipient", type: "bytes32", indexed: true, internalType: "bytes32" },
        { name: "amount", type: "uint256", indexed: false, internalType: "uint256" },
    ],
    anonymous: false,
} as const;
export const SentTransferRemote = {
    type: "event",
    name: "SentTransferRemote",
    inputs: [
        { name: "destination", type: "uint32", indexed: true, internalType: "uint32" },
        { name: "recipient", type: "bytes32", indexed: true, internalType: "bytes32" },
        { name: "amount", type: "uint256", indexed: false, internalType: "uint256" },
    ],
    anonymous: false,
} as const;
export const functions = [
    _constructor,
    PACKAGE_VERSION,
    balanceOf,
    destinationGas,
    domains,
    enrollRemoteRouter,
    enrollRemoteRouters,
    handle,
    hook,
    initialize,
    interchainSecurityModule,
    localDomain,
    mailbox,
    owner,
    quoteGasPayment,
    renounceOwnership,
    routers,
    setDestinationGas,
    setDestinationGas__uint32_uint256_array,
    setHook,
    setInterchainSecurityModule,
    transferOwnership,
    transferRemote,
    transferRemote_uint32_bytes32_uint256,
    unenrollRemoteRouter,
    unenrollRemoteRouters,
    wrappedToken,
] as const;
export const events = [
    GasSet,
    HookSet,
    Initialized,
    IsmSet,
    OwnershipTransferred,
    ReceivedTransferRemote,
    SentTransferRemote,
] as const;
export const errors = [] as const;
export const abi = [...functions, ...events, ...errors] as const;

export const bytecode =
    "0x60e080604052346101aa57604081611d09803803809161001f8285610206565b8339810103126101aa5761003e60206100378361023d565b920161023d565b803b156101c1576001600160a01b0316608081905260405163234d8e3d60e21b815290602090829060049082905afa9081156101b6575f91610173575b5060a05260338054336001600160a01b03198216811790925560405191906001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e05f80a3813b1561012757506001600160a01b031660c052604051611ab79081610252823960805181818161024b0152818161040f01528181610ac70152611325015260a05181610837015260c05181818161077801528181610a220152610b8b0152f35b62461bcd60e51b815260206004820152602160248201527f4879704552433230436f6c6c61746572616c3a20696e76616c696420746f6b656044820152603760f91b6064820152608490fd5b90506020813d6020116101ae575b8161018e60209383610206565b810103126101aa575163ffffffff811681036101aa575f61007b565b5f80fd5b3d9150610181565b6040513d5f823e3d90fd5b60405162461bcd60e51b815260206004820152601e60248201527f4d61696c626f78436c69656e743a20696e76616c6964206d61696c626f7800006044820152606490fd5b601f909101601f19168101906001600160401b0382119082101761022957604052565b634e487b7160e01b5f52604160045260245ffd5b51906001600160a01b03821682036101aa5756fe60806040526004361015610011575f80fd5b5f3560e01c80630e72cc0614610f7d5780632ead72f614610f4a5780633dfd387314610eb9578063440df4f414610d6757806349d462ef14610d3a57806351debffc14610cad57806356d5d47514610a8f57806370a08231146109df578063715018a61461098457806371a15b381461090f578063775313a1146108da5780637f5a7c7b146108b257806381b4e8b41461085b5780638d3638f41461081b5780638da5cb5b146107f357806393c44847146107a7578063996c6cc314610763578063b1bd6436146106b4578063b49c53a714610687578063c0c53b8b1461043e578063d5438eae146103fa578063de523cf3146103d2578063e9198bf9146102ed578063efae508a146102c4578063f2ed8c53146101ca5763f2fde38b14610137575f80fd5b346101c65760203660031901126101c65761015061100e565b610158611199565b6001600160a01b038116156101725761017090611415565b005b60405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608490fd5b5f80fd5b346101c65760203660031901126101c6576101e3611024565b60018060a01b03606554169060208092604051926102018385611096565b5f845263ffffffff81165f5260ca835261024761022160405f2054611774565b9261022b836113c4565b9360405196879586956381d2ea9560e01b875260048701611565565b03817f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03165afa9081156102b9575f9161028c575b50604051908152f35b90508181813d83116102b2575b6102a38183611096565b810103126101c6575182610283565b503d610299565b6040513d5f823e3d90fd5b346101c65760203660031901126101c6576101706102e0611024565b6102e8611199565b61145d565b346101c65760403660031901126101c65760043567ffffffffffffffff81116101c65761031e903690600401611065565b9060243567ffffffffffffffff81116101c65761033f903690600401611065565b91610348611199565b8284036103a3575f5b84811061035a57005b61038261037061036b838886611168565b611178565b61037b838787611168565b35906114b3565b6001810180911115610351575b634e487b7160e01b5f52601160045260245ffd5b60405162461bcd60e51b8152602060048201526007602482015266042d8cadccee8d60cb1b6044820152606490fd5b346101c6575f3660031901126101c6576066546040516001600160a01b039091168152602090f35b346101c6575f3660031901126101c6576040517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b346101c65760603660031901126101c65761045761100e565b6024356001600160a01b038116918282036101c657604435906001600160a01b03821682036101c6575f5460ff8160081c16159485809661067a575b8015610663575b15610607576105a1947f4eab7b127c764308788622363ad3e9532de3dfba7845bd4f84c125a22544255a60207fc47cbcc588c67679e52261c45cc315e56562f8d0ccaba16facb9093ff94987999581958a600160ff198316175f556105f6575b5061051d60ff5f5460081c1661050f816114d4565b610518816114d4565b6114d4565b61052633611415565b803b158015906105e5575b61053a9061110c565b610542611199565b606580546001600160a01b0319166001600160a01b03929092169182179055604051908152a13b158015906105dd575b61057b9061110c565b610583611199565b606680546001600160a01b03191682179055604051908152a1611415565b6105a757005b61ff00195f54165f557f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb3847402498602060405160018152a1005b508015610572565b506001600160a01b03811615610531565b61ffff1916610101175f558a6104fa565b60405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b6064820152608490fd5b50303b15801561049a5750600160ff83161461049a565b50600160ff831610610493565b346101c65760403660031901126101c6576101706106a3611024565b6106ab611199565b602435906114b3565b346101c65760203660031901126101c65760043567ffffffffffffffff81116101c657366023820112156101c657806004013567ffffffffffffffff81116101c6576024820191602436918360061b0101116101c657610712611199565b5f5b81811061071d57005b61074361072e61036b838587611189565b602061073b848688611189565b01359061121d565b600181018091111561071457634e487b7160e01b5f52601160045260245ffd5b346101c6575f3660031901126101c6576040517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b346101c6575f3660031901126101c6576107ef6040516107c8604082611096565b60068152650d4b8c4c4b8d60d21b60208201526040519182916020835260208301906110e8565b0390f35b346101c6575f3660031901126101c6576033546040516001600160a01b039091168152602090f35b346101c6575f3660031901126101c657602060405163ffffffff7f0000000000000000000000000000000000000000000000000000000000000000168152f35b60603660031901126101c65760206108aa610874611024565b63ffffffff81165f5260ca835261088e60405f2054611774565b6065546001600160a01b03169134906044359060243590611263565b604051908152f35b346101c6575f3660031901126101c6576065546040516001600160a01b039091168152602090f35b346101c65760203660031901126101c65763ffffffff6108f8611024565b165f5260ca602052602060405f2054604051908152f35b346101c65760203660031901126101c65760043567ffffffffffffffff81116101c657610940903690600401611065565b610948611199565b5f5b81811061095357005b6109646102e861036b838587611168565b600181018091111561094a57634e487b7160e01b5f52601160045260245ffd5b346101c6575f3660031901126101c65761099c611199565b603380546001600160a01b031981169091555f906001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a3005b346101c65760203660031901126101c6576109f861100e565b6040516370a0823160e01b81526001600160a01b03918216600482015290602090829060249082907f0000000000000000000000000000000000000000000000000000000000000000165afa80156102b9575f90610a5c575b602090604051908152f35b506020813d602011610a87575b81610a7660209383611096565b810103126101c65760209051610a51565b3d9150610a69565b60603660031901126101c657610aa3611024565b60443567ffffffffffffffff81116101c657610ac3903690600401611037565b91907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03163303610c5e57602435610b01836113c4565b03610c0b57826020116101c6578035926040116101c65760200135906001600160a01b038311610bba57602063ffffffff7fba20947a325f450d232530e5f5fce293e7963499d5309a07cee84a269f2f15a692610baf60405163a9059cbb60e01b8582015260018060a01b038816602482015286604482015260448152610b89606482611096565b7f00000000000000000000000000000000000000000000000000000000000000006117e8565b6040519485521692a3005b60405162461bcd60e51b8152602060048201526024808201527f5479706543617374733a2062797465733332546f41646472657373206f766572604482015263666c6f7760e01b6064820152608490fd5b60405162461bcd60e51b815260206004820152602560248201527f456e726f6c6c656420726f7574657220646f6573206e6f74206d61746368207360448201526432b73232b960d91b6064820152608490fd5b60405162461bcd60e51b815260206004820152602160248201527f4d61696c626f78436c69656e743a2073656e646572206e6f74206d61696c626f6044820152600f60fb1b6064820152608490fd5b60a03660031901126101c657610cc1611024565b60643567ffffffffffffffff81116101c657610ce1903690600401611037565b91608435906001600160a01b03821682036101c657610cff846110cc565b90610d0d6040519283611096565b84825236858501116101c6575f60208681976108aa97838701378401015234906044359060243590611263565b346101c65760403660031901126101c657610170610d56611024565b610d5e611199565b6024359061121d565b346101c6575f3660031901126101c657609754610d83816111f1565b90610d916040519283611096565b808252601f19610da0826111f1565b013660208401376097545f5b828110610e6057835184610dd8610dc2836111f1565b92610dd06040519485611096565b8084526111f1565b602083019190601f19013683375f5b8151811015610e15578063ffffffff610e0260019385611209565b5116610e0e8287611209565b5201610de7565b505090604051918291602083019060208452518091526040830191905f5b818110610e41575050500390f35b825163ffffffff16845285945060209384019390920191600101610e33565b81811015610ea55760975f527f354a83ed9988f79f6038d4c7a7dadbad8af32f4ad6df893e0e5807a1b1944ff981015460019190610e9e8287611209565b5201610dac565b634e487b7160e01b5f52603260045260245ffd5b346101c65760203660031901126101c6577f4eab7b127c764308788622363ad3e9532de3dfba7845bd4f84c125a22544255a6020610ef561100e565b803b15801590610f39575b610f099061110c565b610f11611199565b606580546001600160a01b0319166001600160a01b03929092169182179055604051908152a1005b506001600160a01b03811615610f00565b346101c65760203660031901126101c6576020610f7363ffffffff610f6d611024565b16611534565b9050604051908152f35b346101c65760203660031901126101c6577fc47cbcc588c67679e52261c45cc315e56562f8d0ccaba16facb9093ff94987996020610fb961100e565b803b15801590610ffd575b610fcd9061110c565b610fd5611199565b606680546001600160a01b0319166001600160a01b03929092169182179055604051908152a1005b506001600160a01b03811615610fc4565b600435906001600160a01b03821682036101c657565b6004359063ffffffff821682036101c657565b9181601f840112156101c65782359167ffffffffffffffff83116101c657602083818601950101116101c657565b9181601f840112156101c65782359167ffffffffffffffff83116101c6576020808501948460051b0101116101c657565b90601f8019910116810190811067ffffffffffffffff8211176110b857604052565b634e487b7160e01b5f52604160045260245ffd5b67ffffffffffffffff81116110b857601f01601f191660200190565b805180835260209291819084018484015e5f828201840152601f01601f1916010190565b1561111357565b60405162461bcd60e51b815260206004820152602760248201527f4d61696c626f78436c69656e743a20696e76616c696420636f6e74726163742060448201526673657474696e6760c81b6064820152608490fd5b9190811015610ea55760051b0190565b3563ffffffff811681036101c65790565b9190811015610ea55760061b0190565b6033546001600160a01b031633036111ad57565b606460405162461bcd60e51b815260206004820152602060248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152fd5b67ffffffffffffffff81116110b85760051b60200190565b8051821015610ea55760209160051b010190565b7fc3de732a98b24a2b5c6f67e8a7fb057ffc14046b83968a2c73e4148d2fba978b9163ffffffff6040921690815f5260ca60205280835f205582519182526020820152a1565b9594939192909361129e6040516323b872dd60e01b602082015233602482015230604482015285606482015260648152610b89608482611096565b6020809281926112ea60606040516112b68682611096565b5f81526040519586918c828401528b60408401528051918291018484015e81015f838201520301601f198101855284611096565b6112f38a6113c4565b6040516242e0f760e61b815296879485938493611321936001600160a01b0390921692908f60048701611565565b03917f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03165af19182156102b9575f92611391575b5063ffffffff7fd229aacb94204188fe8042965fa6b269c62dc5818b21238779ab64bdd17efeec92966040519485521692a3565b91508082813d83116113bd575b6113a88183611096565b810103126101c65790519063ffffffff61135d565b503d61139e565b63ffffffff16906113d482611534565b906114115761140d6113ed6113e885611607565b6115b1565b60405162461bcd60e51b81526020600482015291829160248301906110e8565b0390fd5b9150565b603380546001600160a01b039283166001600160a01b0319821681179092559091167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e05f80a3565b63ffffffff16805f5260996020525f60408120556114866113e861148083611900565b92611607565b901561148f5750565b60405162461bcd60e51b81526020600482015290819061140d9060248301906110e8565b9063ffffffff6114d1921690815f52609960205260405f20556119db565b50565b156114db57565b60405162461bcd60e51b815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201526a6e697469616c697a696e6760a81b6064820152608490fd5b805f52609960205260405f205480155f1461155d57505f52609860205260405f20541515905f90565b600192909150565b93906080936115a19363ffffffff61159393999899168752602087015260a0604087015260a08601906110e8565b9084820360608601526110e8565b6001600160a01b03909416910152565b90611605603f6020936040519485917f4e6f20726f7574657220656e726f6c6c656420666f7220646f6d61696e3a2000828401528051918291018484015e81015f838201520301601f198101845283611096565b565b805f9172184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b821015611751575b806d04ee2d6d415b85acef8100000000600a921015611736575b662386f26fc10000811015611722575b6305f5e100811015611711575b612710811015611702575b60648110156116f4575b10156116e9575b600a6021600184019361168e856110cc565b9461169c6040519687611096565b8086526116ab601f19916110cc565b013660208701378401015b5f1901916f181899199a1a9b1b9c1cb0b131b232b360811b8282061a83530480156116e457600a90916116b6565b505090565b60019091019061167c565b606460029104930192611675565b6127106004910493019261166b565b6305f5e10060089104930192611660565b662386f26fc1000060109104930192611653565b6d04ee2d6d415b85acef810000000060209104930192611643565b506040915072184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b8104611629565b6117d0607660405192611788602085611096565b5f84526020604051948592600160f01b838501525f602285015260428401523360601b60628401528051918291018484015e81015f838201520301601f198101835282611096565b90565b8054821015610ea5575f5260205f2001905f90565b906118679160018060a01b03165f8060405193611806604086611096565b602085527f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564602086015260208151910182855af13d156118f8573d9161184b836110cc565b926118596040519485611096565b83523d5f602085013e611a35565b80519081159182156118d5575b50501561187d57565b60405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152608490fd5b81925090602091810103126101c6576020015180151581036101c6575f80611874565b606091611a35565b5f8181526098602052604090205480156119d5575f19810181811161038f576097545f1981019190821161038f57808203611987575b5050506097548015611973575f19016119508160976117d3565b8154905f199060031b1b191690556097555f5260986020525f6040812055600190565b634e487b7160e01b5f52603160045260245ffd5b6119bf6119986119a99360976117d3565b90549060031b1c92839260976117d3565b819391549060031b91821b915f19901b19161790565b90555f52609860205260405f20555f8080611936565b50505f90565b805f52609860205260405f2054155f14611a3057609754680100000000000000008110156110b857611a196119a982600185940160975560976117d3565b9055609754905f52609860205260405f2055600190565b505f90565b91929015611a975750815115611a49575090565b3b15611a525790565b60405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606490fd5b82519091501561148f5750805190602001fdfea164736f6c634300081a000a" as Hex;
export const deployedBytecode =
    "0x60806040526004361015610011575f80fd5b5f3560e01c80630e72cc0614610f7d5780632ead72f614610f4a5780633dfd387314610eb9578063440df4f414610d6757806349d462ef14610d3a57806351debffc14610cad57806356d5d47514610a8f57806370a08231146109df578063715018a61461098457806371a15b381461090f578063775313a1146108da5780637f5a7c7b146108b257806381b4e8b41461085b5780638d3638f41461081b5780638da5cb5b146107f357806393c44847146107a7578063996c6cc314610763578063b1bd6436146106b4578063b49c53a714610687578063c0c53b8b1461043e578063d5438eae146103fa578063de523cf3146103d2578063e9198bf9146102ed578063efae508a146102c4578063f2ed8c53146101ca5763f2fde38b14610137575f80fd5b346101c65760203660031901126101c65761015061100e565b610158611199565b6001600160a01b038116156101725761017090611415565b005b60405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608490fd5b5f80fd5b346101c65760203660031901126101c6576101e3611024565b60018060a01b03606554169060208092604051926102018385611096565b5f845263ffffffff81165f5260ca835261024761022160405f2054611774565b9261022b836113c4565b9360405196879586956381d2ea9560e01b875260048701611565565b03817f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03165afa9081156102b9575f9161028c575b50604051908152f35b90508181813d83116102b2575b6102a38183611096565b810103126101c6575182610283565b503d610299565b6040513d5f823e3d90fd5b346101c65760203660031901126101c6576101706102e0611024565b6102e8611199565b61145d565b346101c65760403660031901126101c65760043567ffffffffffffffff81116101c65761031e903690600401611065565b9060243567ffffffffffffffff81116101c65761033f903690600401611065565b91610348611199565b8284036103a3575f5b84811061035a57005b61038261037061036b838886611168565b611178565b61037b838787611168565b35906114b3565b6001810180911115610351575b634e487b7160e01b5f52601160045260245ffd5b60405162461bcd60e51b8152602060048201526007602482015266042d8cadccee8d60cb1b6044820152606490fd5b346101c6575f3660031901126101c6576066546040516001600160a01b039091168152602090f35b346101c6575f3660031901126101c6576040517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b346101c65760603660031901126101c65761045761100e565b6024356001600160a01b038116918282036101c657604435906001600160a01b03821682036101c6575f5460ff8160081c16159485809661067a575b8015610663575b15610607576105a1947f4eab7b127c764308788622363ad3e9532de3dfba7845bd4f84c125a22544255a60207fc47cbcc588c67679e52261c45cc315e56562f8d0ccaba16facb9093ff94987999581958a600160ff198316175f556105f6575b5061051d60ff5f5460081c1661050f816114d4565b610518816114d4565b6114d4565b61052633611415565b803b158015906105e5575b61053a9061110c565b610542611199565b606580546001600160a01b0319166001600160a01b03929092169182179055604051908152a13b158015906105dd575b61057b9061110c565b610583611199565b606680546001600160a01b03191682179055604051908152a1611415565b6105a757005b61ff00195f54165f557f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb3847402498602060405160018152a1005b508015610572565b506001600160a01b03811615610531565b61ffff1916610101175f558a6104fa565b60405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b6064820152608490fd5b50303b15801561049a5750600160ff83161461049a565b50600160ff831610610493565b346101c65760403660031901126101c6576101706106a3611024565b6106ab611199565b602435906114b3565b346101c65760203660031901126101c65760043567ffffffffffffffff81116101c657366023820112156101c657806004013567ffffffffffffffff81116101c6576024820191602436918360061b0101116101c657610712611199565b5f5b81811061071d57005b61074361072e61036b838587611189565b602061073b848688611189565b01359061121d565b600181018091111561071457634e487b7160e01b5f52601160045260245ffd5b346101c6575f3660031901126101c6576040517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b346101c6575f3660031901126101c6576107ef6040516107c8604082611096565b60068152650d4b8c4c4b8d60d21b60208201526040519182916020835260208301906110e8565b0390f35b346101c6575f3660031901126101c6576033546040516001600160a01b039091168152602090f35b346101c6575f3660031901126101c657602060405163ffffffff7f0000000000000000000000000000000000000000000000000000000000000000168152f35b60603660031901126101c65760206108aa610874611024565b63ffffffff81165f5260ca835261088e60405f2054611774565b6065546001600160a01b03169134906044359060243590611263565b604051908152f35b346101c6575f3660031901126101c6576065546040516001600160a01b039091168152602090f35b346101c65760203660031901126101c65763ffffffff6108f8611024565b165f5260ca602052602060405f2054604051908152f35b346101c65760203660031901126101c65760043567ffffffffffffffff81116101c657610940903690600401611065565b610948611199565b5f5b81811061095357005b6109646102e861036b838587611168565b600181018091111561094a57634e487b7160e01b5f52601160045260245ffd5b346101c6575f3660031901126101c65761099c611199565b603380546001600160a01b031981169091555f906001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a3005b346101c65760203660031901126101c6576109f861100e565b6040516370a0823160e01b81526001600160a01b03918216600482015290602090829060249082907f0000000000000000000000000000000000000000000000000000000000000000165afa80156102b9575f90610a5c575b602090604051908152f35b506020813d602011610a87575b81610a7660209383611096565b810103126101c65760209051610a51565b3d9150610a69565b60603660031901126101c657610aa3611024565b60443567ffffffffffffffff81116101c657610ac3903690600401611037565b91907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03163303610c5e57602435610b01836113c4565b03610c0b57826020116101c6578035926040116101c65760200135906001600160a01b038311610bba57602063ffffffff7fba20947a325f450d232530e5f5fce293e7963499d5309a07cee84a269f2f15a692610baf60405163a9059cbb60e01b8582015260018060a01b038816602482015286604482015260448152610b89606482611096565b7f00000000000000000000000000000000000000000000000000000000000000006117e8565b6040519485521692a3005b60405162461bcd60e51b8152602060048201526024808201527f5479706543617374733a2062797465733332546f41646472657373206f766572604482015263666c6f7760e01b6064820152608490fd5b60405162461bcd60e51b815260206004820152602560248201527f456e726f6c6c656420726f7574657220646f6573206e6f74206d61746368207360448201526432b73232b960d91b6064820152608490fd5b60405162461bcd60e51b815260206004820152602160248201527f4d61696c626f78436c69656e743a2073656e646572206e6f74206d61696c626f6044820152600f60fb1b6064820152608490fd5b60a03660031901126101c657610cc1611024565b60643567ffffffffffffffff81116101c657610ce1903690600401611037565b91608435906001600160a01b03821682036101c657610cff846110cc565b90610d0d6040519283611096565b84825236858501116101c6575f60208681976108aa97838701378401015234906044359060243590611263565b346101c65760403660031901126101c657610170610d56611024565b610d5e611199565b6024359061121d565b346101c6575f3660031901126101c657609754610d83816111f1565b90610d916040519283611096565b808252601f19610da0826111f1565b013660208401376097545f5b828110610e6057835184610dd8610dc2836111f1565b92610dd06040519485611096565b8084526111f1565b602083019190601f19013683375f5b8151811015610e15578063ffffffff610e0260019385611209565b5116610e0e8287611209565b5201610de7565b505090604051918291602083019060208452518091526040830191905f5b818110610e41575050500390f35b825163ffffffff16845285945060209384019390920191600101610e33565b81811015610ea55760975f527f354a83ed9988f79f6038d4c7a7dadbad8af32f4ad6df893e0e5807a1b1944ff981015460019190610e9e8287611209565b5201610dac565b634e487b7160e01b5f52603260045260245ffd5b346101c65760203660031901126101c6577f4eab7b127c764308788622363ad3e9532de3dfba7845bd4f84c125a22544255a6020610ef561100e565b803b15801590610f39575b610f099061110c565b610f11611199565b606580546001600160a01b0319166001600160a01b03929092169182179055604051908152a1005b506001600160a01b03811615610f00565b346101c65760203660031901126101c6576020610f7363ffffffff610f6d611024565b16611534565b9050604051908152f35b346101c65760203660031901126101c6577fc47cbcc588c67679e52261c45cc315e56562f8d0ccaba16facb9093ff94987996020610fb961100e565b803b15801590610ffd575b610fcd9061110c565b610fd5611199565b606680546001600160a01b0319166001600160a01b03929092169182179055604051908152a1005b506001600160a01b03811615610fc4565b600435906001600160a01b03821682036101c657565b6004359063ffffffff821682036101c657565b9181601f840112156101c65782359167ffffffffffffffff83116101c657602083818601950101116101c657565b9181601f840112156101c65782359167ffffffffffffffff83116101c6576020808501948460051b0101116101c657565b90601f8019910116810190811067ffffffffffffffff8211176110b857604052565b634e487b7160e01b5f52604160045260245ffd5b67ffffffffffffffff81116110b857601f01601f191660200190565b805180835260209291819084018484015e5f828201840152601f01601f1916010190565b1561111357565b60405162461bcd60e51b815260206004820152602760248201527f4d61696c626f78436c69656e743a20696e76616c696420636f6e74726163742060448201526673657474696e6760c81b6064820152608490fd5b9190811015610ea55760051b0190565b3563ffffffff811681036101c65790565b9190811015610ea55760061b0190565b6033546001600160a01b031633036111ad57565b606460405162461bcd60e51b815260206004820152602060248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152fd5b67ffffffffffffffff81116110b85760051b60200190565b8051821015610ea55760209160051b010190565b7fc3de732a98b24a2b5c6f67e8a7fb057ffc14046b83968a2c73e4148d2fba978b9163ffffffff6040921690815f5260ca60205280835f205582519182526020820152a1565b9594939192909361129e6040516323b872dd60e01b602082015233602482015230604482015285606482015260648152610b89608482611096565b6020809281926112ea60606040516112b68682611096565b5f81526040519586918c828401528b60408401528051918291018484015e81015f838201520301601f198101855284611096565b6112f38a6113c4565b6040516242e0f760e61b815296879485938493611321936001600160a01b0390921692908f60048701611565565b03917f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03165af19182156102b9575f92611391575b5063ffffffff7fd229aacb94204188fe8042965fa6b269c62dc5818b21238779ab64bdd17efeec92966040519485521692a3565b91508082813d83116113bd575b6113a88183611096565b810103126101c65790519063ffffffff61135d565b503d61139e565b63ffffffff16906113d482611534565b906114115761140d6113ed6113e885611607565b6115b1565b60405162461bcd60e51b81526020600482015291829160248301906110e8565b0390fd5b9150565b603380546001600160a01b039283166001600160a01b0319821681179092559091167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e05f80a3565b63ffffffff16805f5260996020525f60408120556114866113e861148083611900565b92611607565b901561148f5750565b60405162461bcd60e51b81526020600482015290819061140d9060248301906110e8565b9063ffffffff6114d1921690815f52609960205260405f20556119db565b50565b156114db57565b60405162461bcd60e51b815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201526a6e697469616c697a696e6760a81b6064820152608490fd5b805f52609960205260405f205480155f1461155d57505f52609860205260405f20541515905f90565b600192909150565b93906080936115a19363ffffffff61159393999899168752602087015260a0604087015260a08601906110e8565b9084820360608601526110e8565b6001600160a01b03909416910152565b90611605603f6020936040519485917f4e6f20726f7574657220656e726f6c6c656420666f7220646f6d61696e3a2000828401528051918291018484015e81015f838201520301601f198101845283611096565b565b805f9172184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b821015611751575b806d04ee2d6d415b85acef8100000000600a921015611736575b662386f26fc10000811015611722575b6305f5e100811015611711575b612710811015611702575b60648110156116f4575b10156116e9575b600a6021600184019361168e856110cc565b9461169c6040519687611096565b8086526116ab601f19916110cc565b013660208701378401015b5f1901916f181899199a1a9b1b9c1cb0b131b232b360811b8282061a83530480156116e457600a90916116b6565b505090565b60019091019061167c565b606460029104930192611675565b6127106004910493019261166b565b6305f5e10060089104930192611660565b662386f26fc1000060109104930192611653565b6d04ee2d6d415b85acef810000000060209104930192611643565b506040915072184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b8104611629565b6117d0607660405192611788602085611096565b5f84526020604051948592600160f01b838501525f602285015260428401523360601b60628401528051918291018484015e81015f838201520301601f198101835282611096565b90565b8054821015610ea5575f5260205f2001905f90565b906118679160018060a01b03165f8060405193611806604086611096565b602085527f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564602086015260208151910182855af13d156118f8573d9161184b836110cc565b926118596040519485611096565b83523d5f602085013e611a35565b80519081159182156118d5575b50501561187d57565b60405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152608490fd5b81925090602091810103126101c6576020015180151581036101c6575f80611874565b606091611a35565b5f8181526098602052604090205480156119d5575f19810181811161038f576097545f1981019190821161038f57808203611987575b5050506097548015611973575f19016119508160976117d3565b8154905f199060031b1b191690556097555f5260986020525f6040812055600190565b634e487b7160e01b5f52603160045260245ffd5b6119bf6119986119a99360976117d3565b90549060031b1c92839260976117d3565b819391549060031b91821b915f19901b19161790565b90555f52609860205260405f20555f8080611936565b50505f90565b805f52609860205260405f2054155f14611a3057609754680100000000000000008110156110b857611a196119a982600185940160975560976117d3565b9055609754905f52609860205260405f2055600190565b505f90565b91929015611a975750815115611a49575090565b3b15611a525790565b60405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606490fd5b82519091501561148f5750805190602001fdfea164736f6c634300081a000a" as Hex;
export const HypERC20Collateral = {
    abi,
    bytecode,
    deployedBytecode,
};
