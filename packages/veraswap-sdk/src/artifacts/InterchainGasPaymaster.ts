import { Hex } from "viem";

export const PACKAGE_VERSION = {
    type: "function",
    name: "PACKAGE_VERSION",
    inputs: [],
    outputs: [{ name: "", type: "string", internalType: "string" }],
    stateMutability: "view",
} as const;
export const beneficiary = {
    type: "function",
    name: "beneficiary",
    inputs: [],
    outputs: [{ name: "", type: "address", internalType: "address" }],
    stateMutability: "view",
} as const;
export const claim = {
    type: "function",
    name: "claim",
    inputs: [],
    outputs: [],
    stateMutability: "nonpayable",
} as const;
export const deployedBlock = {
    type: "function",
    name: "deployedBlock",
    inputs: [],
    outputs: [{ name: "", type: "uint256", internalType: "uint256" }],
    stateMutability: "view",
} as const;
export const destinationGasConfigs = {
    type: "function",
    name: "destinationGasConfigs",
    inputs: [{ name: "", type: "uint32", internalType: "uint32" }],
    outputs: [
        { name: "gasOracle", type: "address", internalType: "contract IGasOracle" },
        { name: "gasOverhead", type: "uint96", internalType: "uint96" },
    ],
    stateMutability: "view",
} as const;
export const destinationGasLimit = {
    type: "function",
    name: "destinationGasLimit",
    inputs: [
        { name: "_destinationDomain", type: "uint32", internalType: "uint32" },
        { name: "_gasLimit", type: "uint256", internalType: "uint256" },
    ],
    outputs: [{ name: "", type: "uint256", internalType: "uint256" }],
    stateMutability: "view",
} as const;
export const getExchangeRateAndGasPrice = {
    type: "function",
    name: "getExchangeRateAndGasPrice",
    inputs: [{ name: "_destinationDomain", type: "uint32", internalType: "uint32" }],
    outputs: [
        { name: "tokenExchangeRate", type: "uint128", internalType: "uint128" },
        { name: "gasPrice", type: "uint128", internalType: "uint128" },
    ],
    stateMutability: "view",
} as const;
export const hookType = {
    type: "function",
    name: "hookType",
    inputs: [],
    outputs: [{ name: "", type: "uint8", internalType: "uint8" }],
    stateMutability: "pure",
} as const;
export const initialize = {
    type: "function",
    name: "initialize",
    inputs: [
        { name: "_owner", type: "address", internalType: "address" },
        { name: "_beneficiary", type: "address", internalType: "address" },
    ],
    outputs: [],
    stateMutability: "nonpayable",
} as const;
export const owner = {
    type: "function",
    name: "owner",
    inputs: [],
    outputs: [{ name: "", type: "address", internalType: "address" }],
    stateMutability: "view",
} as const;
export const payForGas = {
    type: "function",
    name: "payForGas",
    inputs: [
        { name: "_messageId", type: "bytes32", internalType: "bytes32" },
        { name: "_destinationDomain", type: "uint32", internalType: "uint32" },
        { name: "_gasLimit", type: "uint256", internalType: "uint256" },
        { name: "_refundAddress", type: "address", internalType: "address" },
    ],
    outputs: [],
    stateMutability: "payable",
} as const;
export const postDispatch = {
    type: "function",
    name: "postDispatch",
    inputs: [
        { name: "metadata", type: "bytes", internalType: "bytes" },
        { name: "message", type: "bytes", internalType: "bytes" },
    ],
    outputs: [],
    stateMutability: "payable",
} as const;
export const quoteDispatch = {
    type: "function",
    name: "quoteDispatch",
    inputs: [
        { name: "metadata", type: "bytes", internalType: "bytes" },
        { name: "message", type: "bytes", internalType: "bytes" },
    ],
    outputs: [{ name: "", type: "uint256", internalType: "uint256" }],
    stateMutability: "view",
} as const;
export const quoteGasPayment = {
    type: "function",
    name: "quoteGasPayment",
    inputs: [
        { name: "_destinationDomain", type: "uint32", internalType: "uint32" },
        { name: "_gasLimit", type: "uint256", internalType: "uint256" },
    ],
    outputs: [{ name: "", type: "uint256", internalType: "uint256" }],
    stateMutability: "view",
} as const;
export const renounceOwnership = {
    type: "function",
    name: "renounceOwnership",
    inputs: [],
    outputs: [],
    stateMutability: "nonpayable",
} as const;
export const setBeneficiary = {
    type: "function",
    name: "setBeneficiary",
    inputs: [{ name: "_beneficiary", type: "address", internalType: "address" }],
    outputs: [],
    stateMutability: "nonpayable",
} as const;
export const setDestinationGasConfigs = {
    type: "function",
    name: "setDestinationGasConfigs",
    inputs: [
        {
            name: "_configs",
            type: "tuple[]",
            internalType: "struct InterchainGasPaymaster.GasParam[]",
            components: [
                { name: "remoteDomain", type: "uint32", internalType: "uint32" },
                {
                    name: "config",
                    type: "tuple",
                    internalType: "struct InterchainGasPaymaster.DomainGasConfig",
                    components: [
                        { name: "gasOracle", type: "address", internalType: "contract IGasOracle" },
                        { name: "gasOverhead", type: "uint96", internalType: "uint96" },
                    ],
                },
            ],
        },
    ],
    outputs: [],
    stateMutability: "nonpayable",
} as const;
export const supportsMetadata = {
    type: "function",
    name: "supportsMetadata",
    inputs: [{ name: "metadata", type: "bytes", internalType: "bytes" }],
    outputs: [{ name: "", type: "bool", internalType: "bool" }],
    stateMutability: "pure",
} as const;
export const transferOwnership = {
    type: "function",
    name: "transferOwnership",
    inputs: [{ name: "newOwner", type: "address", internalType: "address" }],
    outputs: [],
    stateMutability: "nonpayable",
} as const;
export const BeneficiarySet = {
    type: "event",
    name: "BeneficiarySet",
    inputs: [{ name: "beneficiary", type: "address", indexed: false, internalType: "address" }],
    anonymous: false,
} as const;
export const DestinationGasConfigSet = {
    type: "event",
    name: "DestinationGasConfigSet",
    inputs: [
        { name: "remoteDomain", type: "uint32", indexed: false, internalType: "uint32" },
        { name: "gasOracle", type: "address", indexed: false, internalType: "address" },
        { name: "gasOverhead", type: "uint96", indexed: false, internalType: "uint96" },
    ],
    anonymous: false,
} as const;
export const GasPayment = {
    type: "event",
    name: "GasPayment",
    inputs: [
        { name: "messageId", type: "bytes32", indexed: true, internalType: "bytes32" },
        { name: "destinationDomain", type: "uint32", indexed: true, internalType: "uint32" },
        { name: "gasAmount", type: "uint256", indexed: false, internalType: "uint256" },
        { name: "payment", type: "uint256", indexed: false, internalType: "uint256" },
    ],
    anonymous: false,
} as const;
export const Initialized = {
    type: "event",
    name: "Initialized",
    inputs: [{ name: "version", type: "uint8", indexed: false, internalType: "uint8" }],
    anonymous: false,
} as const;
export const OwnershipTransferred = {
    type: "event",
    name: "OwnershipTransferred",
    inputs: [
        { name: "previousOwner", type: "address", indexed: true, internalType: "address" },
        { name: "newOwner", type: "address", indexed: true, internalType: "address" },
    ],
    anonymous: false,
} as const;
export const functions = [
    PACKAGE_VERSION,
    beneficiary,
    claim,
    deployedBlock,
    destinationGasConfigs,
    destinationGasLimit,
    getExchangeRateAndGasPrice,
    hookType,
    initialize,
    owner,
    payForGas,
    postDispatch,
    quoteDispatch,
    quoteGasPayment,
    renounceOwnership,
    setBeneficiary,
    setDestinationGasConfigs,
    supportsMetadata,
    transferOwnership,
] as const;
export const events = [BeneficiarySet, DestinationGasConfigSet, GasPayment, Initialized, OwnershipTransferred] as const;
export const errors = [] as const;
export const abi = [...functions, ...events, ...errors] as const;

export const bytecode =
    "" as Hex;
export const deployedBytecode =
    "" as Hex;
export const InterchainGasPaymaster = {
    abi,
    bytecode,
    deployedBytecode,
};
