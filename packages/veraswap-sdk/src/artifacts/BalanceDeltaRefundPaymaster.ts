import { Hex } from "viem";

export const _constructor = {
    type: "constructor",
    inputs: [
        { name: "_entryPoint", type: "address", internalType: "contract IEntryPoint" },
        { name: "_owner", type: "address", internalType: "address" },
    ],
    stateMutability: "nonpayable",
} as const;
export const receive = { type: "receive", stateMutability: "payable" } as const;
export const addStake = {
    type: "function",
    name: "addStake",
    inputs: [{ name: "unstakeDelaySec", type: "uint32", internalType: "uint32" }],
    outputs: [],
    stateMutability: "payable",
} as const;
export const deposit = {
    type: "function",
    name: "deposit",
    inputs: [
        { name: "sender", type: "address", internalType: "address" },
        { name: "nonce", type: "uint256", internalType: "uint256" },
    ],
    outputs: [],
    stateMutability: "payable",
} as const;
export const entryPoint = {
    type: "function",
    name: "entryPoint",
    inputs: [],
    outputs: [{ name: "", type: "address", internalType: "contract IEntryPoint" }],
    stateMutability: "view",
} as const;
export const owner = {
    type: "function",
    name: "owner",
    inputs: [],
    outputs: [{ name: "", type: "address", internalType: "address" }],
    stateMutability: "view",
} as const;
export const postOp = {
    type: "function",
    name: "postOp",
    inputs: [
        { name: "mode", type: "uint8", internalType: "enum IPaymaster.PostOpMode" },
        { name: "context", type: "bytes", internalType: "bytes" },
        { name: "actualGasCost", type: "uint256", internalType: "uint256" },
        { name: "actualUserOpFeePerGas", type: "uint256", internalType: "uint256" },
    ],
    outputs: [],
    stateMutability: "nonpayable",
} as const;
export const renounceOwnership = {
    type: "function",
    name: "renounceOwnership",
    inputs: [],
    outputs: [],
    stateMutability: "nonpayable",
} as const;
export const transferOwnership = {
    type: "function",
    name: "transferOwnership",
    inputs: [{ name: "newOwner", type: "address", internalType: "address" }],
    outputs: [],
    stateMutability: "nonpayable",
} as const;
export const unlockStake = {
    type: "function",
    name: "unlockStake",
    inputs: [],
    outputs: [],
    stateMutability: "nonpayable",
} as const;
export const validatePaymasterUserOp = {
    type: "function",
    name: "validatePaymasterUserOp",
    inputs: [
        {
            name: "userOp",
            type: "tuple",
            internalType: "struct PackedUserOperation",
            components: [
                { name: "sender", type: "address", internalType: "address" },
                { name: "nonce", type: "uint256", internalType: "uint256" },
                { name: "initCode", type: "bytes", internalType: "bytes" },
                { name: "callData", type: "bytes", internalType: "bytes" },
                { name: "accountGasLimits", type: "bytes32", internalType: "bytes32" },
                { name: "preVerificationGas", type: "uint256", internalType: "uint256" },
                { name: "gasFees", type: "bytes32", internalType: "bytes32" },
                { name: "paymasterAndData", type: "bytes", internalType: "bytes" },
                { name: "signature", type: "bytes", internalType: "bytes" },
            ],
        },
        { name: "userOpHash", type: "bytes32", internalType: "bytes32" },
        { name: "maxCost", type: "uint256", internalType: "uint256" },
    ],
    outputs: [
        { name: "context", type: "bytes", internalType: "bytes" },
        { name: "validationData", type: "uint256", internalType: "uint256" },
    ],
    stateMutability: "nonpayable",
} as const;
export const withdrawStake = {
    type: "function",
    name: "withdrawStake",
    inputs: [{ name: "withdrawAddress", type: "address", internalType: "address payable" }],
    outputs: [],
    stateMutability: "nonpayable",
} as const;
export const withdrawTo = {
    type: "function",
    name: "withdrawTo",
    inputs: [
        { name: "withdrawAddress", type: "address", internalType: "address payable" },
        { name: "amount", type: "uint256", internalType: "uint256" },
    ],
    outputs: [],
    stateMutability: "nonpayable",
} as const;
export const OwnershipTransferred = {
    type: "event",
    name: "OwnershipTransferred",
    inputs: [
        { name: "previousOwner", type: "address", indexed: true, internalType: "address" },
        { name: "newOwner", type: "address", indexed: true, internalType: "address" },
    ],
    anonymous: false,
} as const;
export const BalanceNotReimbursed = {
    type: "error",
    name: "BalanceNotReimbursed",
    inputs: [
        { name: "sender", type: "address", internalType: "address" },
        { name: "nonce", type: "uint256", internalType: "uint256" },
        { name: "reimbursed", type: "uint256", internalType: "uint256" },
        { name: "actualGasCost", type: "uint256", internalType: "uint256" },
    ],
} as const;
export const OwnableInvalidOwner = {
    type: "error",
    name: "OwnableInvalidOwner",
    inputs: [{ name: "owner", type: "address", internalType: "address" }],
} as const;
export const OwnableUnauthorizedAccount = {
    type: "error",
    name: "OwnableUnauthorizedAccount",
    inputs: [{ name: "account", type: "address", internalType: "address" }],
} as const;
export const RefundFailed = {
    type: "error",
    name: "RefundFailed",
    inputs: [
        { name: "sender", type: "address", internalType: "address" },
        { name: "nonce", type: "uint256", internalType: "uint256" },
        { name: "surplus", type: "uint256", internalType: "uint256" },
    ],
} as const;
export const functions = [
    _constructor,
    receive,
    addStake,
    deposit,
    entryPoint,
    owner,
    postOp,
    renounceOwnership,
    transferOwnership,
    unlockStake,
    validatePaymasterUserOp,
    withdrawStake,
    withdrawTo,
] as const;
export const events = [OwnershipTransferred] as const;
export const errors = [BalanceNotReimbursed, OwnableInvalidOwner, OwnableUnauthorizedAccount, RefundFailed] as const;
export const abi = [...functions, ...events, ...errors] as const;

export const bytecode =
    "0x60a0806040523461019d57604081610b08803803809161001f82856101c7565b83398101031261019d578051906001600160a01b0382169081830361019d57602001516001600160a01b0381169081900361019d5780156101b4575f80546001600160a01b0319811683178255604051936020938593602493859392916001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09080a36301ffc9a760e01b825263122a0e9b60e31b60048301525afa9081156101a9575f9161016a575b50156101255760805260405161090990816101ff8239608051818181610153015281816101f701528181610264015281816103ae0152818161062d015281816106ad01528181610744015261082e0152f35b60405162461bcd60e51b815260206004820152601e60248201527f49456e747279506f696e7420696e74657266616365206d69736d6174636800006044820152606490fd5b90506020813d6020116101a1575b81610185602093836101c7565b8101031261019d5751801515810361019d575f6100d3565b5f80fd5b3d9150610178565b6040513d5f823e3d90fd5b631e4fbdf760e01b5f525f60045260245ffd5b601f909101601f19168101906001600160401b038211908210176101ea57604052565b634e487b7160e01b5f52604160045260245ffdfe60806040526004361015610022575b3615610018575f80fd5b61002061082c565b005b5f803560e01c80630396cb601461071c578063205c28781461068857806347e7ef24146105d757806352b7512c1461052d578063715018a6146104d35780637c627b21146102ba5780638da5cb5b14610293578063b0d691fe1461024e578063bb9fe6bf146101db578063c23a5cea1461012e5763f2fde38b146100a6575061000e565b3461012b57602036600319011261012b576100bf6107ba565b6100c7610806565b6001600160a01b031680156101175781546001600160a01b03198116821783556001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08380a380f35b631e4fbdf760e01b82526004829052602482fd5b80fd5b503461012b57602036600319011261012b57806101496107ba565b610151610806565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690813b156101d75760405163611d2e7560e11b81526001600160a01b0390911660048201529082908290602490829084905af180156101cc576101bb5750f35b816101c5916107d0565b61012b5780f35b6040513d84823e3d90fd5b5050fd5b503461012b578060031936011261012b576101f4610806565b807f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316803b1561024b5781809160046040518094819363bb9fe6bf60e01b83525af180156101cc576101bb5750f35b50fd5b503461012b578060031936011261012b576040517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b503461012b578060031936011261012b57546040516001600160a01b039091168152602090f35b503461012b57608036600319011261012b576003600435101561012b576024359067ffffffffffffffff821161012b573660238301121561012b57816004013567ffffffffffffffff81116104cf5782013660248201116104cf57604060246044359261032561082c565b8590030160231901126104cf5760248301356001600160a01b03811693908481036104a25750604051606085901b6bffffffffffffffffffffffff19166020820190815260449092013560348201819052919061038f81605481015b03601f1981018352826107d0565b5190209183835c935d8083106104a65780830392036103ac578280f35b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316803b156104a25760405163040b850f60e31b8152306004820152602481018490529084908290604490829084905af180156104975790849161047e575b505060405160618082019082821067ffffffffffffffff83111761046a57602091839161089c833987815203019083f061045f5760649363679cea6360e01b8452600452602452604452fd5b50509050805f808280f35b634e487b7160e01b86526041600452602486fd5b81610488916107d0565b61049357825f610413565b8280fd5b6040513d86823e3d90fd5b8380fd5b60849285926040519363224b262360e11b85526004850152602484015260448301526064820152fd5b5080fd5b503461012b578060031936011261012b576104ec610806565b80546001600160a01b03198116825581906001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a380f35b503461012b57606036600319011261012b5760043567ffffffffffffffff81116104cf5761012060031982360301126104cf5761056861082c565b60048101356001600160a01b0381169190829003610493576060916024604051926020840192835201356040830152604082526105a583836107d0565b604051938492604084525180928160408601528585015e82820184018190526020830152601f01601f19168101030190f35b50604036600319011261012b576105ec6107ba565b60405160609190911b6bffffffffffffffffffffffff1916602082019081526024356034830152906106218160548101610381565b519020805c3401905d807f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316803b1561024b57816024916040519283809263b760faf960e01b825230600483015234905af180156101cc576101bb5750f35b503461012b57604036600319011261012b57806106a36107ba565b6106ab610806565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316803b156101d75760405163040b850f60e31b81526001600160a01b03929092166004830152602480359083015282908290604490829084905af180156101cc576101bb5750f35b5060203660031901126107b65760043563ffffffff81168091036107b657610742610806565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690813b156107b6575f90602460405180948193621cb65b60e51b8352600483015234905af180156107ab5761079f575080f35b61002091505f906107d0565b6040513d5f823e3d90fd5b5f80fd5b600435906001600160a01b03821682036107b657565b90601f8019910116810190811067ffffffffffffffff8211176107f257604052565b634e487b7160e01b5f52604160045260245ffd5b5f546001600160a01b0316330361081957565b63118cdaa760e01b5f523360045260245ffd5b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316330361085e57565b60405162461bcd60e51b815260206004820152601560248201527414d95b99195c881b9bdd08115b9d1c9e541bda5b9d605a1b6044820152606490fdfe6080601f606138819003918201601f19168301916001600160401b03831184841017604c57808492602094604052833981010312604857516001600160a01b0381168103604857ff5b5f80fd5b634e487b7160e01b5f52604160045260245ffdfea164736f6c634300081a000a" as Hex;
export const deployedBytecode =
    "0x60806040526004361015610022575b3615610018575f80fd5b61002061082c565b005b5f803560e01c80630396cb601461071c578063205c28781461068857806347e7ef24146105d757806352b7512c1461052d578063715018a6146104d35780637c627b21146102ba5780638da5cb5b14610293578063b0d691fe1461024e578063bb9fe6bf146101db578063c23a5cea1461012e5763f2fde38b146100a6575061000e565b3461012b57602036600319011261012b576100bf6107ba565b6100c7610806565b6001600160a01b031680156101175781546001600160a01b03198116821783556001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08380a380f35b631e4fbdf760e01b82526004829052602482fd5b80fd5b503461012b57602036600319011261012b57806101496107ba565b610151610806565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690813b156101d75760405163611d2e7560e11b81526001600160a01b0390911660048201529082908290602490829084905af180156101cc576101bb5750f35b816101c5916107d0565b61012b5780f35b6040513d84823e3d90fd5b5050fd5b503461012b578060031936011261012b576101f4610806565b807f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316803b1561024b5781809160046040518094819363bb9fe6bf60e01b83525af180156101cc576101bb5750f35b50fd5b503461012b578060031936011261012b576040517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b503461012b578060031936011261012b57546040516001600160a01b039091168152602090f35b503461012b57608036600319011261012b576003600435101561012b576024359067ffffffffffffffff821161012b573660238301121561012b57816004013567ffffffffffffffff81116104cf5782013660248201116104cf57604060246044359261032561082c565b8590030160231901126104cf5760248301356001600160a01b03811693908481036104a25750604051606085901b6bffffffffffffffffffffffff19166020820190815260449092013560348201819052919061038f81605481015b03601f1981018352826107d0565b5190209183835c935d8083106104a65780830392036103ac578280f35b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316803b156104a25760405163040b850f60e31b8152306004820152602481018490529084908290604490829084905af180156104975790849161047e575b505060405160618082019082821067ffffffffffffffff83111761046a57602091839161089c833987815203019083f061045f5760649363679cea6360e01b8452600452602452604452fd5b50509050805f808280f35b634e487b7160e01b86526041600452602486fd5b81610488916107d0565b61049357825f610413565b8280fd5b6040513d86823e3d90fd5b8380fd5b60849285926040519363224b262360e11b85526004850152602484015260448301526064820152fd5b5080fd5b503461012b578060031936011261012b576104ec610806565b80546001600160a01b03198116825581906001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a380f35b503461012b57606036600319011261012b5760043567ffffffffffffffff81116104cf5761012060031982360301126104cf5761056861082c565b60048101356001600160a01b0381169190829003610493576060916024604051926020840192835201356040830152604082526105a583836107d0565b604051938492604084525180928160408601528585015e82820184018190526020830152601f01601f19168101030190f35b50604036600319011261012b576105ec6107ba565b60405160609190911b6bffffffffffffffffffffffff1916602082019081526024356034830152906106218160548101610381565b519020805c3401905d807f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316803b1561024b57816024916040519283809263b760faf960e01b825230600483015234905af180156101cc576101bb5750f35b503461012b57604036600319011261012b57806106a36107ba565b6106ab610806565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316803b156101d75760405163040b850f60e31b81526001600160a01b03929092166004830152602480359083015282908290604490829084905af180156101cc576101bb5750f35b5060203660031901126107b65760043563ffffffff81168091036107b657610742610806565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690813b156107b6575f90602460405180948193621cb65b60e51b8352600483015234905af180156107ab5761079f575080f35b61002091505f906107d0565b6040513d5f823e3d90fd5b5f80fd5b600435906001600160a01b03821682036107b657565b90601f8019910116810190811067ffffffffffffffff8211176107f257604052565b634e487b7160e01b5f52604160045260245ffd5b5f546001600160a01b0316330361081957565b63118cdaa760e01b5f523360045260245ffd5b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316330361085e57565b60405162461bcd60e51b815260206004820152601560248201527414d95b99195c881b9bdd08115b9d1c9e541bda5b9d605a1b6044820152606490fdfe6080601f606138819003918201601f19168301916001600160401b03831184841017604c57808492602094604052833981010312604857516001600160a01b0381168103604857ff5b5f80fd5b634e487b7160e01b5f52604160045260245ffdfea164736f6c634300081a000a" as Hex;
export const BalanceDeltaRefundPaymaster = {
    abi,
    bytecode,
    deployedBytecode,
};
