import { Hex } from "viem";

export const _constructor = {
    type: "constructor",
    inputs: [
        { name: "_entryPoint", type: "address", internalType: "contract IEntryPoint" },
        { name: "_owner", type: "address", internalType: "address" },
    ],
    stateMutability: "nonpayable",
} as const;
export const addStake = {
    type: "function",
    name: "addStake",
    inputs: [{ name: "unstakeDelaySec", type: "uint32", internalType: "uint32" }],
    outputs: [],
    stateMutability: "payable",
} as const;
export const deposit = {
    type: "function",
    name: "deposit",
    inputs: [],
    outputs: [],
    stateMutability: "payable",
} as const;
export const entryPoint = {
    type: "function",
    name: "entryPoint",
    inputs: [],
    outputs: [{ name: "", type: "address", internalType: "contract IEntryPoint" }],
    stateMutability: "view",
} as const;
export const getDeposit = {
    type: "function",
    name: "getDeposit",
    inputs: [],
    outputs: [{ name: "", type: "uint256", internalType: "uint256" }],
    stateMutability: "view",
} as const;
export const owner = {
    type: "function",
    name: "owner",
    inputs: [],
    outputs: [{ name: "", type: "address", internalType: "address" }],
    stateMutability: "view",
} as const;
export const payForOp = {
    type: "function",
    name: "payForOp",
    inputs: [
        { name: "sender", type: "address", internalType: "address" },
        { name: "nonce", type: "uint256", internalType: "uint256" },
    ],
    outputs: [],
    stateMutability: "payable",
} as const;
export const postOp = {
    type: "function",
    name: "postOp",
    inputs: [
        { name: "mode", type: "uint8", internalType: "enum IPaymaster.PostOpMode" },
        { name: "context", type: "bytes", internalType: "bytes" },
        { name: "actualGasCost", type: "uint256", internalType: "uint256" },
        { name: "actualUserOpFeePerGas", type: "uint256", internalType: "uint256" },
    ],
    outputs: [],
    stateMutability: "nonpayable",
} as const;
export const renounceOwnership = {
    type: "function",
    name: "renounceOwnership",
    inputs: [],
    outputs: [],
    stateMutability: "nonpayable",
} as const;
export const transferOwnership = {
    type: "function",
    name: "transferOwnership",
    inputs: [{ name: "newOwner", type: "address", internalType: "address" }],
    outputs: [],
    stateMutability: "nonpayable",
} as const;
export const unlockStake = {
    type: "function",
    name: "unlockStake",
    inputs: [],
    outputs: [],
    stateMutability: "nonpayable",
} as const;
export const validatePaymasterUserOp = {
    type: "function",
    name: "validatePaymasterUserOp",
    inputs: [
        {
            name: "userOp",
            type: "tuple",
            internalType: "struct PackedUserOperation",
            components: [
                { name: "sender", type: "address", internalType: "address" },
                { name: "nonce", type: "uint256", internalType: "uint256" },
                { name: "initCode", type: "bytes", internalType: "bytes" },
                { name: "callData", type: "bytes", internalType: "bytes" },
                { name: "accountGasLimits", type: "bytes32", internalType: "bytes32" },
                { name: "preVerificationGas", type: "uint256", internalType: "uint256" },
                { name: "gasFees", type: "bytes32", internalType: "bytes32" },
                { name: "paymasterAndData", type: "bytes", internalType: "bytes" },
                { name: "signature", type: "bytes", internalType: "bytes" },
            ],
        },
        { name: "userOpHash", type: "bytes32", internalType: "bytes32" },
        { name: "maxCost", type: "uint256", internalType: "uint256" },
    ],
    outputs: [
        { name: "context", type: "bytes", internalType: "bytes" },
        { name: "validationData", type: "uint256", internalType: "uint256" },
    ],
    stateMutability: "nonpayable",
} as const;
export const withdrawStake = {
    type: "function",
    name: "withdrawStake",
    inputs: [{ name: "withdrawAddress", type: "address", internalType: "address payable" }],
    outputs: [],
    stateMutability: "nonpayable",
} as const;
export const withdrawTo = {
    type: "function",
    name: "withdrawTo",
    inputs: [
        { name: "withdrawAddress", type: "address", internalType: "address payable" },
        { name: "amount", type: "uint256", internalType: "uint256" },
    ],
    outputs: [],
    stateMutability: "nonpayable",
} as const;
export const OwnershipTransferred = {
    type: "event",
    name: "OwnershipTransferred",
    inputs: [
        { name: "previousOwner", type: "address", indexed: true, internalType: "address" },
        { name: "newOwner", type: "address", indexed: true, internalType: "address" },
    ],
    anonymous: false,
} as const;
export const BalanceNotReimbursed = {
    type: "error",
    name: "BalanceNotReimbursed",
    inputs: [
        { name: "sender", type: "address", internalType: "address" },
        { name: "nonce", type: "uint256", internalType: "uint256" },
        { name: "reimbursed", type: "uint256", internalType: "uint256" },
        { name: "actualGasCost", type: "uint256", internalType: "uint256" },
    ],
} as const;
export const OwnableInvalidOwner = {
    type: "error",
    name: "OwnableInvalidOwner",
    inputs: [{ name: "owner", type: "address", internalType: "address" }],
} as const;
export const OwnableUnauthorizedAccount = {
    type: "error",
    name: "OwnableUnauthorizedAccount",
    inputs: [{ name: "account", type: "address", internalType: "address" }],
} as const;
export const RefundFailed = {
    type: "error",
    name: "RefundFailed",
    inputs: [
        { name: "sender", type: "address", internalType: "address" },
        { name: "nonce", type: "uint256", internalType: "uint256" },
        { name: "surplus", type: "uint256", internalType: "uint256" },
    ],
} as const;
export const functions = [
    _constructor,
    addStake,
    deposit,
    entryPoint,
    getDeposit,
    owner,
    payForOp,
    postOp,
    renounceOwnership,
    transferOwnership,
    unlockStake,
    validatePaymasterUserOp,
    withdrawStake,
    withdrawTo,
] as const;
export const events = [OwnershipTransferred] as const;
export const errors = [BalanceNotReimbursed, OwnableInvalidOwner, OwnableUnauthorizedAccount, RefundFailed] as const;
export const abi = [...functions, ...events, ...errors] as const;

export const bytecode =
    "0x60a0806040523461019d57604081610b39803803809161001f82856101c7565b83398101031261019d578051906001600160a01b0382169081830361019d57602001516001600160a01b0381169081900361019d5780156101b4575f80546001600160a01b0319811683178255604051936020938593602493859392916001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09080a36301ffc9a760e01b825263122a0e9b60e31b60048301525afa9081156101a9575f9161016a575b50156101255760805260405161093a90816101ff8239608051818181610140015281816101e601528181610288015281816103100152818161037a015281816106db01528181610773015261085f0152f35b60405162461bcd60e51b815260206004820152601e60248201527f49456e747279506f696e7420696e74657266616365206d69736d6174636800006044820152606490fd5b90506020813d6020116101a1575b81610185602093836101c7565b8101031261019d5751801515810361019d575f6100d3565b5f80fd5b3d9150610178565b6040513d5f823e3d90fd5b631e4fbdf760e01b5f525f60045260245ffd5b601f909101601f19168101906001600160401b038211908210176101ea57604052565b634e487b7160e01b5f52604160045260245ffdfe60806040526004361015610011575f80fd5b5f803560e01c80630396cb601461074b578063205c2878146106b657806352b7512c14610608578063715018a6146105ae57806374f5278d146105585780637c627b21146103d05780638da5cb5b146103a9578063b0d691fe14610364578063bb9fe6bf146102f4578063c23a5cea14610263578063c399ec88146101ba578063d0e30db0146101315763f2fde38b146100a9575f80fd5b3461012e57602036600319011261012e576100c26107eb565b6100ca610837565b6001600160a01b0316801561011a5781546001600160a01b03198116821783556001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08380a380f35b631e4fbdf760e01b82526004829052602482fd5b80fd5b508060031936011261012e57807f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316803b156101b757816024916040519283809263b760faf960e01b825230600483015234905af180156101ac5761019b5750f35b816101a591610801565b61012e5780f35b6040513d84823e3d90fd5b50fd5b503461012e578060031936011261012e576040516370a0823160e01b81523060048201526020816024817f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03165afa9081156101ac578291610229575b602082604051908152f35b90506020813d60201161025b575b8161024460209383610801565b810103126102575760209150515f61021e565b5080fd5b3d9150610237565b503461012e57602036600319011261012e578061027e6107eb565b610286610837565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690813b156102f05760405163611d2e7560e11b81526001600160a01b0390911660048201529082908290602490829084905af180156101ac5761019b5750f35b5050fd5b503461012e578060031936011261012e5761030d610837565b807f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316803b156101b75781809160046040518094819363bb9fe6bf60e01b83525af180156101ac5761019b5750f35b503461012e578060031936011261012e576040517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b503461012e578060031936011261012e57546040516001600160a01b039091168152602090f35b503461012e57608036600319011261012e576003600435101561012e576024359067ffffffffffffffff821161012e573660238301121561012e57816004013567ffffffffffffffff811161025757820136602482011161025757604060246044359261043b61085d565b8590030160231901126102575760248301356001600160a01b03811693908481036105545750604051606085901b6bffffffffffffffffffffffff1916602082019081526044909201356034820181905291906104a581605481015b03601f198101835282610801565b5190209183835c935d80831061052b5780830392036104c2578280f35b60405160618082019082821067ffffffffffffffff8311176105175760209183916108cd833987815203019083f061050c5760649363679cea6360e01b8452600452602452604452fd5b50509050805f808280f35b634e487b7160e01b86526041600452602486fd5b60849285926040519363224b262360e11b85526004850152602484015260448301526064820152fd5b8380fd5b50604036600319011261012e5761056d6107eb565b60405160609190911b6bffffffffffffffffffffffff1916602082019081526024356034830152906105a28160548101610497565b519020805c3401905d80f35b503461012e578060031936011261012e576105c7610837565b80546001600160a01b03198116825581906001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a380f35b503461012e57606036600319011261012e5760043567ffffffffffffffff81116102575761012060031982360301126102575761064361085d565b60048101356001600160a01b03811691908290036106b2576060916024604051926020840192835201356040830152604082526106808383610801565b604051938492604084525180928160408601528585015e82820184018190526020830152601f01601f19168101030190f35b8280fd5b503461012e57604036600319011261012e57806106d16107eb565b6106d9610837565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690813b156102f05760405163040b850f60e31b81526001600160a01b03909116600482015260248035908201529082908290604490829084905af180156101ac5761019b5750f35b5060203660031901126107e75760043563ffffffff81168091036107e757610771610837565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690813b156107e7575f90602460405180948193621cb65b60e51b8352600483015234905af180156107dc576107ce575080f35b6107da91505f90610801565b005b6040513d5f823e3d90fd5b5f80fd5b600435906001600160a01b03821682036107e757565b90601f8019910116810190811067ffffffffffffffff82111761082357604052565b634e487b7160e01b5f52604160045260245ffd5b5f546001600160a01b0316330361084a57565b63118cdaa760e01b5f523360045260245ffd5b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316330361088f57565b60405162461bcd60e51b815260206004820152601560248201527414d95b99195c881b9bdd08115b9d1c9e541bda5b9d605a1b6044820152606490fdfe6080601f606138819003918201601f19168301916001600160401b03831184841017604c57808492602094604052833981010312604857516001600160a01b0381168103604857ff5b5f80fd5b634e487b7160e01b5f52604160045260245ffdfea164736f6c634300081a000a" as Hex;
export const deployedBytecode =
    "0x60806040526004361015610011575f80fd5b5f803560e01c80630396cb601461074b578063205c2878146106b657806352b7512c14610608578063715018a6146105ae57806374f5278d146105585780637c627b21146103d05780638da5cb5b146103a9578063b0d691fe14610364578063bb9fe6bf146102f4578063c23a5cea14610263578063c399ec88146101ba578063d0e30db0146101315763f2fde38b146100a9575f80fd5b3461012e57602036600319011261012e576100c26107eb565b6100ca610837565b6001600160a01b0316801561011a5781546001600160a01b03198116821783556001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08380a380f35b631e4fbdf760e01b82526004829052602482fd5b80fd5b508060031936011261012e57807f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316803b156101b757816024916040519283809263b760faf960e01b825230600483015234905af180156101ac5761019b5750f35b816101a591610801565b61012e5780f35b6040513d84823e3d90fd5b50fd5b503461012e578060031936011261012e576040516370a0823160e01b81523060048201526020816024817f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03165afa9081156101ac578291610229575b602082604051908152f35b90506020813d60201161025b575b8161024460209383610801565b810103126102575760209150515f61021e565b5080fd5b3d9150610237565b503461012e57602036600319011261012e578061027e6107eb565b610286610837565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690813b156102f05760405163611d2e7560e11b81526001600160a01b0390911660048201529082908290602490829084905af180156101ac5761019b5750f35b5050fd5b503461012e578060031936011261012e5761030d610837565b807f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316803b156101b75781809160046040518094819363bb9fe6bf60e01b83525af180156101ac5761019b5750f35b503461012e578060031936011261012e576040517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b503461012e578060031936011261012e57546040516001600160a01b039091168152602090f35b503461012e57608036600319011261012e576003600435101561012e576024359067ffffffffffffffff821161012e573660238301121561012e57816004013567ffffffffffffffff811161025757820136602482011161025757604060246044359261043b61085d565b8590030160231901126102575760248301356001600160a01b03811693908481036105545750604051606085901b6bffffffffffffffffffffffff1916602082019081526044909201356034820181905291906104a581605481015b03601f198101835282610801565b5190209183835c935d80831061052b5780830392036104c2578280f35b60405160618082019082821067ffffffffffffffff8311176105175760209183916108cd833987815203019083f061050c5760649363679cea6360e01b8452600452602452604452fd5b50509050805f808280f35b634e487b7160e01b86526041600452602486fd5b60849285926040519363224b262360e11b85526004850152602484015260448301526064820152fd5b8380fd5b50604036600319011261012e5761056d6107eb565b60405160609190911b6bffffffffffffffffffffffff1916602082019081526024356034830152906105a28160548101610497565b519020805c3401905d80f35b503461012e578060031936011261012e576105c7610837565b80546001600160a01b03198116825581906001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a380f35b503461012e57606036600319011261012e5760043567ffffffffffffffff81116102575761012060031982360301126102575761064361085d565b60048101356001600160a01b03811691908290036106b2576060916024604051926020840192835201356040830152604082526106808383610801565b604051938492604084525180928160408601528585015e82820184018190526020830152601f01601f19168101030190f35b8280fd5b503461012e57604036600319011261012e57806106d16107eb565b6106d9610837565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690813b156102f05760405163040b850f60e31b81526001600160a01b03909116600482015260248035908201529082908290604490829084905af180156101ac5761019b5750f35b5060203660031901126107e75760043563ffffffff81168091036107e757610771610837565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690813b156107e7575f90602460405180948193621cb65b60e51b8352600483015234905af180156107dc576107ce575080f35b6107da91505f90610801565b005b6040513d5f823e3d90fd5b5f80fd5b600435906001600160a01b03821682036107e757565b90601f8019910116810190811067ffffffffffffffff82111761082357604052565b634e487b7160e01b5f52604160045260245ffd5b5f546001600160a01b0316330361084a57565b63118cdaa760e01b5f523360045260245ffd5b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316330361088f57565b60405162461bcd60e51b815260206004820152601560248201527414d95b99195c881b9bdd08115b9d1c9e541bda5b9d605a1b6044820152606490fdfe6080601f606138819003918201601f19168301916001600160401b03831184841017604c57808492602094604052833981010312604857516001600160a01b0381168103604857ff5b5f80fd5b634e487b7160e01b5f52604160045260245ffdfea164736f6c634300081a000a" as Hex;
export const BalanceDeltaRefundPaymaster = {
    abi,
    bytecode,
    deployedBytecode,
};
