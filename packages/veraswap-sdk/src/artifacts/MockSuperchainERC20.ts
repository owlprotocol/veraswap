import { Hex } from "viem";

export const _constructor = {
    type: "constructor",
    inputs: [
        { name: "name_", type: "string", internalType: "string" },
        { name: "symbol_", type: "string", internalType: "string" },
        { name: "decimals_", type: "uint8", internalType: "uint8" },
    ],
    stateMutability: "nonpayable",
} as const;
export const DOMAIN_SEPARATOR = {
    type: "function",
    name: "DOMAIN_SEPARATOR",
    inputs: [],
    outputs: [{ name: "result", type: "bytes32", internalType: "bytes32" }],
    stateMutability: "view",
} as const;
export const allowance = {
    type: "function",
    name: "allowance",
    inputs: [
        { name: "owner", type: "address", internalType: "address" },
        { name: "spender", type: "address", internalType: "address" },
    ],
    outputs: [{ name: "result", type: "uint256", internalType: "uint256" }],
    stateMutability: "view",
} as const;
export const approve = {
    type: "function",
    name: "approve",
    inputs: [
        { name: "spender", type: "address", internalType: "address" },
        { name: "amount", type: "uint256", internalType: "uint256" },
    ],
    outputs: [{ name: "", type: "bool", internalType: "bool" }],
    stateMutability: "nonpayable",
} as const;
export const balanceOf = {
    type: "function",
    name: "balanceOf",
    inputs: [{ name: "owner", type: "address", internalType: "address" }],
    outputs: [{ name: "result", type: "uint256", internalType: "uint256" }],
    stateMutability: "view",
} as const;
export const crosschainBurn = {
    type: "function",
    name: "crosschainBurn",
    inputs: [
        { name: "_from", type: "address", internalType: "address" },
        { name: "_amount", type: "uint256", internalType: "uint256" },
    ],
    outputs: [],
    stateMutability: "nonpayable",
} as const;
export const crosschainMint = {
    type: "function",
    name: "crosschainMint",
    inputs: [
        { name: "_to", type: "address", internalType: "address" },
        { name: "_amount", type: "uint256", internalType: "uint256" },
    ],
    outputs: [],
    stateMutability: "nonpayable",
} as const;
export const decimals = {
    type: "function",
    name: "decimals",
    inputs: [],
    outputs: [{ name: "", type: "uint8", internalType: "uint8" }],
    stateMutability: "view",
} as const;
export const mint = {
    type: "function",
    name: "mint",
    inputs: [
        { name: "to", type: "address", internalType: "address" },
        { name: "amount", type: "uint256", internalType: "uint256" },
    ],
    outputs: [],
    stateMutability: "nonpayable",
} as const;
export const name = {
    type: "function",
    name: "name",
    inputs: [],
    outputs: [{ name: "", type: "string", internalType: "string" }],
    stateMutability: "view",
} as const;
export const nonces = {
    type: "function",
    name: "nonces",
    inputs: [{ name: "owner", type: "address", internalType: "address" }],
    outputs: [{ name: "result", type: "uint256", internalType: "uint256" }],
    stateMutability: "view",
} as const;
export const permit = {
    type: "function",
    name: "permit",
    inputs: [
        { name: "owner", type: "address", internalType: "address" },
        { name: "spender", type: "address", internalType: "address" },
        { name: "value", type: "uint256", internalType: "uint256" },
        { name: "deadline", type: "uint256", internalType: "uint256" },
        { name: "v", type: "uint8", internalType: "uint8" },
        { name: "r", type: "bytes32", internalType: "bytes32" },
        { name: "s", type: "bytes32", internalType: "bytes32" },
    ],
    outputs: [],
    stateMutability: "nonpayable",
} as const;
export const supportsInterface = {
    type: "function",
    name: "supportsInterface",
    inputs: [{ name: "_interfaceId", type: "bytes4", internalType: "bytes4" }],
    outputs: [{ name: "", type: "bool", internalType: "bool" }],
    stateMutability: "view",
} as const;
export const symbol = {
    type: "function",
    name: "symbol",
    inputs: [],
    outputs: [{ name: "", type: "string", internalType: "string" }],
    stateMutability: "view",
} as const;
export const totalSupply = {
    type: "function",
    name: "totalSupply",
    inputs: [],
    outputs: [{ name: "result", type: "uint256", internalType: "uint256" }],
    stateMutability: "view",
} as const;
export const transfer = {
    type: "function",
    name: "transfer",
    inputs: [
        { name: "to", type: "address", internalType: "address" },
        { name: "amount", type: "uint256", internalType: "uint256" },
    ],
    outputs: [{ name: "", type: "bool", internalType: "bool" }],
    stateMutability: "nonpayable",
} as const;
export const transferFrom = {
    type: "function",
    name: "transferFrom",
    inputs: [
        { name: "from", type: "address", internalType: "address" },
        { name: "to", type: "address", internalType: "address" },
        { name: "amount", type: "uint256", internalType: "uint256" },
    ],
    outputs: [{ name: "", type: "bool", internalType: "bool" }],
    stateMutability: "nonpayable",
} as const;
export const Approval = {
    type: "event",
    name: "Approval",
    inputs: [
        { name: "owner", type: "address", indexed: true, internalType: "address" },
        { name: "spender", type: "address", indexed: true, internalType: "address" },
        { name: "amount", type: "uint256", indexed: false, internalType: "uint256" },
    ],
    anonymous: false,
} as const;
export const CrosschainBurn = {
    type: "event",
    name: "CrosschainBurn",
    inputs: [
        { name: "from", type: "address", indexed: true, internalType: "address" },
        { name: "amount", type: "uint256", indexed: false, internalType: "uint256" },
        { name: "sender", type: "address", indexed: true, internalType: "address" },
    ],
    anonymous: false,
} as const;
export const CrosschainMint = {
    type: "event",
    name: "CrosschainMint",
    inputs: [
        { name: "to", type: "address", indexed: true, internalType: "address" },
        { name: "amount", type: "uint256", indexed: false, internalType: "uint256" },
        { name: "sender", type: "address", indexed: true, internalType: "address" },
    ],
    anonymous: false,
} as const;
export const Transfer = {
    type: "event",
    name: "Transfer",
    inputs: [
        { name: "from", type: "address", indexed: true, internalType: "address" },
        { name: "to", type: "address", indexed: true, internalType: "address" },
        { name: "amount", type: "uint256", indexed: false, internalType: "uint256" },
    ],
    anonymous: false,
} as const;
export const AllowanceOverflow = { type: "error", name: "AllowanceOverflow", inputs: [] } as const;
export const AllowanceUnderflow = { type: "error", name: "AllowanceUnderflow", inputs: [] } as const;
export const InsufficientAllowance = { type: "error", name: "InsufficientAllowance", inputs: [] } as const;
export const InsufficientBalance = { type: "error", name: "InsufficientBalance", inputs: [] } as const;
export const InvalidPermit = { type: "error", name: "InvalidPermit", inputs: [] } as const;
export const Permit2AllowanceIsFixedAtInfinity = {
    type: "error",
    name: "Permit2AllowanceIsFixedAtInfinity",
    inputs: [],
} as const;
export const PermitExpired = { type: "error", name: "PermitExpired", inputs: [] } as const;
export const TotalSupplyOverflow = { type: "error", name: "TotalSupplyOverflow", inputs: [] } as const;
export const functions = [
    _constructor,
    DOMAIN_SEPARATOR,
    allowance,
    approve,
    balanceOf,
    crosschainBurn,
    crosschainMint,
    decimals,
    mint,
    name,
    nonces,
    permit,
    supportsInterface,
    symbol,
    totalSupply,
    transfer,
    transferFrom,
] as const;
export const events = [Approval, CrosschainBurn, CrosschainMint, Transfer] as const;
export const errors = [
    AllowanceOverflow,
    AllowanceUnderflow,
    InsufficientAllowance,
    InsufficientBalance,
    InvalidPermit,
    Permit2AllowanceIsFixedAtInfinity,
    PermitExpired,
    TotalSupplyOverflow,
] as const;
export const abi = [...functions, ...events, ...errors] as const;

export const bytecode =
    "0x60a06040523461032b57610ed4803803806100198161032f565b92833981019060608183031261032b5780516001600160401b03811161032b5782610045918301610354565b60208201519092906001600160401b03811161032b57604091610069918401610354565b91015160ff8116810361032b5782516001600160401b03811161023f575f54600181811c91168015610321575b602082101461022157601f81116102bf575b506020601f821160011461025e57819293945f92610253575b50508160011b915f199060031b1c1916175f555b81516001600160401b03811161023f57600154600181811c91168015610235575b602082101461022157601f81116101be575b50602092601f821160011461015d57928192935f92610152575b50508160011b915f199060031b1c1916176001555b608052604051610b2e90816103a68239608051816105900152f35b015190505f80610122565b601f1982169360015f52805f20915f5b8681106101a6575083600195961061018e575b505050811b01600155610137565b01515f1960f88460031b161c191690555f8080610180565b9192602060018192868501518155019401920161016d565b60015f527fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf6601f830160051c81019160208410610217575b601f0160051c01905b81811061020c5750610108565b5f81556001016101ff565b90915081906101f6565b634e487b7160e01b5f52602260045260245ffd5b90607f16906100f6565b634e487b7160e01b5f52604160045260245ffd5b015190505f806100c1565b601f198216905f8052805f20915f5b8181106102a75750958360019596971061028f575b505050811b015f556100d5565b01515f1960f88460031b161c191690555f8080610282565b9192602060018192868b01518155019401920161026d565b5f80527f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e563601f830160051c81019160208410610317575b601f0160051c01905b81811061030c57506100a8565b5f81556001016102ff565b90915081906102f6565b90607f1690610096565b5f80fd5b6040519190601f01601f191682016001600160401b0381118382101761023f57604052565b81601f8201121561032b578051906001600160401b03821161023f57610383601f8301601f191660200161032f565b928284526020838301011161032b57815f9260208093018386015e830101529056fe6080806040526004361015610012575f80fd5b5f3560e01c90816301ffc9a7146108955750806306fdde031461086e578063095ea7b3146107df57806318160ddd146107ba57806318bf50771461074857806323b872dd146106665780632b8c49e3146105b4578063313ce567146105775780633644e515146104ef57806340c10f19146104c857806370a08231146104965780637ecebe001461046457806395d89b4114610346578063a9059cbb146102ca578063d505accf146101045763dd62ed3e146100cc575f80fd5b346101005760403660031901126101005760206100f86100ea61092a565b6100f2610940565b90610a64565b604051908152f35b5f80fd5b346101005760e03660031901126101005761011d61092a565b610125610940565b604435916064356084359260ff84168403610100576001600160a01b0316936e22d473030f116ddee9f6b43ac78ba3851881191517156102bd57610167610956565b60208151910120908242116102b0576040519360018060a01b03169465383775081901600e52855f5260c06020600c20958654957f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f8252602082019586528660408301967fc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc688528b6060850198468a528c608087019330855260a08820602e527f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9885252528688525260a082015220604e526042602c205f5260ff1660205260a43560405260c43560605260208060805f60015afa93853d51036102a3577f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92594602094019055856303faf4f960a51b176040526034602c2055a3005b63ddafbaef5f526004601cfd5b631a15a3cc5f526004601cfd5b633f68539a5f526004601cfd5b34610100576040366003190112610100576102e361092a565b602435906387a211a2600c52335f526020600c2080548084116103395783900390555f526020600c20818154019055602052600c5160601c335f80516020610b02833981519152602080a3602060405160018152f35b63f4d678b85f526004601cfd5b34610100575f366003190112610100576040515f6001548060011c9060018116801561045a575b6020831081146104465782855290811561042a57506001146103d4575b50819003601f01601f191681019067ffffffffffffffff8211818310176103c057604082905281906103bc9082610900565b0390f35b634e487b7160e01b5f52604160045260245ffd5b60015f9081529091507fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf65b8282106104145750602091508201018261038a565b60018160209254838588010152019101906103ff565b90506020925060ff191682840152151560051b8201018261038a565b634e487b7160e01b5f52602260045260245ffd5b91607f169161036d565b346101005760203660031901126101005761047d61092a565b6338377508600c525f52602080600c2054604051908152f35b34610100576020366003190112610100576104af61092a565b6387a211a2600c525f52602080600c2054604051908152f35b34610100576040366003190112610100576104ed6104e461092a565b60243590610aa1565b005b34610100575f36600319011261010057602060a061050b610956565b828151910120604051907f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f8252838201527fc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc6604082015246606082015230608082015220604051908152f35b34610100575f36600319011261010057602060405160ff7f0000000000000000000000000000000000000000000000000000000000000000168152f35b34610100576040366003190112610100576105cd61092a565b602435906105e3336028602160991b0114610a29565b6387a211a2600c52805f526020600c208054808411610339578390039055816805345cdf77eb68f44c54036805345cdf77eb68f44c55815f5260018060a01b03165f815f80516020610b02833981519152602083a36040519182527fb90795a66650155983e242cac3e1ac1a4dc26f8ed2987f3ce416a34e00111fd460203393a3005b346101005760603660031901126101005761067f61092a565b610687610940565b604435908260601b6e22d473030f116ddee9f6b43ac78ba333036106fe575b6387a211a217600c526020600c2080548084116103395783900390555f526020600c20818154019055602052600c5160601c9060018060a01b03165f80516020610b02833981519152602080a3602060405160018152f35b33602052637f5e9f208117600c526034600c20908154918219610724575b5090506106a6565b82851161073b57846387a211a2930390558561071c565b6313be252b5f526004601cfd5b346101005760403660031901126101005761076161092a565b602435610776336028602160991b0114610a29565b6107808183610aa1565b60405190815233916001600160a01b0316907fde22baff038e3a3e08407cbdf617deed74e869a7ba517df611e33131c6e6ea0490602090a3005b34610100575f3660031901126101005760206805345cdf77eb68f44c54604051908152f35b34610100576040366003190112610100576107f861092a565b602435906001600160a01b0381166e22d473030f116ddee9f6b43ac78ba31882191517156102bd57602052637f5e9f20600c52335f52806034600c20555f52602c5160601c337f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560205fa3602060405160018152f35b34610100575f366003190112610100576103bc610889610956565b60405191829182610900565b34610100576020366003190112610100576004359063ffffffff60e01b821680920361010057602091630cccc66560e21b81149081156108ef575b81156108de575b5015158152f35b6301ffc9a760e01b149050836108d7565b6336372b0760e01b811491506108d0565b602060409281835280519182918282860152018484015e5f828201840152601f01601f1916010190565b600435906001600160a01b038216820361010057565b602435906001600160a01b038216820361010057565b604051905f80548060011c90600181168015610a1f575b60208310811461044657828652908115610a0357506001146109af575b50829003601f01601f1916820167ffffffffffffffff8111838210176103c057604052565b5f8080529091507f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e5635b8282106109ed5750602091508301015f61098a565b60018160209254838589010152019101906109d8565b90506020925060ff191682850152151560051b8301015f61098a565b91607f169161096d565b15610a3057565b60405162461bcd60e51b815260206004820152600c60248201526b155b985d5d1a1bdc9a5e995960a21b6044820152606490fd5b906001600160a01b0381166e22d473030f116ddee9f6b43ac78ba314610a9a57602052637f5e9f20600c525f526034600c205490565b50505f1990565b6805345cdf77eb68f44c54828101908110610af4576805345cdf77eb68f44c556387a211a2600c525f526020600c20818154019055602052600c5160601c5f5f80516020610b02833981519152602080a3565b63e5cfe9575f526004601cfdfeddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3efa164736f6c634300081a000a" as Hex;
export const deployedBytecode =
    "0x6080806040526004361015610012575f80fd5b5f3560e01c90816301ffc9a7146108955750806306fdde031461086e578063095ea7b3146107df57806318160ddd146107ba57806318bf50771461074857806323b872dd146106665780632b8c49e3146105b4578063313ce567146105775780633644e515146104ef57806340c10f19146104c857806370a08231146104965780637ecebe001461046457806395d89b4114610346578063a9059cbb146102ca578063d505accf146101045763dd62ed3e146100cc575f80fd5b346101005760403660031901126101005760206100f86100ea61092a565b6100f2610940565b90610a64565b604051908152f35b5f80fd5b346101005760e03660031901126101005761011d61092a565b610125610940565b604435916064356084359260ff84168403610100576001600160a01b0316936e22d473030f116ddee9f6b43ac78ba3851881191517156102bd57610167610956565b60208151910120908242116102b0576040519360018060a01b03169465383775081901600e52855f5260c06020600c20958654957f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f8252602082019586528660408301967fc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc688528b6060850198468a528c608087019330855260a08820602e527f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9885252528688525260a082015220604e526042602c205f5260ff1660205260a43560405260c43560605260208060805f60015afa93853d51036102a3577f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92594602094019055856303faf4f960a51b176040526034602c2055a3005b63ddafbaef5f526004601cfd5b631a15a3cc5f526004601cfd5b633f68539a5f526004601cfd5b34610100576040366003190112610100576102e361092a565b602435906387a211a2600c52335f526020600c2080548084116103395783900390555f526020600c20818154019055602052600c5160601c335f80516020610b02833981519152602080a3602060405160018152f35b63f4d678b85f526004601cfd5b34610100575f366003190112610100576040515f6001548060011c9060018116801561045a575b6020831081146104465782855290811561042a57506001146103d4575b50819003601f01601f191681019067ffffffffffffffff8211818310176103c057604082905281906103bc9082610900565b0390f35b634e487b7160e01b5f52604160045260245ffd5b60015f9081529091507fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf65b8282106104145750602091508201018261038a565b60018160209254838588010152019101906103ff565b90506020925060ff191682840152151560051b8201018261038a565b634e487b7160e01b5f52602260045260245ffd5b91607f169161036d565b346101005760203660031901126101005761047d61092a565b6338377508600c525f52602080600c2054604051908152f35b34610100576020366003190112610100576104af61092a565b6387a211a2600c525f52602080600c2054604051908152f35b34610100576040366003190112610100576104ed6104e461092a565b60243590610aa1565b005b34610100575f36600319011261010057602060a061050b610956565b828151910120604051907f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f8252838201527fc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc6604082015246606082015230608082015220604051908152f35b34610100575f36600319011261010057602060405160ff7f0000000000000000000000000000000000000000000000000000000000000000168152f35b34610100576040366003190112610100576105cd61092a565b602435906105e3336028602160991b0114610a29565b6387a211a2600c52805f526020600c208054808411610339578390039055816805345cdf77eb68f44c54036805345cdf77eb68f44c55815f5260018060a01b03165f815f80516020610b02833981519152602083a36040519182527fb90795a66650155983e242cac3e1ac1a4dc26f8ed2987f3ce416a34e00111fd460203393a3005b346101005760603660031901126101005761067f61092a565b610687610940565b604435908260601b6e22d473030f116ddee9f6b43ac78ba333036106fe575b6387a211a217600c526020600c2080548084116103395783900390555f526020600c20818154019055602052600c5160601c9060018060a01b03165f80516020610b02833981519152602080a3602060405160018152f35b33602052637f5e9f208117600c526034600c20908154918219610724575b5090506106a6565b82851161073b57846387a211a2930390558561071c565b6313be252b5f526004601cfd5b346101005760403660031901126101005761076161092a565b602435610776336028602160991b0114610a29565b6107808183610aa1565b60405190815233916001600160a01b0316907fde22baff038e3a3e08407cbdf617deed74e869a7ba517df611e33131c6e6ea0490602090a3005b34610100575f3660031901126101005760206805345cdf77eb68f44c54604051908152f35b34610100576040366003190112610100576107f861092a565b602435906001600160a01b0381166e22d473030f116ddee9f6b43ac78ba31882191517156102bd57602052637f5e9f20600c52335f52806034600c20555f52602c5160601c337f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560205fa3602060405160018152f35b34610100575f366003190112610100576103bc610889610956565b60405191829182610900565b34610100576020366003190112610100576004359063ffffffff60e01b821680920361010057602091630cccc66560e21b81149081156108ef575b81156108de575b5015158152f35b6301ffc9a760e01b149050836108d7565b6336372b0760e01b811491506108d0565b602060409281835280519182918282860152018484015e5f828201840152601f01601f1916010190565b600435906001600160a01b038216820361010057565b602435906001600160a01b038216820361010057565b604051905f80548060011c90600181168015610a1f575b60208310811461044657828652908115610a0357506001146109af575b50829003601f01601f1916820167ffffffffffffffff8111838210176103c057604052565b5f8080529091507f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e5635b8282106109ed5750602091508301015f61098a565b60018160209254838589010152019101906109d8565b90506020925060ff191682850152151560051b8301015f61098a565b91607f169161096d565b15610a3057565b60405162461bcd60e51b815260206004820152600c60248201526b155b985d5d1a1bdc9a5e995960a21b6044820152606490fd5b906001600160a01b0381166e22d473030f116ddee9f6b43ac78ba314610a9a57602052637f5e9f20600c525f526034600c205490565b50505f1990565b6805345cdf77eb68f44c54828101908110610af4576805345cdf77eb68f44c556387a211a2600c525f526020600c20818154019055602052600c5160601c5f5f80516020610b02833981519152602080a3565b63e5cfe9575f526004601cfdfeddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3efa164736f6c634300081a000a" as Hex;
export const MockSuperchainERC20 = {
    abi,
    bytecode,
    deployedBytecode,
};
