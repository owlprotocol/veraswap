import { Hex } from "viem";

export const _constructor = {
    type: "constructor",
    inputs: [
        { name: "_entryPoint", type: "address", internalType: "contract IEntryPoint" },
        { name: "_owner", type: "address", internalType: "address" },
    ],
    stateMutability: "nonpayable",
} as const;
export const addStake = {
    type: "function",
    name: "addStake",
    inputs: [{ name: "unstakeDelaySec", type: "uint32", internalType: "uint32" }],
    outputs: [],
    stateMutability: "payable",
} as const;
export const deposit = {
    type: "function",
    name: "deposit",
    inputs: [],
    outputs: [],
    stateMutability: "payable",
} as const;
export const entryPoint = {
    type: "function",
    name: "entryPoint",
    inputs: [],
    outputs: [{ name: "", type: "address", internalType: "contract IEntryPoint" }],
    stateMutability: "view",
} as const;
export const owner = {
    type: "function",
    name: "owner",
    inputs: [],
    outputs: [{ name: "", type: "address", internalType: "address" }],
    stateMutability: "view",
} as const;
export const postOp = {
    type: "function",
    name: "postOp",
    inputs: [
        { name: "mode", type: "uint8", internalType: "enum IPaymaster.PostOpMode" },
        { name: "context", type: "bytes", internalType: "bytes" },
        { name: "actualGasCost", type: "uint256", internalType: "uint256" },
        { name: "actualUserOpFeePerGas", type: "uint256", internalType: "uint256" },
    ],
    outputs: [],
    stateMutability: "nonpayable",
} as const;
export const renounceOwnership = {
    type: "function",
    name: "renounceOwnership",
    inputs: [],
    outputs: [],
    stateMutability: "nonpayable",
} as const;
export const transferOwnership = {
    type: "function",
    name: "transferOwnership",
    inputs: [{ name: "newOwner", type: "address", internalType: "address" }],
    outputs: [],
    stateMutability: "nonpayable",
} as const;
export const unlockStake = {
    type: "function",
    name: "unlockStake",
    inputs: [],
    outputs: [],
    stateMutability: "nonpayable",
} as const;
export const validatePaymasterUserOp = {
    type: "function",
    name: "validatePaymasterUserOp",
    inputs: [
        {
            name: "userOp",
            type: "tuple",
            internalType: "struct PackedUserOperation",
            components: [
                { name: "sender", type: "address", internalType: "address" },
                { name: "nonce", type: "uint256", internalType: "uint256" },
                { name: "initCode", type: "bytes", internalType: "bytes" },
                { name: "callData", type: "bytes", internalType: "bytes" },
                { name: "accountGasLimits", type: "bytes32", internalType: "bytes32" },
                { name: "preVerificationGas", type: "uint256", internalType: "uint256" },
                { name: "gasFees", type: "bytes32", internalType: "bytes32" },
                { name: "paymasterAndData", type: "bytes", internalType: "bytes" },
                { name: "signature", type: "bytes", internalType: "bytes" },
            ],
        },
        { name: "userOpHash", type: "bytes32", internalType: "bytes32" },
        { name: "maxCost", type: "uint256", internalType: "uint256" },
    ],
    outputs: [
        { name: "context", type: "bytes", internalType: "bytes" },
        { name: "validationData", type: "uint256", internalType: "uint256" },
    ],
    stateMutability: "nonpayable",
} as const;
export const withdrawStake = {
    type: "function",
    name: "withdrawStake",
    inputs: [{ name: "withdrawAddress", type: "address", internalType: "address payable" }],
    outputs: [],
    stateMutability: "nonpayable",
} as const;
export const withdrawTo = {
    type: "function",
    name: "withdrawTo",
    inputs: [
        { name: "withdrawAddress", type: "address", internalType: "address payable" },
        { name: "amount", type: "uint256", internalType: "uint256" },
    ],
    outputs: [],
    stateMutability: "nonpayable",
} as const;
export const OwnershipTransferred = {
    type: "event",
    name: "OwnershipTransferred",
    inputs: [
        { name: "previousOwner", type: "address", indexed: true, internalType: "address" },
        { name: "newOwner", type: "address", indexed: true, internalType: "address" },
    ],
    anonymous: false,
} as const;
export const BalanceNotReimbursed = {
    type: "error",
    name: "BalanceNotReimbursed",
    inputs: [
        { name: "sender", type: "address", internalType: "address" },
        { name: "reimbursed", type: "uint256", internalType: "uint256" },
        { name: "actualGasCost", type: "uint256", internalType: "uint256" },
    ],
} as const;
export const OwnableInvalidOwner = {
    type: "error",
    name: "OwnableInvalidOwner",
    inputs: [{ name: "owner", type: "address", internalType: "address" }],
} as const;
export const OwnableUnauthorizedAccount = {
    type: "error",
    name: "OwnableUnauthorizedAccount",
    inputs: [{ name: "account", type: "address", internalType: "address" }],
} as const;
export const functions = [
    _constructor,
    addStake,
    deposit,
    entryPoint,
    owner,
    postOp,
    renounceOwnership,
    transferOwnership,
    unlockStake,
    validatePaymasterUserOp,
    withdrawStake,
    withdrawTo,
] as const;
export const events = [OwnershipTransferred] as const;
export const errors = [BalanceNotReimbursed, OwnableInvalidOwner, OwnableUnauthorizedAccount] as const;
export const abi = [...functions, ...events, ...errors] as const;

export const bytecode =
    "0x60a08060405234610196576040816108e4803803809161001f82856101c0565b833981010312610196578051906001600160a01b0382169081830361019657602001516001600160a01b038116908190036101965780156101ad575f80546001600160a01b0319811683178255604051936020938593602493859392916001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09080a36301ffc9a760e01b825263122a0e9b60e31b60048301525afa9081156101a2575f91610163575b501561011e576080526040516106ec90816101f88239608051818181610138015281816101d70152818161025f015281816102c9015281816104ee0152818161058601526106720152f35b60405162461bcd60e51b815260206004820152601e60248201527f49456e747279506f696e7420696e74657266616365206d69736d6174636800006044820152606490fd5b90506020813d60201161019a575b8161017e602093836101c0565b8101031261019657518015158103610196575f6100d3565b5f80fd5b3d9150610171565b6040513d5f823e3d90fd5b631e4fbdf760e01b5f525f60045260245ffd5b601f909101601f19168101906001600160401b038211908210176101e357604052565b634e487b7160e01b5f52604160045260245ffdfe60806040526004361015610011575f80fd5b5f803560e01c80630396cb601461055e578063205c2878146104c957806352b7512c1461042b578063715018a6146103d15780637c627b211461031f5780638da5cb5b146102f8578063b0d691fe146102b3578063bb9fe6bf14610243578063c23a5cea146101b2578063d0e30db0146101235763f2fde38b14610093575f80fd5b34610120576020366003190112610120576004356001600160a01b0381169081900361011c576100c161064a565b80156101085781546001600160a01b03198116821783556001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08380a380f35b631e4fbdf760e01b82526004829052602482fd5b5080fd5b80fd5b508060031936011261012057335c3401335d807f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316803b156101af57816024916040519283809263b760faf960e01b825230600483015234905af180156101a4576101935750f35b8161019d91610614565b6101205780f35b6040513d84823e3d90fd5b50fd5b503461012057602036600319011261012057806101cd6105fe565b6101d561064a565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690813b1561023f5760405163611d2e7560e11b81526001600160a01b0390911660048201529082908290602490829084905af180156101a4576101935750f35b5050fd5b503461012057806003193601126101205761025c61064a565b807f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316803b156101af5781809160046040518094819363bb9fe6bf60e01b83525af180156101a4576101935750f35b50346101205780600319360112610120576040517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b5034610120578060031936011261012057546040516001600160a01b039091168152602090f35b503461012057608036600319011261012057600360043510156101205760243567ffffffffffffffff811161011c573660238201121561011c57806004013567ffffffffffffffff81116103cd578101903660248301116103cd57602060443592610388610670565b829003126103cd57602401359060018060a01b0382168092036103cd57815c8181106103b45703905d80f35b6064939263030e272360e31b8452600452602452604452fd5b8280fd5b50346101205780600319360112610120576103ea61064a565b80546001600160a01b03198116825581906001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a380f35b50346101205760603660031901126101205760043567ffffffffffffffff811161011c57610120600319823603011261011c57610466610670565b6004013560018060a01b03811680910361011c57606090604051906020820190815260208252610497604083610614565b604051938492604084525180928160408601528585015e82820184018190526020830152601f01601f19168101030190f35b503461012057604036600319011261012057806104e46105fe565b6104ec61064a565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690813b1561023f5760405163040b850f60e31b81526001600160a01b03909116600482015260248035908201529082908290604490829084905af180156101a4576101935750f35b5060203660031901126105fa5760043563ffffffff81168091036105fa5761058461064a565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690813b156105fa575f90602460405180948193621cb65b60e51b8352600483015234905af180156105ef576105e1575080f35b6105ed91505f90610614565b005b6040513d5f823e3d90fd5b5f80fd5b600435906001600160a01b03821682036105fa57565b90601f8019910116810190811067ffffffffffffffff82111761063657604052565b634e487b7160e01b5f52604160045260245ffd5b5f546001600160a01b0316330361065d57565b63118cdaa760e01b5f523360045260245ffd5b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031633036106a257565b60405162461bcd60e51b815260206004820152601560248201527414d95b99195c881b9bdd08115b9d1c9e541bda5b9d605a1b6044820152606490fdfea164736f6c634300081a000a" as Hex;
export const deployedBytecode =
    "0x60806040526004361015610011575f80fd5b5f803560e01c80630396cb601461055e578063205c2878146104c957806352b7512c1461042b578063715018a6146103d15780637c627b211461031f5780638da5cb5b146102f8578063b0d691fe146102b3578063bb9fe6bf14610243578063c23a5cea146101b2578063d0e30db0146101235763f2fde38b14610093575f80fd5b34610120576020366003190112610120576004356001600160a01b0381169081900361011c576100c161064a565b80156101085781546001600160a01b03198116821783556001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08380a380f35b631e4fbdf760e01b82526004829052602482fd5b5080fd5b80fd5b508060031936011261012057335c3401335d807f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316803b156101af57816024916040519283809263b760faf960e01b825230600483015234905af180156101a4576101935750f35b8161019d91610614565b6101205780f35b6040513d84823e3d90fd5b50fd5b503461012057602036600319011261012057806101cd6105fe565b6101d561064a565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690813b1561023f5760405163611d2e7560e11b81526001600160a01b0390911660048201529082908290602490829084905af180156101a4576101935750f35b5050fd5b503461012057806003193601126101205761025c61064a565b807f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316803b156101af5781809160046040518094819363bb9fe6bf60e01b83525af180156101a4576101935750f35b50346101205780600319360112610120576040517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b5034610120578060031936011261012057546040516001600160a01b039091168152602090f35b503461012057608036600319011261012057600360043510156101205760243567ffffffffffffffff811161011c573660238201121561011c57806004013567ffffffffffffffff81116103cd578101903660248301116103cd57602060443592610388610670565b829003126103cd57602401359060018060a01b0382168092036103cd57815c8181106103b45703905d80f35b6064939263030e272360e31b8452600452602452604452fd5b8280fd5b50346101205780600319360112610120576103ea61064a565b80546001600160a01b03198116825581906001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a380f35b50346101205760603660031901126101205760043567ffffffffffffffff811161011c57610120600319823603011261011c57610466610670565b6004013560018060a01b03811680910361011c57606090604051906020820190815260208252610497604083610614565b604051938492604084525180928160408601528585015e82820184018190526020830152601f01601f19168101030190f35b503461012057604036600319011261012057806104e46105fe565b6104ec61064a565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690813b1561023f5760405163040b850f60e31b81526001600160a01b03909116600482015260248035908201529082908290604490829084905af180156101a4576101935750f35b5060203660031901126105fa5760043563ffffffff81168091036105fa5761058461064a565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690813b156105fa575f90602460405180948193621cb65b60e51b8352600483015234905af180156105ef576105e1575080f35b6105ed91505f90610614565b005b6040513d5f823e3d90fd5b5f80fd5b600435906001600160a01b03821682036105fa57565b90601f8019910116810190811067ffffffffffffffff82111761063657604052565b634e487b7160e01b5f52604160045260245ffd5b5f546001600160a01b0316330361065d57565b63118cdaa760e01b5f523360045260245ffd5b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031633036106a257565b60405162461bcd60e51b815260206004820152601560248201527414d95b99195c881b9bdd08115b9d1c9e541bda5b9d605a1b6044820152606490fdfea164736f6c634300081a000a" as Hex;
export const BalanceDeltaPaymaster = {
    abi,
    bytecode,
    deployedBytecode,
};
