/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as PortfolioImport } from './routes/portfolio'
import { Route as CreateImport } from './routes/create'
import { Route as IndexImport } from './routes/index'
import { Route as BucketsIndexImport } from './routes/buckets/index'
import { Route as BucketsAddressImport } from './routes/buckets/$address'

// Create/Update Routes

const PortfolioRoute = PortfolioImport.update({
  id: '/portfolio',
  path: '/portfolio',
  getParentRoute: () => rootRoute,
} as any)

const CreateRoute = CreateImport.update({
  id: '/create',
  path: '/create',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const BucketsIndexRoute = BucketsIndexImport.update({
  id: '/buckets/',
  path: '/buckets/',
  getParentRoute: () => rootRoute,
} as any)

const BucketsAddressRoute = BucketsAddressImport.update({
  id: '/buckets/$address',
  path: '/buckets/$address',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/create': {
      id: '/create'
      path: '/create'
      fullPath: '/create'
      preLoaderRoute: typeof CreateImport
      parentRoute: typeof rootRoute
    }
    '/portfolio': {
      id: '/portfolio'
      path: '/portfolio'
      fullPath: '/portfolio'
      preLoaderRoute: typeof PortfolioImport
      parentRoute: typeof rootRoute
    }
    '/buckets/$address': {
      id: '/buckets/$address'
      path: '/buckets/$address'
      fullPath: '/buckets/$address'
      preLoaderRoute: typeof BucketsAddressImport
      parentRoute: typeof rootRoute
    }
    '/buckets/': {
      id: '/buckets/'
      path: '/buckets'
      fullPath: '/buckets'
      preLoaderRoute: typeof BucketsIndexImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/create': typeof CreateRoute
  '/portfolio': typeof PortfolioRoute
  '/buckets/$address': typeof BucketsAddressRoute
  '/buckets': typeof BucketsIndexRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/create': typeof CreateRoute
  '/portfolio': typeof PortfolioRoute
  '/buckets/$address': typeof BucketsAddressRoute
  '/buckets': typeof BucketsIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/create': typeof CreateRoute
  '/portfolio': typeof PortfolioRoute
  '/buckets/$address': typeof BucketsAddressRoute
  '/buckets/': typeof BucketsIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/' | '/create' | '/portfolio' | '/buckets/$address' | '/buckets'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/create' | '/portfolio' | '/buckets/$address' | '/buckets'
  id:
    | '__root__'
    | '/'
    | '/create'
    | '/portfolio'
    | '/buckets/$address'
    | '/buckets/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  CreateRoute: typeof CreateRoute
  PortfolioRoute: typeof PortfolioRoute
  BucketsAddressRoute: typeof BucketsAddressRoute
  BucketsIndexRoute: typeof BucketsIndexRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  CreateRoute: CreateRoute,
  PortfolioRoute: PortfolioRoute,
  BucketsAddressRoute: BucketsAddressRoute,
  BucketsIndexRoute: BucketsIndexRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/create",
        "/portfolio",
        "/buckets/$address",
        "/buckets/"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/create": {
      "filePath": "create.tsx"
    },
    "/portfolio": {
      "filePath": "portfolio.tsx"
    },
    "/buckets/$address": {
      "filePath": "buckets/$address.tsx"
    },
    "/buckets/": {
      "filePath": "buckets/index.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
